% +--------------------------------------------------------------------------+
% | 'TrussMe' module version 0.0 - BSD 3-Clause License - Copyright (c) 2023 |
% | Current version authors:                                                 |
% |   Davide Stocco and Matteo Larcher.                                      |
% +--------------------------------------------------------------------------+

% Matlab generated code for system: Test_10
% This file has been automatically generated by TrussMe.
% DISCLAIMER: If you need to edit it, do it wisely!

classdef Test_10 < TrussMe.System
  %
  % Test_10 class
  %
  methods
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function this = Test_10( varargin )
      % Class constructor.

      % User data
      if (nargin == 0)
        data.E = .2e12;
        data.G = .1e12;
        data.A = .1e-2;
        data.I__x = .2e-4;
        data.I__y = .1e-4;
        data.I__z = .1e-4;
        data.K = .1e5;
        data.T = .1e5;
        data.l = 1;
        data.F__x = .1e3;
        data.F__y = 0.;
        data.F__z = 0.;
        data.M__x = 0.;
        data.M__y = 0.;
        data.M__z = 0.;
      elseif (nargin == 1 && isstruct(varargin{1}))
        data = varargin{1};
      elseif (nargin == 15)
        data.E = varargin{1};
        data.G = varargin{2};
        data.A = varargin{3};
        data.I__x = varargin{4};
        data.I__y = varargin{5};
        data.I__z = varargin{6};
        data.K = varargin{7};
        data.T = varargin{8};
        data.l = varargin{9};
        data.F__x = varargin{10};
        data.F__y = varargin{11};
        data.F__z = varargin{12};
        data.M__x = varargin{13};
        data.M__y = varargin{14};
        data.M__z = varargin{15};
      else
        error('wrong number of input arguments.');
      end

      % Call superclass constructor
      this = this@TrussMe.System(data);
    end % Test_10
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_K = K( this, ~, ~ )
      % Evaluate the stiffness matrix K.

      % Extract properties
      E = this.m_data.E;
      G = this.m_data.G;
      A = this.m_data.A;
      I__x = this.m_data.I__x;
      I__y = this.m_data.I__y;
      I__z = this.m_data.I__z;
      K = this.m_data.K;
      T = this.m_data.T;
      l = this.m_data.l;

      % Extract inputs
      % No inputs

      % Evaluate function
      out_1_1 = K;
      out_7_1 = -K;
      out_2_2 = K;
      out_8_2 = out_7_1;
      out_3_3 = K;
      out_9_3 = out_8_2;
      out_4_4 = T;
      out_10_4 = -T;
      out_5_5 = T;
      out_11_5 = out_10_4;
      out_6_6 = T;
      out_12_6 = out_11_5;
      out_1_7 = out_9_3;
      t2 = l ^ 2;
      t4 = t2 * l;
      t5 = t4 * K;
      t7 = E * I__z;
      t10 = 0.1e1 / t4;
      out_7_7 = t10 * (t2 * E * A + 2 * t5 + 12 * t7) / 2;
      t12 = t2 * A;
      t13 = 12 * I__z;
      out_8_7 = t10 * (t12 - t13) * E / 2;
      t17 = sqrt(2);
      t18 = E * t17;
      t19 = 0.1e1 / t2;
      t21 = t19 * I__z * t18;
      t22 = 3 * t21;
      out_12_7 = -t22;
      out_13_7 = -t10 * (t12 + t13) * E / 2;
      out_14_7 = -out_8_7;
      out_18_7 = out_12_7;
      out_2_8 = out_1_7;
      out_7_8 = out_8_7;
      out_8_8 = out_7_7;
      out_12_8 = t22;
      out_13_8 = out_14_7;
      out_14_8 = out_13_7;
      out_18_8 = out_12_8;
      out_3_9 = out_2_8;
      t27 = E * I__y;
      out_9_9 = t10 * (t5 + 12 * t27);
      t31 = t19 * I__y * t18;
      out_10_9 = 3 * t31;
      out_11_9 = -out_10_9;
      t32 = t10 * t27;
      t33 = 12 * t32;
      out_15_9 = -t33;
      out_16_9 = out_10_9;
      out_17_9 = out_11_9;
      out_4_10 = out_12_6;
      out_9_10 = out_16_9;
      t34 = 4 * t27;
      t35 = G * I__x;
      t36 = T * l;
      t39 = 0.1e1 / l;
      out_10_10 = t39 * (t34 + t35 + 2 * t36) / 2;
      t41 = -t34 + t35;
      out_11_10 = t39 * t41 / 2;
      out_15_10 = out_17_9;
      t43 = 2 * t27;
      out_16_10 = t39 * (t43 - t35) / 2;
      t46 = -t43 - t35;
      out_17_10 = t39 * t46 / 2;
      out_5_11 = out_4_10;
      out_9_11 = out_15_10;
      out_10_11 = out_11_10;
      out_11_11 = out_10_10;
      out_15_11 = out_9_10;
      out_16_11 = out_17_10;
      out_17_11 = out_16_10;
      out_6_12 = out_5_11;
      out_7_12 = out_18_7;
      out_8_12 = out_18_8;
      out_12_12 = t39 * (4 * t7 + t36);
      out_13_12 = out_8_12;
      out_14_12 = out_7_12;
      t50 = t39 * t7;
      out_18_12 = 2 * t50;
      out_7_13 = out_14_8;
      out_8_13 = out_13_8;
      out_12_13 = out_13_12;
      out_13_13 = t10 * (2 * t12 + 15 * I__z) * E / 2;
      out_14_13 = -0.9e1 / 0.2e1 * t10 * t7;
      out_18_13 = out_12_13;
      t58 = 3 * I__z;
      t62 = t10 * (t12 + t58) * E / 2;
      out_19_13 = -t62;
      out_20_13 = t10 * (t12 - t58) * E / 2;
      out_24_13 = 0.3e1 / 0.2e1 * t21;
      out_7_14 = out_8_13;
      out_8_14 = out_7_13;
      out_12_14 = out_14_12;
      out_13_14 = out_14_13;
      out_14_14 = out_13_13;
      out_18_14 = out_12_14;
      out_19_14 = out_20_13;
      out_20_14 = out_19_13;
      out_24_14 = out_24_13;
      out_9_15 = out_15_9;
      out_10_15 = out_9_11;
      out_11_15 = out_15_11;
      out_15_15 = 24 * t32;
      out_16_15 = -6 * t31;
      out_21_15 = out_9_15;
      out_22_15 = out_10_15;
      out_23_15 = out_22_15;
      out_9_16 = out_11_15;
      out_10_16 = out_17_11;
      out_11_16 = out_16_11;
      out_15_16 = out_16_15;
      out_16_16 = t39 * (t34 + t35);
      out_21_16 = out_9_16;
      out_22_16 = out_10_16;
      out_23_16 = -t39 * t46 / 2;
      out_9_17 = out_23_15;
      out_10_17 = out_11_16;
      out_11_17 = out_22_16;
      out_17_17 = out_16_16;
      out_21_17 = out_21_16;
      out_22_17 = out_23_16;
      out_23_17 = out_11_17;
      out_7_18 = out_18_14;
      out_8_18 = out_18_13;
      out_12_18 = out_18_12;
      out_13_18 = out_8_18;
      out_14_18 = out_7_18;
      out_18_18 = 4 * t50;
      out_13_19 = out_20_14;
      out_14_19 = out_19_14;
      out_19_19 = t62;
      out_20_19 = -out_14_19;
      out_24_19 = -out_24_14;
      out_13_20 = out_14_19;
      out_14_20 = out_13_19;
      out_19_20 = out_20_19;
      out_20_20 = out_19_19;
      out_24_20 = out_24_19;
      out_15_21 = out_21_15;
      out_16_21 = out_21_17;
      out_17_21 = out_16_21;
      out_21_21 = t33;
      out_22_21 = out_17_21;
      out_23_21 = out_22_21;
      out_15_22 = out_9_17;
      out_16_22 = out_23_17;
      out_17_22 = out_22_17;
      out_21_22 = out_23_21;
      out_22_22 = out_17_17 / 2;
      out_23_22 = -t39 * t41 / 2;
      out_15_23 = out_15_22;
      out_16_23 = out_17_22;
      out_17_23 = out_16_22;
      out_21_23 = out_21_22;
      out_22_23 = out_23_22;
      out_23_23 = out_22_22;
      out_13_24 = out_24_14;
      out_14_24 = out_13_24;
      out_19_24 = out_24_20;
      out_20_24 = out_19_24;
      out_24_24 = 3 * t50;

      % Store outputs
      out_K = sparse(24, 24);
      out_K(1, 1) = out_1_1;
      out_K(7, 1) = out_7_1;
      out_K(2, 2) = out_2_2;
      out_K(8, 2) = out_8_2;
      out_K(3, 3) = out_3_3;
      out_K(9, 3) = out_9_3;
      out_K(4, 4) = out_4_4;
      out_K(10, 4) = out_10_4;
      out_K(5, 5) = out_5_5;
      out_K(11, 5) = out_11_5;
      out_K(6, 6) = out_6_6;
      out_K(12, 6) = out_12_6;
      out_K(1, 7) = out_1_7;
      out_K(7, 7) = out_7_7;
      out_K(8, 7) = out_8_7;
      out_K(12, 7) = out_12_7;
      out_K(13, 7) = out_13_7;
      out_K(14, 7) = out_14_7;
      out_K(18, 7) = out_18_7;
      out_K(2, 8) = out_2_8;
      out_K(7, 8) = out_7_8;
      out_K(8, 8) = out_8_8;
      out_K(12, 8) = out_12_8;
      out_K(13, 8) = out_13_8;
      out_K(14, 8) = out_14_8;
      out_K(18, 8) = out_18_8;
      out_K(3, 9) = out_3_9;
      out_K(9, 9) = out_9_9;
      out_K(10, 9) = out_10_9;
      out_K(11, 9) = out_11_9;
      out_K(15, 9) = out_15_9;
      out_K(16, 9) = out_16_9;
      out_K(17, 9) = out_17_9;
      out_K(4, 10) = out_4_10;
      out_K(9, 10) = out_9_10;
      out_K(10, 10) = out_10_10;
      out_K(11, 10) = out_11_10;
      out_K(15, 10) = out_15_10;
      out_K(16, 10) = out_16_10;
      out_K(17, 10) = out_17_10;
      out_K(5, 11) = out_5_11;
      out_K(9, 11) = out_9_11;
      out_K(10, 11) = out_10_11;
      out_K(11, 11) = out_11_11;
      out_K(15, 11) = out_15_11;
      out_K(16, 11) = out_16_11;
      out_K(17, 11) = out_17_11;
      out_K(6, 12) = out_6_12;
      out_K(7, 12) = out_7_12;
      out_K(8, 12) = out_8_12;
      out_K(12, 12) = out_12_12;
      out_K(13, 12) = out_13_12;
      out_K(14, 12) = out_14_12;
      out_K(18, 12) = out_18_12;
      out_K(7, 13) = out_7_13;
      out_K(8, 13) = out_8_13;
      out_K(12, 13) = out_12_13;
      out_K(13, 13) = out_13_13;
      out_K(14, 13) = out_14_13;
      out_K(18, 13) = out_18_13;
      out_K(19, 13) = out_19_13;
      out_K(20, 13) = out_20_13;
      out_K(24, 13) = out_24_13;
      out_K(7, 14) = out_7_14;
      out_K(8, 14) = out_8_14;
      out_K(12, 14) = out_12_14;
      out_K(13, 14) = out_13_14;
      out_K(14, 14) = out_14_14;
      out_K(18, 14) = out_18_14;
      out_K(19, 14) = out_19_14;
      out_K(20, 14) = out_20_14;
      out_K(24, 14) = out_24_14;
      out_K(9, 15) = out_9_15;
      out_K(10, 15) = out_10_15;
      out_K(11, 15) = out_11_15;
      out_K(15, 15) = out_15_15;
      out_K(16, 15) = out_16_15;
      out_K(21, 15) = out_21_15;
      out_K(22, 15) = out_22_15;
      out_K(23, 15) = out_23_15;
      out_K(9, 16) = out_9_16;
      out_K(10, 16) = out_10_16;
      out_K(11, 16) = out_11_16;
      out_K(15, 16) = out_15_16;
      out_K(16, 16) = out_16_16;
      out_K(21, 16) = out_21_16;
      out_K(22, 16) = out_22_16;
      out_K(23, 16) = out_23_16;
      out_K(9, 17) = out_9_17;
      out_K(10, 17) = out_10_17;
      out_K(11, 17) = out_11_17;
      out_K(17, 17) = out_17_17;
      out_K(21, 17) = out_21_17;
      out_K(22, 17) = out_22_17;
      out_K(23, 17) = out_23_17;
      out_K(7, 18) = out_7_18;
      out_K(8, 18) = out_8_18;
      out_K(12, 18) = out_12_18;
      out_K(13, 18) = out_13_18;
      out_K(14, 18) = out_14_18;
      out_K(18, 18) = out_18_18;
      out_K(13, 19) = out_13_19;
      out_K(14, 19) = out_14_19;
      out_K(19, 19) = out_19_19;
      out_K(20, 19) = out_20_19;
      out_K(24, 19) = out_24_19;
      out_K(13, 20) = out_13_20;
      out_K(14, 20) = out_14_20;
      out_K(19, 20) = out_19_20;
      out_K(20, 20) = out_20_20;
      out_K(24, 20) = out_24_20;
      out_K(15, 21) = out_15_21;
      out_K(16, 21) = out_16_21;
      out_K(17, 21) = out_17_21;
      out_K(21, 21) = out_21_21;
      out_K(22, 21) = out_22_21;
      out_K(23, 21) = out_23_21;
      out_K(15, 22) = out_15_22;
      out_K(16, 22) = out_16_22;
      out_K(17, 22) = out_17_22;
      out_K(21, 22) = out_21_22;
      out_K(22, 22) = out_22_22;
      out_K(23, 22) = out_23_22;
      out_K(15, 23) = out_15_23;
      out_K(16, 23) = out_16_23;
      out_K(17, 23) = out_17_23;
      out_K(21, 23) = out_21_23;
      out_K(22, 23) = out_22_23;
      out_K(23, 23) = out_23_23;
      out_K(13, 24) = out_13_24;
      out_K(14, 24) = out_14_24;
      out_K(19, 24) = out_19_24;
      out_K(20, 24) = out_20_24;
      out_K(24, 24) = out_24_24;
    end % K
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_K_ff = K_ff( this, ~, ~ )
      % Evaluate the stiffness matrix K_ff.

      % Extract properties
      E = this.m_data.E;
      G = this.m_data.G;
      A = this.m_data.A;
      I__x = this.m_data.I__x;
      I__y = this.m_data.I__y;
      I__z = this.m_data.I__z;
      K = this.m_data.K;
      T = this.m_data.T;
      l = this.m_data.l;

      % Extract inputs
      % No inputs

      % Evaluate function
      out_1_1 = T;
      out_7_1 = -T;
      t2 = l ^ 2;
      t4 = t2 * l;
      t5 = t4 * K;
      t7 = E * I__z;
      t10 = 0.1e1 / t4;
      out_2_2 = t10 * (t2 * E * A + 2 * t5 + 12 * t7) / 2;
      t12 = t2 * A;
      t13 = 12 * I__z;
      out_3_2 = t10 * (t12 - t13) * E / 2;
      t17 = sqrt(2);
      t18 = E * t17;
      t19 = 0.1e1 / t2;
      t21 = t19 * I__z * t18;
      t22 = 3 * t21;
      out_7_2 = -t22;
      out_8_2 = -t10 * (t12 + t13) * E / 2;
      out_9_2 = -out_3_2;
      out_13_2 = out_7_2;
      out_2_3 = out_3_2;
      out_3_3 = out_2_2;
      out_7_3 = t22;
      out_8_3 = out_9_2;
      out_9_3 = out_8_2;
      out_13_3 = out_7_3;
      t27 = E * I__y;
      out_4_4 = t10 * (t5 + 12 * t27);
      t31 = t19 * I__y * t18;
      out_5_4 = 3 * t31;
      out_6_4 = -out_5_4;
      t32 = t10 * t27;
      out_10_4 = -12 * t32;
      out_11_4 = out_5_4;
      out_12_4 = out_6_4;
      out_4_5 = out_11_4;
      t34 = 4 * t27;
      t35 = G * I__x;
      t36 = T * l;
      t39 = 0.1e1 / l;
      out_5_5 = t39 * (t34 + t35 + 2 * t36) / 2;
      out_6_5 = t39 * (-t34 + t35) / 2;
      out_10_5 = out_12_4;
      t43 = 2 * t27;
      out_11_5 = t39 * (t43 - t35) / 2;
      out_12_5 = t39 * (-t43 - t35) / 2;
      out_4_6 = out_10_5;
      out_5_6 = out_6_5;
      out_6_6 = out_5_5;
      out_10_6 = out_4_5;
      out_11_6 = out_12_5;
      out_12_6 = out_11_5;
      out_1_7 = out_7_1;
      out_2_7 = out_13_2;
      out_3_7 = out_13_3;
      out_7_7 = t39 * (4 * t7 + t36);
      out_8_7 = out_3_7;
      out_9_7 = out_2_7;
      t50 = t39 * t7;
      out_13_7 = 2 * t50;
      out_2_8 = out_9_3;
      out_3_8 = out_8_3;
      out_7_8 = out_8_7;
      out_8_8 = t10 * (2 * t12 + 15 * I__z) * E / 2;
      out_9_8 = -0.9e1 / 0.2e1 * t10 * t7;
      out_13_8 = out_7_8;
      out_14_8 = 0.3e1 / 0.2e1 * t21;
      out_2_9 = out_3_8;
      out_3_9 = out_2_8;
      out_7_9 = out_9_7;
      out_8_9 = out_9_8;
      out_9_9 = out_8_8;
      out_13_9 = out_7_9;
      out_14_9 = out_14_8;
      out_4_10 = out_10_4;
      out_5_10 = out_4_6;
      out_6_10 = out_10_6;
      out_10_10 = 24 * t32;
      out_11_10 = -6 * t31;
      out_4_11 = out_6_10;
      out_5_11 = out_12_6;
      out_6_11 = out_11_6;
      out_10_11 = out_11_10;
      out_11_11 = t39 * (t34 + t35);
      out_4_12 = out_5_10;
      out_5_12 = out_6_11;
      out_6_12 = out_5_11;
      out_12_12 = out_11_11;
      out_2_13 = out_13_9;
      out_3_13 = out_13_8;
      out_7_13 = out_13_7;
      out_8_13 = out_3_13;
      out_9_13 = out_2_13;
      out_13_13 = 4 * t50;
      out_8_14 = out_14_9;
      out_9_14 = out_8_14;
      out_14_14 = 3 * t50;

      % Store outputs
      out_K_ff = sparse(14, 14);
      out_K_ff(1, 1) = out_1_1;
      out_K_ff(7, 1) = out_7_1;
      out_K_ff(2, 2) = out_2_2;
      out_K_ff(3, 2) = out_3_2;
      out_K_ff(7, 2) = out_7_2;
      out_K_ff(8, 2) = out_8_2;
      out_K_ff(9, 2) = out_9_2;
      out_K_ff(13, 2) = out_13_2;
      out_K_ff(2, 3) = out_2_3;
      out_K_ff(3, 3) = out_3_3;
      out_K_ff(7, 3) = out_7_3;
      out_K_ff(8, 3) = out_8_3;
      out_K_ff(9, 3) = out_9_3;
      out_K_ff(13, 3) = out_13_3;
      out_K_ff(4, 4) = out_4_4;
      out_K_ff(5, 4) = out_5_4;
      out_K_ff(6, 4) = out_6_4;
      out_K_ff(10, 4) = out_10_4;
      out_K_ff(11, 4) = out_11_4;
      out_K_ff(12, 4) = out_12_4;
      out_K_ff(4, 5) = out_4_5;
      out_K_ff(5, 5) = out_5_5;
      out_K_ff(6, 5) = out_6_5;
      out_K_ff(10, 5) = out_10_5;
      out_K_ff(11, 5) = out_11_5;
      out_K_ff(12, 5) = out_12_5;
      out_K_ff(4, 6) = out_4_6;
      out_K_ff(5, 6) = out_5_6;
      out_K_ff(6, 6) = out_6_6;
      out_K_ff(10, 6) = out_10_6;
      out_K_ff(11, 6) = out_11_6;
      out_K_ff(12, 6) = out_12_6;
      out_K_ff(1, 7) = out_1_7;
      out_K_ff(2, 7) = out_2_7;
      out_K_ff(3, 7) = out_3_7;
      out_K_ff(7, 7) = out_7_7;
      out_K_ff(8, 7) = out_8_7;
      out_K_ff(9, 7) = out_9_7;
      out_K_ff(13, 7) = out_13_7;
      out_K_ff(2, 8) = out_2_8;
      out_K_ff(3, 8) = out_3_8;
      out_K_ff(7, 8) = out_7_8;
      out_K_ff(8, 8) = out_8_8;
      out_K_ff(9, 8) = out_9_8;
      out_K_ff(13, 8) = out_13_8;
      out_K_ff(14, 8) = out_14_8;
      out_K_ff(2, 9) = out_2_9;
      out_K_ff(3, 9) = out_3_9;
      out_K_ff(7, 9) = out_7_9;
      out_K_ff(8, 9) = out_8_9;
      out_K_ff(9, 9) = out_9_9;
      out_K_ff(13, 9) = out_13_9;
      out_K_ff(14, 9) = out_14_9;
      out_K_ff(4, 10) = out_4_10;
      out_K_ff(5, 10) = out_5_10;
      out_K_ff(6, 10) = out_6_10;
      out_K_ff(10, 10) = out_10_10;
      out_K_ff(11, 10) = out_11_10;
      out_K_ff(4, 11) = out_4_11;
      out_K_ff(5, 11) = out_5_11;
      out_K_ff(6, 11) = out_6_11;
      out_K_ff(10, 11) = out_10_11;
      out_K_ff(11, 11) = out_11_11;
      out_K_ff(4, 12) = out_4_12;
      out_K_ff(5, 12) = out_5_12;
      out_K_ff(6, 12) = out_6_12;
      out_K_ff(12, 12) = out_12_12;
      out_K_ff(2, 13) = out_2_13;
      out_K_ff(3, 13) = out_3_13;
      out_K_ff(7, 13) = out_7_13;
      out_K_ff(8, 13) = out_8_13;
      out_K_ff(9, 13) = out_9_13;
      out_K_ff(13, 13) = out_13_13;
      out_K_ff(8, 14) = out_8_14;
      out_K_ff(9, 14) = out_9_14;
      out_K_ff(14, 14) = out_14_14;
    end % K_ff
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_K_fs = K_fs( this, ~, ~ )
      % Evaluate the stiffness matrix K_fs.

      % Extract properties
      E = this.m_data.E;
      G = this.m_data.G;
      A = this.m_data.A;
      I__x = this.m_data.I__x;
      I__y = this.m_data.I__y;
      I__z = this.m_data.I__z;
      K = this.m_data.K;
      T = this.m_data.T;
      l = this.m_data.l;

      % Extract inputs
      % No inputs

      % Evaluate function
      out_2_1 = -K;
      out_3_2 = out_2_1;
      out_4_3 = out_3_2;
      out_5_4 = -T;
      out_6_5 = out_5_4;
      t1 = l ^ 2;
      t2 = t1 * A;
      t3 = 3 * I__z;
      t7 = 0.1e1 / t1 / l;
      out_8_6 = -t7 * (t2 + t3) * E / 2;
      out_9_6 = t7 * (t2 - t3) * E / 2;
      t13 = sqrt(2);
      t14 = E * t13;
      t15 = 0.1e1 / t1;
      out_14_6 = -0.3e1 / 0.2e1 * t15 * I__z * t14;
      out_8_7 = out_9_6;
      out_9_7 = out_8_6;
      out_14_7 = out_14_6;
      t19 = E * I__y;
      out_10_8 = -12 * t7 * t19;
      out_11_8 = 3 * t15 * I__y * t14;
      out_12_8 = out_11_8;
      out_10_9 = -out_12_8;
      t24 = 2 * t19;
      t25 = G * I__x;
      t27 = 0.1e1 / l;
      out_11_9 = t27 * (t24 - t25) / 2;
      out_12_9 = t27 * (t24 + t25) / 2;
      out_10_10 = out_10_9;
      out_11_10 = out_12_9;
      out_12_10 = out_11_9;

      % Store outputs
      out_K_fs = sparse(14, 10);
      out_K_fs(2, 1) = out_2_1;
      out_K_fs(3, 2) = out_3_2;
      out_K_fs(4, 3) = out_4_3;
      out_K_fs(5, 4) = out_5_4;
      out_K_fs(6, 5) = out_6_5;
      out_K_fs(8, 6) = out_8_6;
      out_K_fs(9, 6) = out_9_6;
      out_K_fs(14, 6) = out_14_6;
      out_K_fs(8, 7) = out_8_7;
      out_K_fs(9, 7) = out_9_7;
      out_K_fs(14, 7) = out_14_7;
      out_K_fs(10, 8) = out_10_8;
      out_K_fs(11, 8) = out_11_8;
      out_K_fs(12, 8) = out_12_8;
      out_K_fs(10, 9) = out_10_9;
      out_K_fs(11, 9) = out_11_9;
      out_K_fs(12, 9) = out_12_9;
      out_K_fs(10, 10) = out_10_10;
      out_K_fs(11, 10) = out_11_10;
      out_K_fs(12, 10) = out_12_10;
    end % K_fs
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_K_sf = K_sf( this, ~, ~ )
      % Evaluate the stiffness matrix K_sf.

      % Extract properties
      E = this.m_data.E;
      G = this.m_data.G;
      A = this.m_data.A;
      I__x = this.m_data.I__x;
      I__y = this.m_data.I__y;
      I__z = this.m_data.I__z;
      K = this.m_data.K;
      T = this.m_data.T;
      l = this.m_data.l;

      % Extract inputs
      % No inputs

      % Evaluate function
      out_1_2 = -K;
      out_2_3 = out_1_2;
      out_3_4 = out_2_3;
      out_4_5 = -T;
      out_5_6 = out_4_5;
      t1 = l ^ 2;
      t2 = t1 * A;
      t3 = 3 * I__z;
      t7 = 0.1e1 / t1 / l;
      out_6_8 = -t7 * (t2 + t3) * E / 2;
      out_7_8 = t7 * (t2 - t3) * E / 2;
      out_6_9 = out_7_8;
      out_7_9 = out_6_8;
      t13 = E * I__y;
      out_8_10 = -12 * t7 * t13;
      t16 = sqrt(2);
      t17 = E * t16;
      t18 = 0.1e1 / t1;
      t21 = 3 * t18 * I__y * t17;
      out_9_10 = -t21;
      out_10_10 = out_9_10;
      out_8_11 = t21;
      t22 = 2 * t13;
      t23 = G * I__x;
      t25 = 0.1e1 / l;
      out_9_11 = t25 * (t22 - t23) / 2;
      out_10_11 = t25 * (t22 + t23) / 2;
      out_8_12 = out_8_11;
      out_9_12 = out_10_11;
      out_10_12 = out_9_11;
      out_6_14 = -0.3e1 / 0.2e1 * t18 * I__z * t17;
      out_7_14 = out_6_14;

      % Store outputs
      out_K_sf = sparse(10, 14);
      out_K_sf(1, 2) = out_1_2;
      out_K_sf(2, 3) = out_2_3;
      out_K_sf(3, 4) = out_3_4;
      out_K_sf(4, 5) = out_4_5;
      out_K_sf(5, 6) = out_5_6;
      out_K_sf(6, 8) = out_6_8;
      out_K_sf(7, 8) = out_7_8;
      out_K_sf(6, 9) = out_6_9;
      out_K_sf(7, 9) = out_7_9;
      out_K_sf(8, 10) = out_8_10;
      out_K_sf(9, 10) = out_9_10;
      out_K_sf(10, 10) = out_10_10;
      out_K_sf(8, 11) = out_8_11;
      out_K_sf(9, 11) = out_9_11;
      out_K_sf(10, 11) = out_10_11;
      out_K_sf(8, 12) = out_8_12;
      out_K_sf(9, 12) = out_9_12;
      out_K_sf(10, 12) = out_10_12;
      out_K_sf(6, 14) = out_6_14;
      out_K_sf(7, 14) = out_7_14;
    end % K_sf
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_K_ss = K_ss( this, ~, ~ )
      % Evaluate the stiffness matrix K_ss.

      % Extract properties
      E = this.m_data.E;
      G = this.m_data.G;
      A = this.m_data.A;
      I__x = this.m_data.I__x;
      I__y = this.m_data.I__y;
      I__z = this.m_data.I__z;
      K = this.m_data.K;
      T = this.m_data.T;
      l = this.m_data.l;

      % Extract inputs
      % No inputs

      % Evaluate function
      out_1_1 = K;
      out_2_2 = K;
      out_3_3 = K;
      out_4_4 = T;
      out_5_5 = T;
      t1 = l ^ 2;
      t2 = t1 * A;
      t3 = 3 * I__z;
      t7 = 0.1e1 / t1 / l;
      out_6_6 = t7 * (t2 + t3) * E / 2;
      out_7_6 = -t7 * (t2 - t3) * E / 2;
      out_6_7 = out_7_6;
      out_7_7 = out_6_6;
      t13 = E * I__y;
      out_8_8 = 12 * t7 * t13;
      t15 = sqrt(2);
      out_9_8 = 3 / t1 * I__y * E * t15;
      out_10_8 = out_9_8;
      out_8_9 = out_10_8;
      t20 = 4 * t13;
      t21 = G * I__x;
      t23 = 0.1e1 / l;
      out_9_9 = t23 * (t20 + t21) / 2;
      out_10_9 = t23 * (t20 - t21) / 2;
      out_8_10 = out_8_9;
      out_9_10 = out_10_9;
      out_10_10 = out_9_9;

      % Store outputs
      out_K_ss = sparse(10, 10);
      out_K_ss(1, 1) = out_1_1;
      out_K_ss(2, 2) = out_2_2;
      out_K_ss(3, 3) = out_3_3;
      out_K_ss(4, 4) = out_4_4;
      out_K_ss(5, 5) = out_5_5;
      out_K_ss(6, 6) = out_6_6;
      out_K_ss(7, 6) = out_7_6;
      out_K_ss(6, 7) = out_6_7;
      out_K_ss(7, 7) = out_7_7;
      out_K_ss(8, 8) = out_8_8;
      out_K_ss(9, 8) = out_9_8;
      out_K_ss(10, 8) = out_10_8;
      out_K_ss(8, 9) = out_8_9;
      out_K_ss(9, 9) = out_9_9;
      out_K_ss(10, 9) = out_10_9;
      out_K_ss(8, 10) = out_8_10;
      out_K_ss(9, 10) = out_9_10;
      out_K_ss(10, 10) = out_10_10;
    end % K_ss
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_d = d( this, ~, ~ )
      % Evaluate the deformation vector d.

      % Extract properties
      E = this.m_data.E;
      G = this.m_data.G;
      A = this.m_data.A;
      I__x = this.m_data.I__x;
      I__y = this.m_data.I__y;
      I__z = this.m_data.I__z;
      K = this.m_data.K;
      T = this.m_data.T;
      l = this.m_data.l;
      F__x = this.m_data.F__x;
      F__y = this.m_data.F__y;
      F__z = this.m_data.F__z;
      M__x = this.m_data.M__x;
      M__y = this.m_data.M__y;
      M__z = this.m_data.M__z;

      % Extract inputs
      % No inputs

      % Evaluate function
      t2 = l ^ 2;
      t3 = t2 * l;
      t5 = t3 * M__z * A * K;
      t7 = sqrt(2);
      t9 = t2 * t7 * K;
      t11 = 3 * t9 * F__x * I__z;
      t14 = 3 * t9 * F__y * I__z;
      t16 = A * E;
      t18 = 6 * t16 * I__z * M__z;
      t22 = 6 * I__z * K * M__z * l;
      t24 = 0.1e1 / t2;
      t26 = 0.1e1 / K;
      t28 = 0.1e1 / A;
      t29 = 0.1e1 / E;
      t30 = t29 * t28;
      t32 = 0.1e1 / I__z * t30;
      out_6 = t32 * t26 * t24 * (-t5 - t11 + t14 + t18 + t22) / 6;
      t34 = 0.1e1 / l;
      t36 = F__x * l;
      t37 = F__y * l;
      t38 = t7 * M__z;
      out_7 = (t36 + t37 + t38) * t34 * t26 / 2;
      out_8 = t34 * t26 * (t36 + t37 - t38) / 2;
      t44 = E ^ 2;
      t45 = I__y ^ 2;
      t46 = t45 * t44;
      t47 = t7 * M__x;
      t50 = t44 * t7;
      t51 = M__y * t45;
      t54 = F__z * E;
      t55 = G * t54;
      t56 = I__y * I__x;
      t60 = T * I__y;
      t64 = G * E;
      t65 = I__x * t64;
      t66 = M__x * I__y;
      t70 = E * t7;
      t76 = T * M__y;
      t77 = l * t76;
      t80 = F__z * G;
      t89 = K * I__y;
      t93 = E * I__y;
      t94 = T * K;
      t95 = t2 ^ 2;
      t96 = t95 * t94;
      t99 = G * I__x;
      t101 = G * t44;
      t102 = t45 * I__x;
      t103 = t102 * t101;
      t105 = T * l;
      t112 = 0.1e1 / (6 * t3 * K * t46 + 6 * l * t60 * t65 + 4 * t3 * t89 * t65 + 6 * t105 * t46 + 4 * t96 * t93 + t96 * t99 + 6 * t103);
      out_9 = t112 * t2 * (3 * M__y * t56 * G * t70 + t2 * T * I__x * t80 + 6 * t77 * I__y * t70 + 4 * l * t56 * t55 + 4 * t2 * t60 * t54 + 3 * t7 * t66 * t65 - 6 * t47 * t46 + 6 * t51 * t50) / 2;
      t114 = t56 * t64;
      t115 = K * M__y;
      t116 = t95 * T;
      t118 = t116 * t115 * t114;
      t120 = G ^ 2;
      t121 = t120 * F__z;
      t122 = t121 * t70;
      t123 = I__x ^ 2;
      t124 = I__y * t123;
      t125 = t2 * T;
      t127 = t125 * t124 * t122;
      t128 = 6 * t127;
      t129 = t80 * t50;
      t130 = t95 * K;
      t132 = t130 * t102 * t129;
      t136 = 4 * t130 * t124 * t122;
      t138 = t125 * t102 * t129;
      t139 = 6 * t138;
      t142 = M__x * T;
      t144 = t142 * t89 * t99 * E * t95;
      t146 = t80 * t70;
      t147 = t95 * l;
      t148 = t147 * t94;
      t150 = t148 * t56 * t146;
      t152 = K * t46;
      t153 = t95 * t142;
      t155 = 8 * t153 * t152;
      t156 = t95 * t76;
      t157 = t156 * t152;
      t158 = 4 * t157;
      t159 = t123 * t120;
      t160 = K * t159;
      t161 = t153 * t160;
      t162 = 2 * t161;
      t163 = t156 * t160;
      t164 = 2 * t163;
      t165 = F__z * t50;
      t168 = l * t45 * t159 * t165;
      t169 = 6 * t168;
      t170 = K * t45;
      t171 = t147 * T;
      t172 = t171 * t170;
      t174 = 4 * t172 * t165;
      t175 = -6 * t118 - t128 - 10 * t132 - t136 - t139 - 10 * t144 - 5 * t150 - t155 - t158 - t162 - t164 - t169 - t174;
      t181 = I__x * t101;
      t182 = t3 * M__x;
      t184 = t182 * t170 * t181;
      t186 = t3 * M__y;
      t188 = t186 * t170 * t181;
      t190 = t120 * E;
      t191 = t123 * t190;
      t193 = t182 * t89 * t191;
      t196 = t186 * t89 * t191;
      t199 = t105 * t66 * t191;
      t200 = 12 * t199;
      t201 = I__y * M__y;
      t203 = t105 * t201 * t191;
      t204 = 12 * t203;
      t209 = t171 * K * t123 * t120 * F__z * t7;
      t210 = t44 * E;
      t211 = G * t210;
      t212 = t45 * I__y;
      t213 = t212 * I__x;
      t215 = M__x * t213 * t211;
      t216 = 12 * t215;
      t218 = M__y * t213 * t211;
      t219 = 12 * t218;
      t220 = t212 * t210;
      t222 = l * t142 * t220;
      t223 = 12 * t222;
      t224 = t77 * t220;
      t225 = 12 * t224;
      t226 = t120 * t44;
      t227 = t45 * t123;
      t229 = M__x * t227 * t226;
      t230 = 12 * t229;
      t232 = M__y * t227 * t226;
      t233 = 12 * t232;
      t234 = -24 * t142 * t102 * G * t44 * l - 26 * t184 - 10 * t188 - 8 * t193 - 8 * t196 - t200 - t204 - t209 - t216 + t219 - t223 + t225 - t230 - t233;
      t240 = 0.1e1 / (t105 * t93 + t105 * t99 + t114);
      t241 = t240 * t112;
      out_10 = -t241 * l * (t175 + t234) / 4;
      t247 = 2 * t118 - t128 - 2 * t132 - t139 - 6 * t144 + t150 + t155 + t158 - t162 - t164 - t169 + t174;
      t253 = t105 * t51 * t181;
      t255 = -10 * t184 - 2 * t188 - 2 * t193 - 2 * t196 + t216 - t219 + t223 - t225 - t230 - t233 - 24 * t253 - t200 - t204;
      out_11 = -t241 * l * (t247 + t255) / 4;
      out_12 = out_6;
      t264 = F__x * K;
      t265 = l * t7;
      t268 = K * M__z;
      out_13 = -t29 * t28 * t26 * (-t7 * F__x * t16 - t7 * F__y * t16 - 2 * t265 * t264 + 2 * t268) * t7 / 4;
      t276 = F__x * t16;
      t277 = F__y * t16;
      t279 = F__y * K * l;
      out_14 = t30 * t26 * (t7 * t268 + t276 + t277 + 2 * t279) / 2;
      t285 = t227 * t226;
      t286 = t3 * t7;
      t287 = t286 * t115;
      t290 = t213 * t211;
      t291 = t105 * t47;
      t294 = t7 * M__y;
      t295 = t105 * t294;
      t302 = T ^ 2;
      t303 = t2 * t302;
      t310 = F__z * t44;
      t318 = t99 * t54;
      t319 = t95 * t2;
      t320 = t319 * t302;
      t324 = K * M__x;
      t325 = t286 * t324;
      t332 = t302 * t7;
      t337 = T * t7;
      t338 = t95 * t337;
      t339 = t338 * t324;
      t342 = t338 * t115;
      t345 = t124 * t190;
      t350 = 6 * t147 * t332 * t324 * t114 + 8 * t171 * t89 * t159 * t54 + 36 * t303 * t294 * t103 + 36 * t303 * t47 * t103 + 44 * t172 * t99 * t310 + 8 * t320 * t89 * t318 + 42 * t339 * t103 + 6 * t342 * t103 + 12 * t287 * t285 + 36 * t291 * t285 + 36 * t295 * t285 + 12 * t325 * t285 + 12 * t287 * t290 + 72 * t291 * t290 + 72 * t295 * t290 + 60 * t325 * t290 + 3 * t339 * t345 + 3 * t342 * t345;
      t351 = F__z * t210;
      t352 = G * t351;
      t356 = t120 * t310;
      t366 = G * t310;
      t367 = t3 * t302;
      t371 = t120 * t54;
      t375 = K * t220;
      t382 = t147 * t302;
      t389 = t45 * t310;
      t390 = t302 * K;
      t391 = t319 * t390;
      t394 = t123 * t121;
      t397 = t212 * t123;
      t401 = t120 * t210;
      t402 = t123 * t401;
      t403 = M__x * t212;
      t407 = M__y * t212;
      t411 = M__x * t220;
      t412 = t2 * t332;
      t415 = M__y * t220;
      t422 = 48 * t130 * t213 * t352 + 16 * t130 * t227 * t356 + 96 * t125 * t213 * t352 + 60 * t125 * t227 * t356 + 60 * t367 * t102 * t366 + 12 * t367 * t124 * t371 + 60 * t116 * t47 * t375 + 12 * t116 * t294 * t375 + 24 * t382 * t47 * t152 + 48 * t148 * t212 * t351 + 16 * t391 * t389 + t391 * t394 + 48 * l * t397 * t120 * t351 + 36 * t7 * t403 * t402 + 36 * t7 * t407 * t402 + 36 * t412 * t411 + 36 * t412 * t415 + 48 * t3 * t302 * t212 * t351;
      out_15 = t240 * t112 / I__y * t29 * t2 * (t350 + t422) / 24;
      t430 = I__x * t211;
      t437 = t123 * t226;
      t444 = t147 * t390;
      t466 = t302 * t45;
      t474 = 6 * t2 * t302 * I__y * t191 + 6 * t3 * K * t212 * t430 + 12 * l * T * t212 * t430 + 12 * l * T * t45 * t437 + 14 * t116 * t170 * t181 + 5 * t116 * t89 * t191 + 4 * t3 * t170 * t437 + 12 * t2 * t466 * t181 + 5 * t382 * t89 * t65 + t444 * t159 + 6 * t303 * t220 + 6 * t96 * t220 + 6 * t397 * t401 + 4 * t444 * t46;
      t475 = 0.1e1 / t474;
      t481 = t95 * t7;
      t482 = t481 * t324;
      t485 = t481 * t115;
      t492 = t125 * t47;
      t507 = t171 * t47;
      t510 = t171 * t294;
      t513 = K * t93;
      t514 = t320 * t47;
      t521 = K * t99;
      t527 = 14 * t319 * T * t89 * t318 + 26 * t147 * t337 * t324 * t114 + 24 * t367 * t47 * t114 + 12 * t125 * t294 * t345 + 12 * t265 * t403 * t430 + 32 * t482 * t103 + 4 * t485 * t103 + 48 * t492 * t103 + 32 * t507 * t152 + 4 * t510 * t152 + 2 * t507 * t160 + 2 * t510 * t160 + 5 * t482 * t345 + 5 * t485 * t345 + 12 * t492 * t345 + 16 * t514 * t513 + 4 * t514 * t521;
      t538 = t147 * K;
      t545 = t3 * T;
      t556 = t2 * t337;
      t565 = t319 * t94;
      t570 = t95 * t3 * t390;
      t583 = -12 * t265 * t407 * t430 + 12 * t265 * M__x * t45 * t437 + 12 * t265 * t51 * t437 + 20 * t538 * t102 * t366 + 4 * t538 * t124 * t371 + 24 * t545 * t102 * t366 + 12 * t545 * t124 * t371 + 12 * t95 * t302 * t56 * t55 + 12 * t556 * t411 - 12 * t556 * t415 + 24 * t3 * t332 * M__x * t46 + 20 * t565 * t389 + 8 * t570 * I__y * t54 + t565 * t394 + 2 * t570 * I__x * t80 + 12 * t2 * t227 * t356 + 12 * t95 * t466 * t310;
      out_16 = (t527 + t583) * t7 * t475 / 8;
      t597 = t302 * M__y;
      t598 = t147 * t597;
      t610 = -12 * t367 * t56 * t146 - 12 * t3 * t466 * t165 - 48 * t303 * t201 * t65 - 8 * t598 * t513 - 8 * t598 * t521 - 28 * t118 - 12 * t127 - 4 * t132 - t136 - 24 * t138 - 2 * t150 - t155 - 16 * t157 - 4 * t161 - 4 * t163 - 12 * t168;
      t627 = -48 * t2 * t597 * t46 - t174 - 8 * t184 - 16 * t188 - 10 * t193 - 10 * t196 - 24 * t199 - 24 * t203 - t209 + 24 * t215 - 24 * t218 + 24 * t222 - 24 * t224 - 24 * t229 - 24 * t232 - 96 * t253;
      out_17 = -t475 * (t610 + t627) * l / 8;
      out_18 = t32 * t26 * t24 * (2 * t5 + t18 - t11 + t14 + t22) / 6;
      out_24 = -t34 * t30 * t26 * (l * t264 + t276 + t277 + t279) * t7 / 2;

      % Store outputs
      out_d = zeros(24, 1);
      out_d(6) = out_6;
      out_d(7) = out_7;
      out_d(8) = out_8;
      out_d(9) = out_9;
      out_d(10) = out_10;
      out_d(11) = out_11;
      out_d(12) = out_12;
      out_d(13) = out_13;
      out_d(14) = out_14;
      out_d(15) = out_15;
      out_d(16) = out_16;
      out_d(17) = out_17;
      out_d(18) = out_18;
      out_d(24) = out_24;
    end % d
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_d_f = d_f( this, ~, ~ )
      % Evaluate the deformation vector d_f.

      % Extract properties
      E = this.m_data.E;
      G = this.m_data.G;
      A = this.m_data.A;
      I__x = this.m_data.I__x;
      I__y = this.m_data.I__y;
      I__z = this.m_data.I__z;
      K = this.m_data.K;
      T = this.m_data.T;
      l = this.m_data.l;
      F__x = this.m_data.F__x;
      F__y = this.m_data.F__y;
      F__z = this.m_data.F__z;
      M__x = this.m_data.M__x;
      M__y = this.m_data.M__y;
      M__z = this.m_data.M__z;

      % Extract inputs
      % No inputs

      % Evaluate function
      t2 = l ^ 2;
      t3 = t2 * l;
      t5 = t3 * M__z * A * K;
      t7 = sqrt(2);
      t9 = t2 * t7 * K;
      t11 = 3 * t9 * F__x * I__z;
      t14 = 3 * t9 * F__y * I__z;
      t16 = A * E;
      t18 = 6 * t16 * I__z * M__z;
      t22 = 6 * I__z * K * M__z * l;
      t24 = 0.1e1 / t2;
      t26 = 0.1e1 / K;
      t28 = 0.1e1 / A;
      t29 = 0.1e1 / E;
      t30 = t29 * t28;
      t32 = 0.1e1 / I__z * t30;
      out_1 = t32 * t26 * t24 * (-t5 - t11 + t14 + t18 + t22) / 6;
      t34 = 0.1e1 / l;
      t36 = F__x * l;
      t37 = F__y * l;
      t38 = t7 * M__z;
      out_2 = (t36 + t37 + t38) * t34 * t26 / 2;
      out_3 = t34 * t26 * (t36 + t37 - t38) / 2;
      t44 = E ^ 2;
      t45 = I__y ^ 2;
      t46 = t45 * t44;
      t47 = t7 * M__x;
      t50 = t44 * t7;
      t51 = M__y * t45;
      t54 = F__z * E;
      t55 = G * t54;
      t56 = I__y * I__x;
      t60 = T * I__y;
      t64 = G * E;
      t65 = I__x * t64;
      t66 = M__x * I__y;
      t70 = E * t7;
      t76 = T * M__y;
      t77 = l * t76;
      t80 = F__z * G;
      t89 = K * I__y;
      t93 = E * I__y;
      t94 = T * K;
      t95 = t2 ^ 2;
      t96 = t95 * t94;
      t99 = G * I__x;
      t101 = G * t44;
      t102 = t45 * I__x;
      t103 = t102 * t101;
      t105 = T * l;
      t112 = 0.1e1 / (6 * t3 * K * t46 + 6 * l * t60 * t65 + 4 * t3 * t89 * t65 + 6 * t105 * t46 + 4 * t96 * t93 + t96 * t99 + 6 * t103);
      out_4 = t112 * t2 * (3 * M__y * t56 * G * t70 + t2 * T * I__x * t80 + 6 * t77 * I__y * t70 + 4 * l * t56 * t55 + 4 * t2 * t60 * t54 + 3 * t7 * t66 * t65 - 6 * t47 * t46 + 6 * t51 * t50) / 2;
      t114 = K * t46;
      t115 = M__x * T;
      t116 = t95 * t115;
      t118 = 8 * t116 * t114;
      t119 = t95 * t76;
      t120 = t119 * t114;
      t121 = 4 * t120;
      t122 = G ^ 2;
      t123 = I__x ^ 2;
      t124 = t123 * t122;
      t125 = K * t124;
      t126 = t116 * t125;
      t127 = 2 * t126;
      t128 = t119 * t125;
      t129 = 2 * t128;
      t133 = t95 * l;
      t134 = t133 * T;
      t136 = t134 * K * t123 * t122 * F__z * t7;
      t137 = F__z * t50;
      t140 = l * t45 * t124 * t137;
      t141 = 6 * t140;
      t142 = K * t45;
      t143 = t134 * t142;
      t145 = 4 * t143 * t137;
      t151 = I__x * t101;
      t152 = t3 * M__x;
      t154 = t152 * t142 * t151;
      t156 = t3 * M__y;
      t158 = t156 * t142 * t151;
      t160 = t122 * E;
      t161 = t123 * t160;
      t163 = t152 * t89 * t161;
      t166 = t156 * t89 * t161;
      t169 = t105 * t66 * t161;
      t170 = 12 * t169;
      t171 = -24 * t115 * t102 * G * t44 * l - t118 - t121 - t127 - t129 - t136 - t141 - t145 - 26 * t154 - 10 * t158 - 8 * t163 - 8 * t166 - t170;
      t172 = I__y * M__y;
      t174 = t105 * t172 * t161;
      t175 = 12 * t174;
      t176 = t80 * t70;
      t177 = t133 * t94;
      t179 = t177 * t56 * t176;
      t181 = t44 * E;
      t182 = G * t181;
      t183 = t45 * I__y;
      t184 = t183 * I__x;
      t186 = M__x * t184 * t182;
      t187 = 12 * t186;
      t189 = M__y * t184 * t182;
      t190 = 12 * t189;
      t191 = t183 * t181;
      t193 = l * t115 * t191;
      t194 = 12 * t193;
      t195 = t77 * t191;
      t196 = 12 * t195;
      t197 = t122 * t44;
      t198 = t45 * t123;
      t200 = M__x * t198 * t197;
      t201 = 12 * t200;
      t203 = M__y * t198 * t197;
      t204 = 12 * t203;
      t205 = t56 * t64;
      t206 = K * M__y;
      t207 = t95 * T;
      t209 = t207 * t206 * t205;
      t211 = t122 * F__z;
      t212 = t211 * t70;
      t213 = I__y * t123;
      t214 = t2 * T;
      t216 = t214 * t213 * t212;
      t217 = 6 * t216;
      t218 = t80 * t50;
      t219 = t95 * K;
      t221 = t219 * t102 * t218;
      t225 = 4 * t219 * t213 * t212;
      t227 = t214 * t102 * t218;
      t228 = 6 * t227;
      t232 = t115 * t89 * t99 * E * t95;
      t234 = -t175 - 5 * t179 - t187 + t190 - t194 + t196 - t201 - t204 - 6 * t209 - t217 - 10 * t221 - t225 - t228 - 10 * t232;
      t240 = 0.1e1 / (t105 * t93 + t105 * t99 + t205);
      t241 = t240 * t112;
      out_5 = -t241 * l * (t171 + t234) / 4;
      t248 = t118 + t121 - t127 - t129 - t141 + t145 - 10 * t154 - 2 * t158 - 2 * t163 - 2 * t166 - t170 - t175;
      t250 = t105 * t51 * t151;
      t255 = t179 - 24 * t250 + t187 - t190 + t194 - t196 - t201 - t204 + 2 * t209 - t217 - 2 * t221 - t228 - 6 * t232;
      out_6 = -t241 * l * (t248 + t255) / 4;
      out_7 = out_1;
      t264 = F__x * K;
      t265 = l * t7;
      t268 = K * M__z;
      out_8 = -t29 * t28 * t26 * (-t7 * F__x * t16 - t7 * F__y * t16 - 2 * t265 * t264 + 2 * t268) * t7 / 4;
      t276 = F__x * t16;
      t277 = F__y * t16;
      t279 = F__y * K * l;
      out_9 = t30 * t26 * (t7 * t268 + t276 + t277 + 2 * t279) / 2;
      t285 = F__z * t181;
      t289 = F__z * t44;
      t290 = t45 * t289;
      t291 = T ^ 2;
      t292 = t291 * K;
      t293 = t95 * t2;
      t294 = t293 * t292;
      t297 = t123 * t211;
      t300 = t183 * t123;
      t304 = t122 * t181;
      t305 = t123 * t304;
      t306 = M__x * t183;
      t310 = M__y * t183;
      t314 = M__x * t191;
      t315 = t291 * t7;
      t316 = t2 * t315;
      t319 = M__y * t191;
      t322 = K * M__x;
      t327 = T * t7;
      t328 = t95 * t327;
      t329 = t328 * t322;
      t332 = t328 * t206;
      t335 = t213 * t160;
      t340 = t133 * t291;
      t344 = G * t285;
      t348 = t122 * t289;
      t358 = 48 * t177 * t183 * t285 + 16 * t294 * t290 + t294 * t297 + 48 * l * t300 * t122 * t285 + 36 * t7 * t306 * t305 + 36 * t7 * t310 * t305 + 36 * t316 * t314 + 36 * t316 * t319 + 6 * t133 * t315 * t322 * t205 + 42 * t329 * t103 + 6 * t332 * t103 + 3 * t329 * t335 + 3 * t332 * t335 + 24 * t340 * t47 * t114 + 48 * t219 * t184 * t344 + 16 * t219 * t198 * t348 + 96 * t214 * t184 * t344 + 60 * t214 * t198 * t348;
      t359 = G * t289;
      t360 = t3 * t291;
      t364 = t122 * t54;
      t368 = K * t191;
      t372 = t7 * M__y;
      t380 = t198 * t197;
      t381 = t3 * t7;
      t382 = t381 * t206;
      t385 = t184 * t182;
      t386 = t105 * t47;
      t389 = t105 * t372;
      t396 = t2 * t291;
      t410 = t99 * t54;
      t411 = t293 * t291;
      t415 = t381 * t322;
      t422 = 8 * t134 * t89 * t124 * t54 + 48 * t3 * t291 * t183 * t285 + 60 * t360 * t102 * t359 + 36 * t396 * t372 * t103 + 36 * t396 * t47 * t103 + 44 * t143 * t99 * t289 + 12 * t207 * t372 * t368 + 60 * t207 * t47 * t368 + 12 * t360 * t213 * t364 + 8 * t411 * t89 * t410 + 12 * t382 * t380 + 36 * t386 * t380 + 36 * t389 * t380 + 12 * t415 * t380 + 12 * t382 * t385 + 72 * t386 * t385 + 72 * t389 * t385 + 60 * t415 * t385;
      out_10 = t240 * t112 / I__y * t29 * t2 * (t358 + t422) / 24;
      t430 = I__x * t182;
      t437 = t123 * t197;
      t444 = t133 * t292;
      t466 = t291 * t45;
      t474 = 6 * t2 * t291 * I__y * t161 + 6 * t3 * K * t183 * t430 + 12 * l * T * t183 * t430 + 12 * l * T * t45 * t437 + 14 * t207 * t142 * t151 + 4 * t3 * t142 * t437 + 12 * t2 * t466 * t151 + 5 * t207 * t89 * t161 + 5 * t340 * t89 * t65 + t444 * t124 + 6 * t396 * t191 + 6 * t96 * t191 + 6 * t300 * t304 + 4 * t444 * t46;
      t475 = 0.1e1 / t474;
      t477 = t2 * t327;
      t486 = t293 * t94;
      t491 = t95 * t3 * t292;
      t505 = t134 * t47;
      t508 = t134 * t372;
      t511 = K * t93;
      t512 = t411 * t47;
      t519 = K * t99;
      t528 = 12 * t477 * t314 - 12 * t477 * t319 + 24 * t3 * t315 * M__x * t46 + 20 * t486 * t290 + 8 * t491 * I__y * t54 + t486 * t297 + 2 * t491 * I__x * t80 + 12 * t2 * t198 * t348 + 26 * t133 * t327 * t322 * t205 + 32 * t505 * t114 + 4 * t508 * t114 + 16 * t512 * t511 + 2 * t505 * t125 + 2 * t508 * t125 + 4 * t512 * t519 + 12 * t265 * t306 * t430 - 12 * t265 * t310 * t430;
      t536 = t133 * K;
      t543 = t3 * T;
      t557 = t95 * t7;
      t558 = t557 * t322;
      t561 = t557 * t206;
      t568 = t214 * t47;
      t583 = 12 * t265 * M__x * t45 * t437 + 12 * t265 * t51 * t437 + 20 * t536 * t102 * t359 + 4 * t536 * t213 * t364 + 24 * t543 * t102 * t359 + 12 * t543 * t213 * t364 + 12 * t95 * t291 * t56 * t55 + 12 * t95 * t466 * t289 + 32 * t558 * t103 + 4 * t561 * t103 + 5 * t558 * t335 + 5 * t561 * t335 + 48 * t568 * t103 + 12 * t568 * t335 + 12 * t214 * t372 * t335 + 24 * t360 * t47 * t205 + 14 * t293 * T * t89 * t410;
      out_11 = (t528 + t583) * t7 * t475 / 8;
      t589 = t291 * M__y;
      t590 = t133 * t589;
      t605 = -12 * t3 * t466 * t137 - 8 * t590 * t511 - 8 * t590 * t519 - t118 - 16 * t120 - 4 * t126 - 4 * t128 - t136 - 12 * t140 - t145 - 8 * t154 - 16 * t158 - 10 * t163 - 10 * t166 - 24 * t169 - 24 * t174;
      t627 = -48 * t396 * t172 * t65 - 12 * t360 * t56 * t176 - 48 * t2 * t589 * t46 - 2 * t179 + 24 * t186 - 24 * t189 + 24 * t193 - 24 * t195 - 24 * t200 - 24 * t203 - 28 * t209 - 12 * t216 - 4 * t221 - t225 - 24 * t227 - 96 * t250;
      out_12 = -t475 * (t605 + t627) * l / 8;
      out_13 = t32 * t26 * t24 * (2 * t5 + t18 - t11 + t14 + t22) / 6;
      out_14 = -t34 * t30 * t26 * (l * t264 + t276 + t277 + t279) * t7 / 2;

      % Store outputs
      out_d_f = zeros(14, 1);
      out_d_f(1) = out_1;
      out_d_f(2) = out_2;
      out_d_f(3) = out_3;
      out_d_f(4) = out_4;
      out_d_f(5) = out_5;
      out_d_f(6) = out_6;
      out_d_f(7) = out_7;
      out_d_f(8) = out_8;
      out_d_f(9) = out_9;
      out_d_f(10) = out_10;
      out_d_f(11) = out_11;
      out_d_f(12) = out_12;
      out_d_f(13) = out_13;
      out_d_f(14) = out_14;
    end % d_f
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_d_s = d_s( ~, ~, ~ )
      % Evaluate the deformation vector d_s.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_d_s = sparse(10, 1);
    end % d_s
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_f = f( this, ~, ~ )
      % Evaluate the force vector f.

      % Extract properties
      E = this.m_data.E;
      G = this.m_data.G;
      A = this.m_data.A;
      I__x = this.m_data.I__x;
      I__y = this.m_data.I__y;
      I__z = this.m_data.I__z;
      K = this.m_data.K;
      T = this.m_data.T;
      l = this.m_data.l;
      F__x = this.m_data.F__x;
      F__y = this.m_data.F__y;
      F__z = this.m_data.F__z;
      M__x = this.m_data.M__x;
      M__y = this.m_data.M__y;
      M__z = this.m_data.M__z;

      % Extract inputs
      % No inputs

      % Evaluate function
      t1 = 0.1e1 / l;
      t2 = F__x * l;
      t3 = F__y * l;
      t4 = sqrt(2);
      t5 = t4 * M__z;
      out_1 = -(t2 + t3 + t5) * t1 / 2;
      out_2 = -t1 * (t2 + t3 - t5) / 2;
      t12 = E ^ 2;
      t13 = I__y ^ 2;
      t14 = t13 * t12;
      t15 = t4 * M__x;
      t18 = t12 * t4;
      t19 = M__y * t13;
      t22 = F__z * E;
      t23 = G * t22;
      t24 = I__y * I__x;
      t28 = T * I__y;
      t29 = l ^ 2;
      t33 = G * E;
      t34 = I__x * t33;
      t35 = M__x * I__y;
      t39 = E * t4;
      t44 = I__y * t39;
      t45 = T * M__y;
      t46 = l * t45;
      t49 = F__z * G;
      t55 = t29 * l;
      t59 = K * I__y;
      t63 = E * I__y;
      t64 = T * K;
      t65 = t29 ^ 2;
      t66 = t65 * t64;
      t69 = G * I__x;
      t71 = G * t12;
      t72 = t13 * I__x;
      t73 = t72 * t71;
      t75 = T * l;
      t82 = 0.1e1 / (6 * t55 * K * t14 + 6 * l * t28 * t34 + 4 * t55 * t59 * t34 + 6 * t75 * t14 + 4 * t66 * t63 + t66 * t69 + 6 * t73);
      out_3 = -t82 * t29 * (3 * M__y * t24 * G * t39 + t29 * T * I__x * t49 + 4 * l * t24 * t23 + 4 * t29 * t28 * t22 + 3 * t4 * t35 * t34 - 6 * t15 * t14 + 6 * t19 * t18 + 6 * t46 * t44) * K / 2;
      t86 = t49 * t39;
      t87 = t65 * l;
      t88 = t87 * t64;
      t90 = t88 * t24 * t86;
      t92 = K * t14;
      t93 = M__x * T;
      t94 = t65 * t93;
      t96 = 8 * t94 * t92;
      t97 = t65 * t45;
      t98 = t97 * t92;
      t99 = 4 * t98;
      t100 = G ^ 2;
      t101 = I__x ^ 2;
      t102 = t101 * t100;
      t103 = K * t102;
      t104 = t94 * t103;
      t105 = 2 * t104;
      t106 = t97 * t103;
      t107 = 2 * t106;
      t108 = t24 * t33;
      t109 = K * M__y;
      t110 = t65 * T;
      t112 = t110 * t109 * t108;
      t114 = t100 * F__z;
      t115 = t114 * t39;
      t116 = I__y * t101;
      t117 = t29 * T;
      t119 = t117 * t116 * t115;
      t120 = 6 * t119;
      t121 = t49 * t18;
      t122 = t65 * K;
      t124 = t122 * t72 * t121;
      t128 = 4 * t122 * t116 * t115;
      t130 = t117 * t72 * t121;
      t131 = 6 * t130;
      t135 = t93 * t59 * t69 * E * t65;
      t140 = t87 * T;
      t142 = t140 * K * t101 * t100 * F__z * t4;
      t143 = F__z * t18;
      t146 = l * t13 * t102 * t143;
      t147 = 6 * t146;
      t148 = -5 * t90 - t96 - t99 - t105 - t107 - 6 * t112 - t120 - 10 * t124 - t128 - t131 - 10 * t135 - t142 - t147;
      t149 = K * t13;
      t150 = t140 * t149;
      t152 = 4 * t150 * t143;
      t158 = I__x * t71;
      t159 = t55 * M__x;
      t161 = t159 * t149 * t158;
      t163 = t55 * M__y;
      t165 = t163 * t149 * t158;
      t167 = t100 * E;
      t168 = t101 * t167;
      t170 = t159 * t59 * t168;
      t173 = t163 * t59 * t168;
      t176 = t75 * t35 * t168;
      t177 = 12 * t176;
      t178 = I__y * M__y;
      t180 = t75 * t178 * t168;
      t181 = 12 * t180;
      t182 = t12 * E;
      t183 = G * t182;
      t184 = t13 * I__y;
      t185 = t184 * I__x;
      t187 = M__x * t185 * t183;
      t188 = 12 * t187;
      t190 = M__y * t185 * t183;
      t191 = 12 * t190;
      t192 = t184 * t182;
      t194 = l * t93 * t192;
      t195 = 12 * t194;
      t196 = t46 * t192;
      t197 = 12 * t196;
      t198 = t100 * t12;
      t199 = t13 * t101;
      t201 = M__x * t199 * t198;
      t202 = 12 * t201;
      t204 = M__y * t199 * t198;
      t205 = 12 * t204;
      t206 = -24 * t93 * t72 * G * t12 * l - t152 - 26 * t161 - 10 * t165 - 8 * t170 - 8 * t173 - t177 - t181 - t188 + t191 - t195 + t197 - t202 - t205;
      t213 = 0.1e1 / (t75 * t63 + t75 * t69 + t108);
      t214 = t213 * t82 * l;
      out_4 = t214 * (t148 + t206) * T / 4;
      t219 = t90 + t96 + t99 - t105 - t107 + 2 * t112 - t120 - 2 * t124 - t131 - 6 * t135 - t147 + t152;
      t225 = t75 * t19 * t158;
      t227 = -10 * t161 - 2 * t165 - 2 * t170 - 2 * t173 + t188 - t191 + t195 - t197 - t202 - t205 - 24 * t225 - t177 - t181;
      out_5 = t214 * (t219 + t227) * T / 4;
      out_13 = F__x;
      out_14 = F__y;
      out_15 = F__z;
      out_16 = M__x;
      out_17 = M__y;
      out_18 = M__z;
      t231 = t29 * A;
      t232 = 3 * I__z;
      t234 = 0.1e1 / t55;
      t235 = t234 * (t231 + t232);
      t237 = A * E;
      t242 = F__x * K;
      t243 = l * t4;
      t246 = K * M__z;
      t249 = 0.1e1 / K;
      t251 = 0.1e1 / A;
      t252 = t251 * t249 * (-t4 * F__x * t237 - t4 * F__y * t237 - 2 * t243 * t242 + 2 * t246);
      t256 = t234 * (t231 - t232);
      t257 = F__x * t237;
      t258 = F__y * t237;
      t260 = F__y * K * l;
      t265 = t251 * t249 * (t4 * t246 + t257 + t258 + 2 * t260);
      t274 = 0.3e1 / 0.2e1 * t251 * t249 * (l * t242 + t257 + t258 + t260) * t234 * I__z;
      out_19 = t252 * t4 * t235 / 8 + t265 * t256 / 4 + t274;
      out_20 = -t252 * t4 * t256 / 8 - t265 * t235 / 4 + t274;
      t280 = K * M__x;
      t281 = T * t4;
      t282 = t65 * t281;
      t283 = t282 * t280;
      t286 = t282 * t109;
      t289 = t116 * t167;
      t294 = T ^ 2;
      t295 = t294 * t4;
      t300 = F__z * t12;
      t301 = t13 * t300;
      t302 = t294 * K;
      t303 = t65 * t29;
      t304 = t303 * t302;
      t307 = t101 * t114;
      t309 = F__z * t182;
      t311 = t184 * t101;
      t315 = t100 * t182;
      t316 = t101 * t315;
      t317 = M__x * t184;
      t321 = M__y * t184;
      t325 = M__x * t192;
      t326 = t29 * t295;
      t329 = M__y * t192;
      t339 = t69 * t22;
      t340 = t303 * t294;
      t344 = t185 * t183;
      t345 = t55 * t4;
      t346 = t345 * t280;
      t349 = t345 * t109;
      t352 = t199 * t198;
      t355 = 42 * t283 * t73 + 6 * t286 * t73 + 3 * t283 * t289 + 3 * t286 * t289 + 6 * t87 * t295 * t280 * t108 + 16 * t304 * t301 + t304 * t307 + 48 * l * t311 * t100 * t309 + 36 * t4 * t317 * t316 + 36 * t4 * t321 * t316 + 36 * t326 * t325 + 36 * t326 * t329 + 48 * t88 * t184 * t309 + 8 * t140 * t59 * t102 * t22 + 8 * t340 * t59 * t339 + 60 * t346 * t344 + 12 * t349 * t344 + 12 * t346 * t352;
      t358 = t75 * t15;
      t361 = t4 * M__y;
      t362 = t75 * t361;
      t369 = t29 * t294;
      t379 = G * t309;
      t383 = t100 * t300;
      t393 = G * t300;
      t394 = t55 * t294;
      t398 = t100 * t22;
      t402 = K * t192;
      t409 = t87 * t294;
      t417 = 12 * t349 * t352 + 72 * t358 * t344 + 72 * t362 * t344 + 36 * t358 * t352 + 36 * t362 * t352 + 36 * t369 * t15 * t73 + 36 * t369 * t361 * t73 + 44 * t150 * t69 * t300 + 48 * t122 * t185 * t379 + 16 * t122 * t199 * t383 + 96 * t117 * t185 * t379 + 60 * t117 * t199 * t383 + 60 * t394 * t72 * t393 + 12 * t394 * t116 * t398 + 60 * t110 * t15 * t402 + 12 * t110 * t361 * t402 + 24 * t409 * t15 * t92 + 48 * t55 * t294 * t184 * t309;
      t418 = t355 + t417;
      t420 = t213 * t82;
      t424 = t183 * I__x;
      t431 = t101 * t198;
      t438 = t87 * t302;
      t460 = t294 * t13;
      t468 = 6 * t29 * t294 * I__y * t168 + 6 * t55 * K * t184 * t424 + 12 * l * T * t13 * t431 + 12 * l * T * t184 * t424 + 14 * t110 * t149 * t158 + 5 * t110 * t59 * t168 + 4 * t55 * t149 * t431 + 12 * t29 * t460 * t158 + 5 * t409 * t59 * t34 + t438 * t102 + 4 * t438 * t14 + 6 * t369 * t192 + 6 * t66 * t192 + 6 * t311 * t315;
      t469 = 0.1e1 / t468;
      t475 = t29 * t281;
      t484 = t303 * t64;
      t489 = t65 * t55 * t302;
      t499 = t65 * t4;
      t500 = t499 * t280;
      t503 = t499 * t109;
      t510 = t117 * t15;
      t521 = 26 * t87 * t281 * t280 * t108 + 12 * t475 * t325 - 12 * t475 * t329 + 24 * t55 * t295 * M__x * t14 + 20 * t484 * t301 + 8 * t489 * I__y * t22 + t484 * t307 + 2 * t489 * I__x * t49 + 12 * t29 * t199 * t383 + 32 * t500 * t73 + 4 * t503 * t73 + 5 * t500 * t289 + 5 * t503 * t289 + 48 * t510 * t73 + 12 * t510 * t289 + 12 * t117 * t361 * t289 + 24 * t394 * t15 * t108;
      t526 = t140 * t15;
      t529 = t140 * t361;
      t532 = K * t63;
      t533 = t340 * t15;
      t540 = K * t69;
      t556 = t87 * K;
      t563 = t55 * T;
      t577 = 14 * t303 * T * t59 * t339 + 32 * t526 * t92 + 4 * t529 * t92 + 16 * t533 * t532 + 2 * t526 * t103 + 2 * t529 * t103 + 4 * t533 * t540 + 12 * t243 * t317 * t424 - 12 * t243 * t321 * t424 + 12 * t243 * M__x * t13 * t431 + 12 * t243 * t19 * t431 + 20 * t556 * t72 * t393 + 4 * t556 * t116 * t398 + 24 * t563 * t72 * t393 + 12 * t563 * t116 * t398 + 12 * t65 * t294 * t24 * t23 + 12 * t65 * t460 * t300;
      t578 = t521 + t577;
      t583 = t294 * M__y;
      t584 = t87 * t583;
      t603 = -12 * t55 * t460 * t143 - 12 * t394 * t24 * t86 - 8 * t584 * t532 - 8 * t584 * t540 - 4 * t104 - 4 * t106 - 28 * t112 - 12 * t119 - 4 * t124 - t128 - 24 * t130 - t142 - 12 * t146 - 2 * t90 - t96 - 16 * t98;
      t623 = -48 * t29 * t583 * t14 - 48 * t369 * t178 * t34 - t152 - 8 * t161 - 16 * t165 - 10 * t170 - 10 * t173 - 24 * t176 - 24 * t180 + 24 * t187 - 24 * t190 + 24 * t194 - 24 * t196 - 24 * t201 - 24 * t204 - 96 * t225;
      t624 = t603 + t623;
      out_21 = -t420 * t418 * t1 / 2 + 0.3e1 / 0.4e1 * t578 * t469 / t29 * t63 - 0.3e1 / 0.8e1 * t469 * t624 * t1 * t44;
      t631 = t420 * t418 * t4 / 8;
      t632 = 2 * t63;
      t633 = t632 - t69;
      t636 = t578 * t4 * t469;
      t639 = t632 + t69;
      out_22 = -t631 + t636 * t1 * t633 / 16 - t469 * t624 * t639 / 16;
      out_23 = -t631 + t636 * t1 * t639 / 16 - t469 * t624 * t633 / 16;

      % Store outputs
      out_f = zeros(24, 1);
      out_f(1) = out_1;
      out_f(2) = out_2;
      out_f(3) = out_3;
      out_f(4) = out_4;
      out_f(5) = out_5;
      out_f(13) = out_13;
      out_f(14) = out_14;
      out_f(15) = out_15;
      out_f(16) = out_16;
      out_f(17) = out_17;
      out_f(18) = out_18;
      out_f(19) = out_19;
      out_f(20) = out_20;
      out_f(21) = out_21;
      out_f(22) = out_22;
      out_f(23) = out_23;
    end % f
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_f_f = f_f( this, ~, ~ )
      % Evaluate the force vector f_f.

      % Extract properties
      F__x = this.m_data.F__x;
      F__y = this.m_data.F__y;
      F__z = this.m_data.F__z;
      M__x = this.m_data.M__x;
      M__y = this.m_data.M__y;
      M__z = this.m_data.M__z;

      % Extract inputs
      % No inputs

      % Evaluate function
      out_8 = F__x;
      out_9 = F__y;
      out_10 = F__z;
      out_11 = M__x;
      out_12 = M__y;
      out_13 = M__z;

      % Store outputs
      out_f_f = sparse(14, 1);
      out_f_f(8) = out_8;
      out_f_f(9) = out_9;
      out_f_f(10) = out_10;
      out_f_f(11) = out_11;
      out_f_f(12) = out_12;
      out_f_f(13) = out_13;
    end % f_f
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_f_s = f_s( this, ~, ~ )
      % Evaluate the force vector f_s.

      % Extract properties
      E = this.m_data.E;
      G = this.m_data.G;
      A = this.m_data.A;
      I__x = this.m_data.I__x;
      I__y = this.m_data.I__y;
      I__z = this.m_data.I__z;
      K = this.m_data.K;
      T = this.m_data.T;
      l = this.m_data.l;
      F__x = this.m_data.F__x;
      F__y = this.m_data.F__y;
      F__z = this.m_data.F__z;
      M__x = this.m_data.M__x;
      M__y = this.m_data.M__y;
      M__z = this.m_data.M__z;

      % Extract inputs
      % No inputs

      % Evaluate function
      t1 = 0.1e1 / l;
      t2 = F__x * l;
      t3 = F__y * l;
      t4 = sqrt(2);
      t5 = t4 * M__z;
      out_1 = -(t2 + t3 + t5) * t1 / 2;
      out_2 = -t1 * (t2 + t3 - t5) / 2;
      t12 = E ^ 2;
      t13 = I__y ^ 2;
      t14 = t13 * t12;
      t15 = t4 * M__x;
      t18 = t12 * t4;
      t19 = M__y * t13;
      t22 = F__z * E;
      t23 = G * t22;
      t24 = I__y * I__x;
      t28 = T * I__y;
      t29 = l ^ 2;
      t33 = G * E;
      t34 = I__x * t33;
      t35 = M__x * I__y;
      t39 = E * t4;
      t44 = I__y * t39;
      t45 = T * M__y;
      t46 = l * t45;
      t49 = F__z * G;
      t55 = t29 * l;
      t59 = K * I__y;
      t63 = E * I__y;
      t64 = T * K;
      t65 = t29 ^ 2;
      t66 = t65 * t64;
      t69 = G * I__x;
      t71 = G * t12;
      t72 = t13 * I__x;
      t73 = t72 * t71;
      t75 = T * l;
      t82 = 0.1e1 / (6 * t55 * K * t14 + 6 * l * t28 * t34 + 4 * t55 * t59 * t34 + 6 * t75 * t14 + 4 * t66 * t63 + t66 * t69 + 6 * t73);
      out_3 = -t82 * t29 * (3 * M__y * t24 * G * t39 + t29 * T * I__x * t49 + 4 * l * t24 * t23 + 4 * t29 * t28 * t22 + 3 * t4 * t35 * t34 - 6 * t15 * t14 + 6 * t19 * t18 + 6 * t46 * t44) * K / 2;
      t86 = t12 * E;
      t87 = G * t86;
      t88 = t13 * I__y;
      t89 = t88 * I__x;
      t91 = M__x * t89 * t87;
      t92 = 12 * t91;
      t94 = M__y * t89 * t87;
      t95 = 12 * t94;
      t96 = t88 * t86;
      t97 = T * M__x;
      t99 = l * t97 * t96;
      t100 = 12 * t99;
      t101 = t46 * t96;
      t102 = 12 * t101;
      t103 = G ^ 2;
      t104 = t103 * t12;
      t105 = I__x ^ 2;
      t106 = t13 * t105;
      t108 = M__x * t106 * t104;
      t109 = 12 * t108;
      t111 = M__y * t106 * t104;
      t112 = 12 * t111;
      t113 = K * t14;
      t114 = t65 * t97;
      t116 = 8 * t114 * t113;
      t117 = t65 * t45;
      t118 = t117 * t113;
      t119 = 4 * t118;
      t120 = t105 * t103;
      t121 = K * t120;
      t122 = t114 * t121;
      t123 = 2 * t122;
      t124 = t117 * t121;
      t125 = 2 * t124;
      t126 = t24 * t33;
      t127 = K * M__y;
      t128 = t65 * T;
      t130 = t128 * t127 * t126;
      t132 = t103 * F__z;
      t133 = t132 * t39;
      t134 = I__y * t105;
      t135 = t29 * T;
      t137 = t135 * t134 * t133;
      t138 = 6 * t137;
      t139 = t49 * t18;
      t140 = t65 * K;
      t142 = t140 * t72 * t139;
      t144 = -t92 + t95 - t100 + t102 - t109 - t112 - t116 - t119 - t123 - t125 - 6 * t130 - t138 - 10 * t142;
      t147 = 4 * t140 * t134 * t133;
      t149 = t135 * t72 * t139;
      t150 = 6 * t149;
      t154 = t97 * t59 * t69 * E * t65;
      t159 = t65 * l;
      t160 = t159 * T;
      t162 = t160 * K * t105 * t103 * F__z * t4;
      t163 = F__z * t18;
      t166 = l * t13 * t120 * t163;
      t167 = 6 * t166;
      t168 = K * t13;
      t169 = t160 * t168;
      t171 = 4 * t169 * t163;
      t177 = I__x * t71;
      t178 = t55 * M__x;
      t180 = t178 * t168 * t177;
      t182 = t55 * M__y;
      t184 = t182 * t168 * t177;
      t186 = t103 * E;
      t187 = t105 * t186;
      t189 = t178 * t59 * t187;
      t192 = t182 * t59 * t187;
      t195 = t75 * t35 * t187;
      t196 = 12 * t195;
      t197 = I__y * M__y;
      t199 = t75 * t197 * t187;
      t200 = 12 * t199;
      t201 = t49 * t39;
      t202 = t159 * t64;
      t204 = t202 * t24 * t201;
      t206 = -24 * t97 * t72 * G * t12 * l - t147 - t150 - 10 * t154 - t162 - t167 - t171 - 26 * t180 - 10 * t184 - 8 * t189 - 8 * t192 - t196 - t200 - 5 * t204;
      t213 = 0.1e1 / (t75 * t63 + t75 * t69 + t126);
      t214 = t213 * t82 * l;
      out_4 = t214 * (t144 + t206) * T / 4;
      t217 = t92 - t95 + t100 - t102 - t109 - t112 + t116 + t119 - t123 - t125 + 2 * t130 - t138;
      t225 = t75 * t19 * t177;
      t227 = -2 * t142 - t150 - 6 * t154 - t167 + t171 - 10 * t180 - 2 * t184 - 2 * t189 - 2 * t192 - t196 - t200 - 24 * t225 + t204;
      out_5 = t214 * (t217 + t227) * T / 4;
      t231 = t29 * A;
      t232 = 3 * I__z;
      t234 = 0.1e1 / t55;
      t235 = t234 * (t231 + t232);
      t237 = A * E;
      t242 = F__x * K;
      t243 = l * t4;
      t246 = K * M__z;
      t249 = 0.1e1 / K;
      t251 = 0.1e1 / A;
      t252 = t251 * t249 * (-t4 * F__x * t237 - t4 * F__y * t237 - 2 * t243 * t242 + 2 * t246);
      t256 = t234 * (t231 - t232);
      t257 = F__x * t237;
      t258 = F__y * t237;
      t260 = F__y * K * l;
      t265 = t251 * t249 * (t4 * t246 + t257 + t258 + 2 * t260);
      t274 = 0.3e1 / 0.2e1 * t251 * t249 * (l * t242 + t257 + t258 + t260) * t234 * I__z;
      out_6 = t252 * t4 * t235 / 8 + t265 * t256 / 4 + t274;
      out_7 = -t252 * t4 * t256 / 8 - t265 * t235 / 4 + t274;
      t280 = t106 * t104;
      t281 = t55 * t4;
      t282 = t281 * t127;
      t285 = t89 * t87;
      t286 = t75 * t15;
      t289 = t4 * M__y;
      t290 = t75 * t289;
      t297 = T ^ 2;
      t298 = t29 * t297;
      t305 = F__z * t12;
      t313 = t69 * t22;
      t314 = t65 * t29;
      t315 = t314 * t297;
      t319 = K * M__x;
      t320 = t281 * t319;
      t327 = F__z * t86;
      t335 = t13 * t305;
      t336 = t297 * K;
      t337 = t314 * t336;
      t340 = t105 * t132;
      t343 = t88 * t105;
      t347 = 48 * l * t343 * t103 * t327 + 8 * t160 * t59 * t120 * t22 + 48 * t55 * t297 * t88 * t327 + 36 * t298 * t15 * t73 + 44 * t169 * t69 * t305 + 48 * t202 * t88 * t327 + 36 * t298 * t289 * t73 + 8 * t315 * t59 * t313 + 12 * t282 * t280 + 36 * t286 * t280 + 36 * t290 * t280 + 12 * t320 * t280 + 12 * t282 * t285 + 72 * t286 * t285 + 72 * t290 * t285 + 60 * t320 * t285 + 16 * t337 * t335 + t337 * t340;
      t348 = t103 * t86;
      t349 = t105 * t348;
      t350 = M__x * t88;
      t354 = M__y * t88;
      t358 = M__x * t96;
      t359 = t297 * t4;
      t360 = t29 * t359;
      t363 = M__y * t96;
      t366 = G * t327;
      t370 = t103 * t305;
      t380 = G * t305;
      t381 = t55 * t297;
      t385 = t103 * t22;
      t389 = K * t96;
      t396 = t159 * t297;
      t404 = T * t4;
      t405 = t65 * t404;
      t406 = t405 * t319;
      t409 = t405 * t127;
      t412 = t134 * t186;
      t417 = 36 * t4 * t350 * t349 + 36 * t4 * t354 * t349 + 36 * t360 * t358 + 36 * t360 * t363 + 48 * t140 * t89 * t366 + 16 * t140 * t106 * t370 + 96 * t135 * t89 * t366 + 60 * t135 * t106 * t370 + 60 * t381 * t72 * t380 + 12 * t381 * t134 * t385 + 60 * t128 * t15 * t389 + 12 * t128 * t289 * t389 + 24 * t396 * t15 * t113 + 6 * t159 * t359 * t319 * t126 + 42 * t406 * t73 + 6 * t409 * t73 + 3 * t406 * t412 + 3 * t409 * t412;
      t418 = t347 + t417;
      t420 = t213 * t82;
      t424 = I__x * t87;
      t431 = t105 * t104;
      t438 = t159 * t336;
      t460 = t297 * t13;
      t468 = 6 * t29 * t297 * I__y * t187 + 6 * t55 * K * t88 * t424 + 12 * l * T * t13 * t431 + 12 * l * T * t88 * t424 + 14 * t128 * t168 * t177 + 5 * t128 * t59 * t187 + 4 * t55 * t168 * t431 + 12 * t29 * t460 * t177 + 5 * t396 * t59 * t34 + t438 * t120 + 4 * t438 * t14 + 6 * t298 * t96 + 6 * t343 * t348 + 6 * t66 * t96;
      t469 = 0.1e1 / t468;
      t471 = t65 * t4;
      t472 = t471 * t319;
      t475 = t471 * t127;
      t482 = t135 * t15;
      t500 = t29 * t404;
      t509 = t314 * t64;
      t514 = t65 * t55 * t336;
      t521 = 32 * t472 * t73 + 4 * t475 * t73 + 5 * t472 * t412 + 5 * t475 * t412 + 48 * t482 * t73 + 12 * t482 * t412 + 12 * t135 * t289 * t412 + 24 * t381 * t15 * t126 + 14 * t314 * T * t59 * t313 + 12 * t65 * t460 * t305 + 12 * t500 * t358 - 12 * t500 * t363 + 24 * t55 * t359 * M__x * t14 + 20 * t509 * t335 + 8 * t514 * I__y * t22 + t509 * t340 + 2 * t514 * I__x * t49;
      t525 = t160 * t15;
      t528 = t160 * t289;
      t531 = K * t63;
      t532 = t315 * t15;
      t539 = K * t69;
      t555 = t159 * K;
      t562 = t55 * T;
      t577 = 12 * t29 * t106 * t370 + 32 * t525 * t113 + 4 * t528 * t113 + 16 * t532 * t531 + 2 * t525 * t121 + 2 * t528 * t121 + 4 * t532 * t539 + 12 * t243 * t350 * t424 - 12 * t243 * t354 * t424 + 12 * t243 * M__x * t13 * t431 + 12 * t243 * t19 * t431 + 20 * t555 * t72 * t380 + 4 * t555 * t134 * t385 + 24 * t562 * t72 * t380 + 12 * t562 * t134 * t385 + 12 * t65 * t297 * t24 * t23 + 26 * t159 * t404 * t319 * t126;
      t578 = t521 + t577;
      t585 = t297 * M__y;
      t595 = t159 * t585;
      t607 = -48 * t29 * t585 * t14 - 12 * t55 * t460 * t163 - 12 * t381 * t24 * t201 - 8 * t595 * t531 - 8 * t595 * t539 - 24 * t101 - 24 * t108 - 24 * t111 - t116 - 16 * t118 - 4 * t122 - 4 * t124 - 28 * t130 + 24 * t91 - 24 * t94 + 24 * t99;
      t623 = -48 * t298 * t197 * t34 - 12 * t137 - 4 * t142 - t147 - 24 * t149 - t162 - 12 * t166 - t171 - 8 * t180 - 16 * t184 - 10 * t189 - 10 * t192 - 24 * t195 - 24 * t199 - 2 * t204 - 96 * t225;
      t624 = t607 + t623;
      out_8 = -t420 * t418 * t1 / 2 + 0.3e1 / 0.4e1 * t578 * t469 / t29 * t63 - 0.3e1 / 0.8e1 * t469 * t624 * t1 * t44;
      t631 = t420 * t418 * t4 / 8;
      t632 = 2 * t63;
      t633 = t632 - t69;
      t636 = t578 * t4 * t469;
      t639 = t632 + t69;
      out_9 = -t631 + t636 * t1 * t633 / 16 - t469 * t624 * t639 / 16;
      out_10 = -t631 + t636 * t1 * t639 / 16 - t469 * t624 * t633 / 16;

      % Store outputs
      out_f_s = zeros(10, 1);
      out_f_s(1) = out_1;
      out_f_s(2) = out_2;
      out_f_s(3) = out_3;
      out_f_s(4) = out_4;
      out_f_s(5) = out_5;
      out_f_s(6) = out_6;
      out_f_s(7) = out_7;
      out_f_s(8) = out_8;
      out_f_s(9) = out_9;
      out_f_s(10) = out_10;
    end % f_s
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_f_r = f_r( ~, ~, ~ )
      % Evaluate the force vector f_r.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_f_r = sparse(10, 1);
    end % f_r
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_perm = perm( ~ )
      % Evaluate the permutation vector.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_perm = zeros(24, 1);
      out_perm(1) = 6;
      out_perm(2) = 7;
      out_perm(3) = 8;
      out_perm(4) = 9;
      out_perm(5) = 10;
      out_perm(6) = 11;
      out_perm(7) = 12;
      out_perm(8) = 13;
      out_perm(9) = 14;
      out_perm(10) = 15;
      out_perm(11) = 16;
      out_perm(12) = 17;
      out_perm(13) = 18;
      out_perm(14) = 24;
      out_perm(15) = 1;
      out_perm(16) = 2;
      out_perm(17) = 3;
      out_perm(18) = 4;
      out_perm(19) = 5;
      out_perm(20) = 19;
      out_perm(21) = 20;
      out_perm(22) = 21;
      out_perm(23) = 22;
      out_perm(24) = 23;
    end % perm
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_unperm = unperm( ~ )
      % Evaluate the unpermutation vector.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_unperm = zeros(24, 1);
      out_unperm(1) = 15;
      out_unperm(2) = 16;
      out_unperm(3) = 17;
      out_unperm(4) = 18;
      out_unperm(5) = 19;
      out_unperm(6) = 1;
      out_unperm(7) = 2;
      out_unperm(8) = 3;
      out_unperm(9) = 4;
      out_unperm(10) = 5;
      out_unperm(11) = 6;
      out_unperm(12) = 7;
      out_unperm(13) = 8;
      out_unperm(14) = 9;
      out_unperm(15) = 10;
      out_unperm(16) = 11;
      out_unperm(17) = 12;
      out_unperm(18) = 13;
      out_unperm(19) = 20;
      out_unperm(20) = 21;
      out_unperm(21) = 22;
      out_unperm(22) = 23;
      out_unperm(23) = 24;
      out_unperm(24) = 14;
    end % unperm
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_v = v( ~, ~ )
      % Evaluate the veiling vector.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_v = zeros(0, 1);
    end % v
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
  end
end % Test_10

% That's All Folks!
