% +--------------------------------------------------------------------------+
% | 'TrussMe' module version 0.0 - BSD 3-Clause License - Copyright (c) 2023 |
% | Current version authors:                                                 |
% |   Davide Stocco and Matteo Larcher.                                      |
% +--------------------------------------------------------------------------+

% Matlab generated code for system: Test_10
% This file has been automatically generated by TrussMe.
% DISCLAIMER: If you need to edit it, do it wisely!

classdef Test_10 < TrussMe.System
  %
  % Test_10 class
  %
  methods
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function this = Test_10( varargin )
      % Class constructor.

      % User data
      if (nargin == 0)
        data.E = .2e12;
        data.G = .1e12;
        data.A = .1e-2;
        data.I__x = .1e-4;
        data.I__y = .1e-4;
        data.I__z = .1e-4;
        data.K = .1e5;
        data.T = .1e5;
        data.l = 1;
        data.F__x = .1e3;
        data.F__y = 0.;
        data.F__z = 0.;
        data.M__x = 0.;
        data.M__y = 0.;
        data.M__z = 0.;
      elseif (nargin == 1 && isstruct(varargin{1}))
        data = varargin{1};
      elseif (nargin == 15)
        data.E = varargin{1};
        data.G = varargin{2};
        data.A = varargin{3};
        data.I__x = varargin{4};
        data.I__y = varargin{5};
        data.I__z = varargin{6};
        data.K = varargin{7};
        data.T = varargin{8};
        data.l = varargin{9};
        data.F__x = varargin{10};
        data.F__y = varargin{11};
        data.F__z = varargin{12};
        data.M__x = varargin{13};
        data.M__y = varargin{14};
        data.M__z = varargin{15};
      else
        error('wrong number of input arguments.');
      end

      % Call superclass constructor
      this = this@TrussMe.System(data);
    end % Test_10
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_K = K( this, ~, ~ )
      % Evaluate the stiffness matrix K.

      % Extract properties
      E = this.m_data.E;
      G = this.m_data.G;
      A = this.m_data.A;
      I__y = this.m_data.I__y;
      I__z = this.m_data.I__z;
      K = this.m_data.K;
      T = this.m_data.T;
      l = this.m_data.l;

      % Extract inputs
      % No inputs

      % Evaluate function
      out_1_1 = K;
      out_7_1 = -K;
      out_2_2 = K;
      out_8_2 = out_7_1;
      out_3_3 = K;
      out_9_3 = out_8_2;
      out_4_4 = T;
      out_10_4 = -T;
      out_5_5 = T;
      out_11_5 = out_10_4;
      out_6_6 = T;
      out_12_6 = out_11_5;
      out_1_7 = out_9_3;
      t2 = l ^ 2;
      t4 = t2 * l;
      t5 = t4 * K;
      t7 = E * I__z;
      t10 = 0.1e1 / t4;
      out_7_7 = t10 * (t2 * E * A + 2 * t5 + 12 * t7) / 2;
      t12 = t2 * A;
      t13 = 12 * I__z;
      out_8_7 = t10 * (t12 - t13) * E / 2;
      t17 = sqrt(2);
      t18 = E * t17;
      t19 = 0.1e1 / t2;
      t22 = 3 * t19 * I__z * t18;
      out_12_7 = -t22;
      t25 = t10 * (t12 + t13) * E;
      t26 = t25 / 2;
      out_13_7 = -t26;
      out_14_7 = -out_8_7;
      out_18_7 = out_12_7;
      out_2_8 = out_1_7;
      out_7_8 = out_8_7;
      out_8_8 = out_7_7;
      out_12_8 = t22;
      out_13_8 = out_14_7;
      out_14_8 = out_13_7;
      out_18_8 = out_12_8;
      out_3_9 = out_2_8;
      t27 = E * I__y;
      out_9_9 = t10 * (t5 + 12 * t27);
      t31 = t19 * I__y * t18;
      out_10_9 = 3 * t31;
      out_11_9 = -out_10_9;
      t32 = t10 * t27;
      t33 = 12 * t32;
      out_15_9 = -t33;
      out_16_9 = out_10_9;
      out_17_9 = out_11_9;
      out_4_10 = out_12_6;
      out_9_10 = out_16_9;
      t34 = 4 * E;
      t36 = I__y * (t34 + G);
      t37 = G * I__z;
      t38 = T * l;
      t41 = 0.1e1 / l;
      out_10_10 = t41 * (t36 + t37 + 2 * t38) / 2;
      t43 = -t34 + G;
      out_11_10 = t41 * (I__y * t43 + t37) / 2;
      out_15_10 = out_17_9;
      t47 = 2 * E;
      out_16_10 = t41 * (I__y * (t47 - G) - t37) / 2;
      t52 = -t47 - G;
      out_17_10 = t41 * (I__y * t52 - t37) / 2;
      out_5_11 = out_4_10;
      out_9_11 = out_15_10;
      out_10_11 = out_11_10;
      out_11_11 = out_10_10;
      out_15_11 = out_9_10;
      out_16_11 = out_17_10;
      out_17_11 = out_16_10;
      out_6_12 = out_5_11;
      out_7_12 = out_18_7;
      out_8_12 = out_18_8;
      out_12_12 = t41 * (4 * t7 + t38);
      out_13_12 = out_8_12;
      out_14_12 = out_7_12;
      t58 = t41 * t7;
      out_18_12 = 2 * t58;
      out_7_13 = out_14_8;
      out_8_13 = out_13_8;
      out_12_13 = out_13_12;
      out_13_13 = t25;
      out_18_13 = out_12_13;
      out_19_13 = out_7_13;
      out_20_13 = out_7_8;
      out_24_13 = out_18_13;
      out_7_14 = out_8_13;
      out_8_14 = out_19_13;
      out_12_14 = out_14_12;
      out_14_14 = out_13_13;
      out_18_14 = out_12_14;
      out_19_14 = out_20_13;
      out_20_14 = out_8_14;
      out_24_14 = out_24_13;
      out_9_15 = out_15_9;
      out_10_15 = out_9_11;
      out_11_15 = out_15_11;
      out_15_15 = 24 * t32;
      out_16_15 = -6 * t31;
      out_21_15 = out_9_15;
      out_22_15 = out_10_15;
      out_23_15 = out_22_15;
      out_9_16 = out_11_15;
      out_10_16 = out_17_11;
      out_11_16 = out_16_11;
      out_15_16 = out_16_15;
      out_16_16 = t41 * (t36 + t37);
      out_21_16 = out_9_16;
      out_22_16 = out_10_16;
      out_23_16 = t41 * (-I__y * t52 + t37) / 2;
      out_9_17 = out_23_15;
      out_10_17 = out_11_16;
      out_11_17 = out_22_16;
      out_17_17 = out_16_16;
      out_21_17 = out_21_16;
      out_22_17 = out_23_16;
      out_23_17 = out_11_17;
      out_7_18 = out_18_14;
      out_8_18 = out_24_14;
      out_12_18 = out_18_12;
      out_13_18 = out_8_18;
      out_14_18 = out_7_18;
      out_18_18 = 4 * t58;
      out_13_19 = out_20_14;
      out_14_19 = out_19_14;
      out_19_19 = t26;
      out_20_19 = out_7_14;
      out_24_19 = out_14_18;
      out_13_20 = out_14_19;
      out_14_20 = out_13_19;
      out_19_20 = out_20_19;
      out_20_20 = out_19_19;
      out_24_20 = out_24_19;
      out_15_21 = out_21_15;
      out_16_21 = out_21_17;
      out_17_21 = out_16_21;
      out_21_21 = t33;
      out_22_21 = out_17_21;
      out_23_21 = out_22_21;
      out_15_22 = out_9_17;
      out_16_22 = out_23_17;
      out_17_22 = out_22_17;
      out_21_22 = out_23_21;
      out_22_22 = out_17_17 / 2;
      out_23_22 = t41 * (-I__y * t43 - t37) / 2;
      out_15_23 = out_15_22;
      out_16_23 = out_17_22;
      out_17_23 = out_16_22;
      out_21_23 = out_21_22;
      out_22_23 = out_23_22;
      out_23_23 = out_22_22;
      out_13_24 = out_13_18;
      out_14_24 = out_13_24;
      out_19_24 = out_24_20;
      out_20_24 = out_19_24;
      out_24_24 = out_18_18;

      % Store outputs
      out_K = sparse(24, 24);
      out_K(1, 1) = out_1_1;
      out_K(7, 1) = out_7_1;
      out_K(2, 2) = out_2_2;
      out_K(8, 2) = out_8_2;
      out_K(3, 3) = out_3_3;
      out_K(9, 3) = out_9_3;
      out_K(4, 4) = out_4_4;
      out_K(10, 4) = out_10_4;
      out_K(5, 5) = out_5_5;
      out_K(11, 5) = out_11_5;
      out_K(6, 6) = out_6_6;
      out_K(12, 6) = out_12_6;
      out_K(1, 7) = out_1_7;
      out_K(7, 7) = out_7_7;
      out_K(8, 7) = out_8_7;
      out_K(12, 7) = out_12_7;
      out_K(13, 7) = out_13_7;
      out_K(14, 7) = out_14_7;
      out_K(18, 7) = out_18_7;
      out_K(2, 8) = out_2_8;
      out_K(7, 8) = out_7_8;
      out_K(8, 8) = out_8_8;
      out_K(12, 8) = out_12_8;
      out_K(13, 8) = out_13_8;
      out_K(14, 8) = out_14_8;
      out_K(18, 8) = out_18_8;
      out_K(3, 9) = out_3_9;
      out_K(9, 9) = out_9_9;
      out_K(10, 9) = out_10_9;
      out_K(11, 9) = out_11_9;
      out_K(15, 9) = out_15_9;
      out_K(16, 9) = out_16_9;
      out_K(17, 9) = out_17_9;
      out_K(4, 10) = out_4_10;
      out_K(9, 10) = out_9_10;
      out_K(10, 10) = out_10_10;
      out_K(11, 10) = out_11_10;
      out_K(15, 10) = out_15_10;
      out_K(16, 10) = out_16_10;
      out_K(17, 10) = out_17_10;
      out_K(5, 11) = out_5_11;
      out_K(9, 11) = out_9_11;
      out_K(10, 11) = out_10_11;
      out_K(11, 11) = out_11_11;
      out_K(15, 11) = out_15_11;
      out_K(16, 11) = out_16_11;
      out_K(17, 11) = out_17_11;
      out_K(6, 12) = out_6_12;
      out_K(7, 12) = out_7_12;
      out_K(8, 12) = out_8_12;
      out_K(12, 12) = out_12_12;
      out_K(13, 12) = out_13_12;
      out_K(14, 12) = out_14_12;
      out_K(18, 12) = out_18_12;
      out_K(7, 13) = out_7_13;
      out_K(8, 13) = out_8_13;
      out_K(12, 13) = out_12_13;
      out_K(13, 13) = out_13_13;
      out_K(18, 13) = out_18_13;
      out_K(19, 13) = out_19_13;
      out_K(20, 13) = out_20_13;
      out_K(24, 13) = out_24_13;
      out_K(7, 14) = out_7_14;
      out_K(8, 14) = out_8_14;
      out_K(12, 14) = out_12_14;
      out_K(14, 14) = out_14_14;
      out_K(18, 14) = out_18_14;
      out_K(19, 14) = out_19_14;
      out_K(20, 14) = out_20_14;
      out_K(24, 14) = out_24_14;
      out_K(9, 15) = out_9_15;
      out_K(10, 15) = out_10_15;
      out_K(11, 15) = out_11_15;
      out_K(15, 15) = out_15_15;
      out_K(16, 15) = out_16_15;
      out_K(21, 15) = out_21_15;
      out_K(22, 15) = out_22_15;
      out_K(23, 15) = out_23_15;
      out_K(9, 16) = out_9_16;
      out_K(10, 16) = out_10_16;
      out_K(11, 16) = out_11_16;
      out_K(15, 16) = out_15_16;
      out_K(16, 16) = out_16_16;
      out_K(21, 16) = out_21_16;
      out_K(22, 16) = out_22_16;
      out_K(23, 16) = out_23_16;
      out_K(9, 17) = out_9_17;
      out_K(10, 17) = out_10_17;
      out_K(11, 17) = out_11_17;
      out_K(17, 17) = out_17_17;
      out_K(21, 17) = out_21_17;
      out_K(22, 17) = out_22_17;
      out_K(23, 17) = out_23_17;
      out_K(7, 18) = out_7_18;
      out_K(8, 18) = out_8_18;
      out_K(12, 18) = out_12_18;
      out_K(13, 18) = out_13_18;
      out_K(14, 18) = out_14_18;
      out_K(18, 18) = out_18_18;
      out_K(13, 19) = out_13_19;
      out_K(14, 19) = out_14_19;
      out_K(19, 19) = out_19_19;
      out_K(20, 19) = out_20_19;
      out_K(24, 19) = out_24_19;
      out_K(13, 20) = out_13_20;
      out_K(14, 20) = out_14_20;
      out_K(19, 20) = out_19_20;
      out_K(20, 20) = out_20_20;
      out_K(24, 20) = out_24_20;
      out_K(15, 21) = out_15_21;
      out_K(16, 21) = out_16_21;
      out_K(17, 21) = out_17_21;
      out_K(21, 21) = out_21_21;
      out_K(22, 21) = out_22_21;
      out_K(23, 21) = out_23_21;
      out_K(15, 22) = out_15_22;
      out_K(16, 22) = out_16_22;
      out_K(17, 22) = out_17_22;
      out_K(21, 22) = out_21_22;
      out_K(22, 22) = out_22_22;
      out_K(23, 22) = out_23_22;
      out_K(15, 23) = out_15_23;
      out_K(16, 23) = out_16_23;
      out_K(17, 23) = out_17_23;
      out_K(21, 23) = out_21_23;
      out_K(22, 23) = out_22_23;
      out_K(23, 23) = out_23_23;
      out_K(13, 24) = out_13_24;
      out_K(14, 24) = out_14_24;
      out_K(19, 24) = out_19_24;
      out_K(20, 24) = out_20_24;
      out_K(24, 24) = out_24_24;
    end % K
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_K_ff = K_ff( this, ~, ~ )
      % Evaluate the stiffness matrix K_ff.

      % Extract properties
      E = this.m_data.E;
      G = this.m_data.G;
      A = this.m_data.A;
      I__y = this.m_data.I__y;
      I__z = this.m_data.I__z;
      K = this.m_data.K;
      T = this.m_data.T;
      l = this.m_data.l;

      % Extract inputs
      % No inputs

      % Evaluate function
      out_1_1 = T;
      out_7_1 = -T;
      t2 = l ^ 2;
      t4 = t2 * l;
      t5 = t4 * K;
      t7 = E * I__z;
      t10 = 0.1e1 / t4;
      out_2_2 = t10 * (t2 * E * A + 2 * t5 + 12 * t7) / 2;
      t12 = t2 * A;
      t13 = 12 * I__z;
      out_3_2 = t10 * (t12 - t13) * E / 2;
      t17 = sqrt(2);
      t18 = E * t17;
      t19 = 0.1e1 / t2;
      t22 = 3 * t19 * I__z * t18;
      out_7_2 = -t22;
      t25 = t10 * (t12 + t13) * E;
      out_8_2 = -t25 / 2;
      out_9_2 = -out_3_2;
      out_13_2 = out_7_2;
      out_2_3 = out_3_2;
      out_3_3 = out_2_2;
      out_7_3 = t22;
      out_8_3 = out_9_2;
      out_9_3 = out_8_2;
      out_13_3 = out_7_3;
      t27 = E * I__y;
      out_4_4 = t10 * (t5 + 12 * t27);
      t31 = t19 * I__y * t18;
      out_5_4 = 3 * t31;
      out_6_4 = -out_5_4;
      t32 = t10 * t27;
      out_10_4 = -12 * t32;
      out_11_4 = out_5_4;
      out_12_4 = out_6_4;
      out_4_5 = out_11_4;
      t34 = 4 * E;
      t36 = I__y * (t34 + G);
      t37 = G * I__z;
      t38 = T * l;
      t41 = 0.1e1 / l;
      out_5_5 = t41 * (t36 + t37 + 2 * t38) / 2;
      out_6_5 = t41 * (I__y * (-t34 + G) + t37) / 2;
      out_10_5 = out_12_4;
      t47 = 2 * E;
      out_11_5 = t41 * (I__y * (t47 - G) - t37) / 2;
      out_12_5 = t41 * (I__y * (-t47 - G) - t37) / 2;
      out_4_6 = out_10_5;
      out_5_6 = out_6_5;
      out_6_6 = out_5_5;
      out_10_6 = out_4_5;
      out_11_6 = out_12_5;
      out_12_6 = out_11_5;
      out_1_7 = out_7_1;
      out_2_7 = out_13_2;
      out_3_7 = out_13_3;
      out_7_7 = t41 * (4 * t7 + t38);
      out_8_7 = out_3_7;
      out_9_7 = out_2_7;
      t58 = t41 * t7;
      out_13_7 = 2 * t58;
      out_2_8 = out_9_3;
      out_3_8 = out_8_3;
      out_7_8 = out_8_7;
      out_8_8 = t25;
      out_13_8 = out_7_8;
      out_14_8 = out_13_8;
      out_2_9 = out_3_8;
      out_3_9 = out_2_8;
      out_7_9 = out_9_7;
      out_9_9 = out_8_8;
      out_13_9 = out_7_9;
      out_14_9 = out_14_8;
      out_4_10 = out_10_4;
      out_5_10 = out_4_6;
      out_6_10 = out_10_6;
      out_10_10 = 24 * t32;
      out_11_10 = -6 * t31;
      out_4_11 = out_6_10;
      out_5_11 = out_12_6;
      out_6_11 = out_11_6;
      out_10_11 = out_11_10;
      out_11_11 = t41 * (t36 + t37);
      out_4_12 = out_5_10;
      out_5_12 = out_6_11;
      out_6_12 = out_5_11;
      out_12_12 = out_11_11;
      out_2_13 = out_13_9;
      out_3_13 = out_14_9;
      out_7_13 = out_13_7;
      out_8_13 = out_3_13;
      out_9_13 = out_2_13;
      out_13_13 = 4 * t58;
      out_8_14 = out_8_13;
      out_9_14 = out_8_14;
      out_14_14 = out_13_13;

      % Store outputs
      out_K_ff = sparse(14, 14);
      out_K_ff(1, 1) = out_1_1;
      out_K_ff(7, 1) = out_7_1;
      out_K_ff(2, 2) = out_2_2;
      out_K_ff(3, 2) = out_3_2;
      out_K_ff(7, 2) = out_7_2;
      out_K_ff(8, 2) = out_8_2;
      out_K_ff(9, 2) = out_9_2;
      out_K_ff(13, 2) = out_13_2;
      out_K_ff(2, 3) = out_2_3;
      out_K_ff(3, 3) = out_3_3;
      out_K_ff(7, 3) = out_7_3;
      out_K_ff(8, 3) = out_8_3;
      out_K_ff(9, 3) = out_9_3;
      out_K_ff(13, 3) = out_13_3;
      out_K_ff(4, 4) = out_4_4;
      out_K_ff(5, 4) = out_5_4;
      out_K_ff(6, 4) = out_6_4;
      out_K_ff(10, 4) = out_10_4;
      out_K_ff(11, 4) = out_11_4;
      out_K_ff(12, 4) = out_12_4;
      out_K_ff(4, 5) = out_4_5;
      out_K_ff(5, 5) = out_5_5;
      out_K_ff(6, 5) = out_6_5;
      out_K_ff(10, 5) = out_10_5;
      out_K_ff(11, 5) = out_11_5;
      out_K_ff(12, 5) = out_12_5;
      out_K_ff(4, 6) = out_4_6;
      out_K_ff(5, 6) = out_5_6;
      out_K_ff(6, 6) = out_6_6;
      out_K_ff(10, 6) = out_10_6;
      out_K_ff(11, 6) = out_11_6;
      out_K_ff(12, 6) = out_12_6;
      out_K_ff(1, 7) = out_1_7;
      out_K_ff(2, 7) = out_2_7;
      out_K_ff(3, 7) = out_3_7;
      out_K_ff(7, 7) = out_7_7;
      out_K_ff(8, 7) = out_8_7;
      out_K_ff(9, 7) = out_9_7;
      out_K_ff(13, 7) = out_13_7;
      out_K_ff(2, 8) = out_2_8;
      out_K_ff(3, 8) = out_3_8;
      out_K_ff(7, 8) = out_7_8;
      out_K_ff(8, 8) = out_8_8;
      out_K_ff(13, 8) = out_13_8;
      out_K_ff(14, 8) = out_14_8;
      out_K_ff(2, 9) = out_2_9;
      out_K_ff(3, 9) = out_3_9;
      out_K_ff(7, 9) = out_7_9;
      out_K_ff(9, 9) = out_9_9;
      out_K_ff(13, 9) = out_13_9;
      out_K_ff(14, 9) = out_14_9;
      out_K_ff(4, 10) = out_4_10;
      out_K_ff(5, 10) = out_5_10;
      out_K_ff(6, 10) = out_6_10;
      out_K_ff(10, 10) = out_10_10;
      out_K_ff(11, 10) = out_11_10;
      out_K_ff(4, 11) = out_4_11;
      out_K_ff(5, 11) = out_5_11;
      out_K_ff(6, 11) = out_6_11;
      out_K_ff(10, 11) = out_10_11;
      out_K_ff(11, 11) = out_11_11;
      out_K_ff(4, 12) = out_4_12;
      out_K_ff(5, 12) = out_5_12;
      out_K_ff(6, 12) = out_6_12;
      out_K_ff(12, 12) = out_12_12;
      out_K_ff(2, 13) = out_2_13;
      out_K_ff(3, 13) = out_3_13;
      out_K_ff(7, 13) = out_7_13;
      out_K_ff(8, 13) = out_8_13;
      out_K_ff(9, 13) = out_9_13;
      out_K_ff(13, 13) = out_13_13;
      out_K_ff(8, 14) = out_8_14;
      out_K_ff(9, 14) = out_9_14;
      out_K_ff(14, 14) = out_14_14;
    end % K_ff
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_K_fs = K_fs( this, ~, ~ )
      % Evaluate the stiffness matrix K_fs.

      % Extract properties
      E = this.m_data.E;
      G = this.m_data.G;
      A = this.m_data.A;
      I__y = this.m_data.I__y;
      I__z = this.m_data.I__z;
      K = this.m_data.K;
      T = this.m_data.T;
      l = this.m_data.l;

      % Extract inputs
      % No inputs

      % Evaluate function
      out_2_1 = -K;
      out_3_2 = out_2_1;
      out_4_3 = out_3_2;
      out_5_4 = -T;
      out_6_5 = out_5_4;
      t1 = l ^ 2;
      t2 = t1 * A;
      t3 = 12 * I__z;
      t7 = 0.1e1 / t1 / l;
      out_8_6 = -t7 * (t2 + t3) * E / 2;
      out_9_6 = t7 * (t2 - t3) * E / 2;
      t13 = sqrt(2);
      t14 = E * t13;
      t15 = 0.1e1 / t1;
      out_14_6 = -3 * t15 * I__z * t14;
      out_8_7 = out_9_6;
      out_9_7 = out_8_6;
      out_14_7 = out_14_6;
      out_10_8 = -12 * t7 * I__y * E;
      out_11_8 = 3 * t15 * I__y * t14;
      out_12_8 = out_11_8;
      out_10_9 = -out_12_8;
      t24 = 2 * E;
      t27 = G * I__z;
      t29 = 0.1e1 / l;
      out_11_9 = t29 * (I__y * (t24 - G) - t27) / 2;
      out_12_9 = t29 * (I__y * (t24 + G) + t27) / 2;
      out_10_10 = out_10_9;
      out_11_10 = out_12_9;
      out_12_10 = out_11_9;

      % Store outputs
      out_K_fs = sparse(14, 10);
      out_K_fs(2, 1) = out_2_1;
      out_K_fs(3, 2) = out_3_2;
      out_K_fs(4, 3) = out_4_3;
      out_K_fs(5, 4) = out_5_4;
      out_K_fs(6, 5) = out_6_5;
      out_K_fs(8, 6) = out_8_6;
      out_K_fs(9, 6) = out_9_6;
      out_K_fs(14, 6) = out_14_6;
      out_K_fs(8, 7) = out_8_7;
      out_K_fs(9, 7) = out_9_7;
      out_K_fs(14, 7) = out_14_7;
      out_K_fs(10, 8) = out_10_8;
      out_K_fs(11, 8) = out_11_8;
      out_K_fs(12, 8) = out_12_8;
      out_K_fs(10, 9) = out_10_9;
      out_K_fs(11, 9) = out_11_9;
      out_K_fs(12, 9) = out_12_9;
      out_K_fs(10, 10) = out_10_10;
      out_K_fs(11, 10) = out_11_10;
      out_K_fs(12, 10) = out_12_10;
    end % K_fs
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_K_sf = K_sf( this, ~, ~ )
      % Evaluate the stiffness matrix K_sf.

      % Extract properties
      E = this.m_data.E;
      G = this.m_data.G;
      A = this.m_data.A;
      I__y = this.m_data.I__y;
      I__z = this.m_data.I__z;
      K = this.m_data.K;
      T = this.m_data.T;
      l = this.m_data.l;

      % Extract inputs
      % No inputs

      % Evaluate function
      out_1_2 = -K;
      out_2_3 = out_1_2;
      out_3_4 = out_2_3;
      out_4_5 = -T;
      out_5_6 = out_4_5;
      t1 = l ^ 2;
      t2 = t1 * A;
      t3 = 12 * I__z;
      t7 = 0.1e1 / t1 / l;
      out_6_8 = -t7 * (t2 + t3) * E / 2;
      out_7_8 = t7 * (t2 - t3) * E / 2;
      out_6_9 = out_7_8;
      out_7_9 = out_6_8;
      out_8_10 = -12 * t7 * I__y * E;
      t16 = sqrt(2);
      t17 = E * t16;
      t18 = 0.1e1 / t1;
      t21 = 3 * t18 * I__y * t17;
      out_9_10 = -t21;
      out_10_10 = out_9_10;
      out_8_11 = t21;
      t22 = 2 * E;
      t25 = G * I__z;
      t27 = 0.1e1 / l;
      out_9_11 = t27 * (I__y * (t22 - G) - t25) / 2;
      out_10_11 = t27 * (I__y * (t22 + G) + t25) / 2;
      out_8_12 = out_8_11;
      out_9_12 = out_10_11;
      out_10_12 = out_9_11;
      out_6_14 = -3 * t18 * I__z * t17;
      out_7_14 = out_6_14;

      % Store outputs
      out_K_sf = sparse(10, 14);
      out_K_sf(1, 2) = out_1_2;
      out_K_sf(2, 3) = out_2_3;
      out_K_sf(3, 4) = out_3_4;
      out_K_sf(4, 5) = out_4_5;
      out_K_sf(5, 6) = out_5_6;
      out_K_sf(6, 8) = out_6_8;
      out_K_sf(7, 8) = out_7_8;
      out_K_sf(6, 9) = out_6_9;
      out_K_sf(7, 9) = out_7_9;
      out_K_sf(8, 10) = out_8_10;
      out_K_sf(9, 10) = out_9_10;
      out_K_sf(10, 10) = out_10_10;
      out_K_sf(8, 11) = out_8_11;
      out_K_sf(9, 11) = out_9_11;
      out_K_sf(10, 11) = out_10_11;
      out_K_sf(8, 12) = out_8_12;
      out_K_sf(9, 12) = out_9_12;
      out_K_sf(10, 12) = out_10_12;
      out_K_sf(6, 14) = out_6_14;
      out_K_sf(7, 14) = out_7_14;
    end % K_sf
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_K_ss = K_ss( this, ~, ~ )
      % Evaluate the stiffness matrix K_ss.

      % Extract properties
      E = this.m_data.E;
      G = this.m_data.G;
      A = this.m_data.A;
      I__y = this.m_data.I__y;
      I__z = this.m_data.I__z;
      K = this.m_data.K;
      T = this.m_data.T;
      l = this.m_data.l;

      % Extract inputs
      % No inputs

      % Evaluate function
      out_1_1 = K;
      out_2_2 = K;
      out_3_3 = K;
      out_4_4 = T;
      out_5_5 = T;
      t1 = l ^ 2;
      t2 = t1 * A;
      t3 = 12 * I__z;
      t7 = 0.1e1 / t1 / l;
      out_6_6 = t7 * (t2 + t3) * E / 2;
      out_7_6 = -t7 * (t2 - t3) * E / 2;
      out_6_7 = out_7_6;
      out_7_7 = out_6_6;
      out_8_8 = 12 * t7 * I__y * E;
      t15 = sqrt(2);
      out_9_8 = 3 / t1 * I__y * E * t15;
      out_10_8 = out_9_8;
      out_8_9 = out_10_8;
      t20 = 4 * E;
      t23 = G * I__z;
      t25 = 0.1e1 / l;
      out_9_9 = t25 * (I__y * (t20 + G) + t23) / 2;
      out_10_9 = t25 * (I__y * (t20 - G) - t23) / 2;
      out_8_10 = out_8_9;
      out_9_10 = out_10_9;
      out_10_10 = out_9_9;

      % Store outputs
      out_K_ss = sparse(10, 10);
      out_K_ss(1, 1) = out_1_1;
      out_K_ss(2, 2) = out_2_2;
      out_K_ss(3, 3) = out_3_3;
      out_K_ss(4, 4) = out_4_4;
      out_K_ss(5, 5) = out_5_5;
      out_K_ss(6, 6) = out_6_6;
      out_K_ss(7, 6) = out_7_6;
      out_K_ss(6, 7) = out_6_7;
      out_K_ss(7, 7) = out_7_7;
      out_K_ss(8, 8) = out_8_8;
      out_K_ss(9, 8) = out_9_8;
      out_K_ss(10, 8) = out_10_8;
      out_K_ss(8, 9) = out_8_9;
      out_K_ss(9, 9) = out_9_9;
      out_K_ss(10, 9) = out_10_9;
      out_K_ss(8, 10) = out_8_10;
      out_K_ss(9, 10) = out_9_10;
      out_K_ss(10, 10) = out_10_10;
    end % K_ss
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_d = d( this, ~, ~ )
      % Evaluate the deformation vector d.

      % Extract properties
      E = this.m_data.E;
      G = this.m_data.G;
      A = this.m_data.A;
      I__y = this.m_data.I__y;
      I__z = this.m_data.I__z;
      K = this.m_data.K;
      T = this.m_data.T;
      l = this.m_data.l;
      F__x = this.m_data.F__x;
      F__y = this.m_data.F__y;
      F__z = this.m_data.F__z;
      M__x = this.m_data.M__x;
      M__y = this.m_data.M__y;
      M__z = this.m_data.M__z;

      % Extract inputs
      % No inputs

      % Evaluate function
      t1 = A * K;
      t2 = l ^ 2;
      t3 = t2 * l;
      t5 = t3 * M__z * t1;
      t6 = F__x * I__z;
      t7 = sqrt(2);
      t8 = t7 * K;
      t9 = t2 * t8;
      t11 = 3 * t9 * t6;
      t12 = F__y * I__z;
      t14 = 3 * t9 * t12;
      t15 = A * E;
      t18 = 6 * I__z * M__z * t15;
      t19 = I__z * K;
      t22 = 6 * M__z * l * t19;
      t24 = 0.1e1 / K;
      t26 = 0.1e1 / E;
      t29 = 0.1e1 / A;
      t32 = 0.1e1 / t2 * t29 / I__z;
      out_6 = t32 * t26 * t24 * (-t5 - t11 + t14 + t18 + t22) / 6;
      t35 = t2 ^ 2;
      t36 = t35 * K;
      t37 = t36 * A * F__x;
      t39 = t36 * A * F__y;
      t40 = A * t7;
      t41 = M__z * K;
      t43 = t3 * t41 * t40;
      t47 = 3 * E * I__z * M__z * t40;
      t48 = I__z * t7;
      t51 = 3 * l * t41 * t48;
      t59 = 0.1e1 / (3 * I__z * t15 + 3 * l * t19 + t3 * t1);
      t62 = 0.1e1 / l * t24;
      out_7 = t62 * t59 * (t37 + t39 + t43 + t47 + t51) / 2;
      out_8 = t62 * t59 * (t37 + t39 - t43 - t47 - t51) / 2;
      t67 = E ^ 2;
      t68 = I__y ^ 2;
      t69 = t68 * t67;
      t70 = t7 * M__x;
      t73 = t7 * M__y;
      t76 = E * F__z;
      t77 = t68 * G;
      t81 = G * t76;
      t82 = I__z * I__y;
      t87 = t2 * T * I__y;
      t90 = E * G;
      t99 = I__y * t90;
      t100 = M__x * I__z;
      t101 = t7 * t100;
      t104 = M__y * I__z;
      t105 = t7 * t104;
      t108 = E * I__y;
      t110 = T * t7;
      t114 = F__z * G;
      t116 = T * I__z;
      t119 = 3 * t7 * M__x * t68 * t90 + 6 * l * t110 * M__y * t108 + 3 * t7 * M__y * t68 * t90 + 4 * l * t77 * t76 + 4 * l * t82 * t81 + t2 * t116 * t114 + 3 * t101 * t99 + 3 * t105 * t99 + t87 * t114 - 6 * t70 * t69 + 6 * t73 * t69 + 4 * t87 * t76;
      t124 = K * t68;
      t128 = t3 * t19;
      t131 = T * K;
      t132 = t35 * t131;
      t135 = G * I__y;
      t137 = G * I__z;
      t139 = G * t67;
      t140 = t68 * I__y;
      t141 = t140 * t139;
      t143 = I__z * t68;
      t144 = t143 * t139;
      t146 = T * l;
      t153 = l * t116;
      t156 = 6 * l * T * t68 * t90 + 6 * t3 * K * t69 + 4 * t3 * t124 * t90 + 4 * t132 * t108 + 4 * t128 * t99 + t132 * t135 + t132 * t137 + 6 * t146 * t69 + 6 * t153 * t99 + 6 * t141 + 6 * t144;
      out_9 = 0.1e1 / t156 * t2 * t119 / 2;
      t159 = t35 * l;
      t160 = t159 * t7;
      t161 = t76 * t160;
      t164 = T * t19 * t135 * t161;
      t166 = t82 * t90;
      t167 = K * M__x;
      t168 = t35 * T;
      t169 = t168 * t167;
      t170 = t169 * t166;
      t172 = G ^ 2;
      t173 = t172 * F__z;
      t177 = 2 * t131 * t82 * t173 * t160;
      t178 = t35 * t7;
      t179 = t76 * t178;
      t180 = t68 * t172;
      t183 = 8 * t19 * t180 * t179;
      t184 = I__y * t172;
      t185 = I__z ^ 2;
      t186 = K * t185;
      t189 = 4 * t186 * t184 * t179;
      t190 = E * t35;
      t192 = M__y * T;
      t193 = t192 * t19;
      t194 = t193 * t135 * t190;
      t196 = t2 * t7;
      t197 = F__z * t67;
      t200 = t116 * t77 * t197 * t196;
      t201 = 6 * t200;
      t202 = t76 * t196;
      t204 = t116 * t180 * t202;
      t205 = 12 * t204;
      t206 = T * t185;
      t208 = t206 * t184 * t202;
      t209 = 6 * t208;
      t212 = t19 * t77 * t197 * t178;
      t215 = t131 * t77 * t161;
      t217 = t67 * E;
      t218 = G * t217;
      t219 = t68 ^ 2;
      t220 = M__x * t219;
      t221 = t220 * t218;
      t222 = 12 * t221;
      t223 = M__y * t219;
      t224 = t223 * t218;
      t225 = 12 * t224;
      t226 = t172 * t67;
      t227 = t220 * t226;
      t228 = 12 * t227;
      t229 = t223 * t226;
      t230 = 12 * t229;
      t231 = -5 * t164 - 10 * t170 - t177 - t183 - t189 - 6 * t194 - t201 - t205 - t209 - 10 * t212 - 5 * t215 - t222 + t225 - t228 - t230;
      t233 = t172 * E * t3;
      t234 = K * t140;
      t235 = M__x * t234;
      t236 = t235 * t233;
      t238 = M__y * t234;
      t239 = t238 * t233;
      t241 = t172 * t35;
      t242 = t68 * t241;
      t243 = T * t167;
      t244 = t243 * t242;
      t245 = 2 * t244;
      t246 = M__y * K;
      t247 = T * t246;
      t248 = t247 * t242;
      t249 = 2 * t248;
      t250 = t185 * t241;
      t251 = t243 * t250;
      t252 = 2 * t251;
      t253 = t247 * t250;
      t254 = 2 * t253;
      t255 = T * M__x;
      t257 = l * t255 * t141;
      t260 = t67 * l * t7;
      t262 = t219 * t173 * t260;
      t263 = 6 * t262;
      t265 = t172 * E * l;
      t267 = T * M__x * t140;
      t268 = t267 * t265;
      t269 = 12 * t268;
      t271 = T * M__y * t140;
      t272 = t271 * t265;
      t273 = 12 * t272;
      t275 = G * t67 * t3;
      t276 = t235 * t275;
      t278 = t238 * t275;
      t280 = t67 * t35;
      t281 = t68 * t280;
      t282 = t243 * t281;
      t283 = 8 * t282;
      t284 = t247 * t281;
      t285 = 4 * t284;
      t286 = I__z * t140;
      t287 = M__x * t286;
      t288 = t287 * t218;
      t289 = 12 * t288;
      t290 = -8 * t236 - 8 * t239 - t245 - t249 - t252 - t254 - 24 * t257 - t263 - t269 - t273 - 26 * t276 - 10 * t278 - t283 - t285 - t289;
      t292 = M__y * t286;
      t293 = t292 * t218;
      t294 = 12 * t293;
      t295 = t287 * t226;
      t296 = 24 * t295;
      t297 = t292 * t226;
      t298 = 24 * t297;
      t299 = t185 * t68;
      t301 = M__x * t299 * t226;
      t302 = 12 * t301;
      t304 = M__y * t299 * t226;
      t305 = 12 * t304;
      t306 = t217 * l;
      t307 = t267 * t306;
      t308 = 12 * t307;
      t309 = t271 * t306;
      t310 = 12 * t309;
      t312 = T * t140;
      t314 = t312 * t173 * E * t196;
      t315 = 6 * t314;
      t318 = t234 * t114 * t67 * t178;
      t321 = t68 * F__z;
      t323 = t131 * t321 * t67 * t160;
      t324 = 4 * t323;
      t328 = 4 * t234 * t173 * E * t178;
      t329 = F__z * t160;
      t331 = t131 * t180 * t329;
      t332 = t185 * t172;
      t334 = t131 * t332 * t329;
      t335 = t246 * t143;
      t336 = t335 * t275;
      t338 = t167 * t143;
      t339 = t338 * t233;
      t341 = t294 - t296 - t298 - t302 - t305 - t308 + t310 - t315 - 10 * t318 - t324 - t328 - t331 - t334 - 10 * t336 - 16 * t339;
      t342 = t335 * t233;
      t344 = t185 * I__y;
      t345 = t167 * t344;
      t346 = t345 * t233;
      t348 = t246 * t344;
      t349 = t348 * t233;
      t353 = t192 * t124 * G * t190;
      t355 = I__y * t241;
      t357 = t255 * t19 * t355;
      t358 = 4 * t357;
      t359 = t193 * t355;
      t360 = 4 * t359;
      t362 = t255 * t143 * t265;
      t363 = 24 * t362;
      t364 = t192 * t143;
      t365 = t364 * t265;
      t366 = 24 * t365;
      t368 = t255 * t344 * t265;
      t369 = 12 * t368;
      t371 = t192 * t344 * t265;
      t372 = 12 * t371;
      t373 = t338 * t275;
      t375 = t68 * t90;
      t376 = t169 * t375;
      t378 = t68 * t139;
      t380 = t146 * t100 * t378;
      t383 = t286 * t173 * t260;
      t384 = 12 * t383;
      t386 = t299 * t173 * t260;
      t387 = 6 * t386;
      t390 = t312 * t114 * t67 * t196;
      t391 = 6 * t390;
      t392 = -16 * t342 - 8 * t346 - 8 * t349 - 6 * t353 - t358 - t360 - t363 - t366 - t369 - t372 - 26 * t373 - 10 * t376 - 24 * t380 - t384 - t387 - t391;
      t396 = K * t219;
      t397 = t3 * t396;
      t400 = t140 * t218;
      t403 = t140 * t217;
      t408 = t140 * t226;
      t411 = t68 * t226;
      t417 = t168 * t19;
      t420 = T ^ 2;
      t421 = t420 * K;
      t422 = t159 * t421;
      t425 = t172 * E;
      t426 = t140 * t425;
      t429 = t68 * t425;
      t432 = I__y * t425;
      t438 = t159 * t420;
      t443 = 5 * t168 * t186 * t432 + 4 * t3 * t186 * t411 + 5 * t438 * t19 * t99 + 6 * t128 * t400 + 8 * t128 * t408 + 14 * t132 * t141 + 6 * t132 * t403 + 5 * t132 * t426 + t422 * t180 + 6 * t397 * t218 + 4 * t397 * t226 + 5 * t422 * t375 + 14 * t417 * t378 + 10 * t417 * t429 + 4 * t422 * t69;
      t444 = I__z * t184;
      t448 = t172 * t217;
      t449 = t219 * I__y;
      t452 = I__z * t219;
      t455 = t185 * t140;
      t458 = T * t219;
      t459 = l * t458;
      t464 = t2 * t420;
      t474 = t420 * t140;
      t475 = t2 * t474;
      t478 = t420 * I__z;
      t479 = t2 * t478;
      t490 = 6 * t2 * t420 * t185 * t432 + 12 * l * t206 * t411 + 12 * t475 * t139 + 12 * t153 * t400 + 24 * t153 * t408 + 12 * t459 * t218 + 12 * t459 * t226 + t422 * t332 + 12 * t479 * t378 + 6 * t464 * t403 + 2 * t422 * t444 + 6 * t475 * t425 + 12 * t479 * t429 + 6 * t449 * t448 + 12 * t452 * t448 + 6 * t455 * t448;
      t492 = 0.1e1 / (t443 + t490);
      out_10 = -t492 * (t231 + t290 + t341 + t392) * l / 4;
      t499 = G * t67 * l;
      t502 = -24 * t271 * t499 + t164 - 6 * t170 + 2 * t194 - t201 - t205 - t209 - 2 * t212 + t215 + t222 - t225 - t228 - t230;
      t507 = -2 * t236 - 2 * t239 - t245 - t249 - t252 - t254 - t263 - t269 - t273 - 10 * t276 - 2 * t278 + t283 + t285 + t289;
      t515 = -24 * t364 * t499 - t294 - t296 - t298 - t302 - t305 + t308 - t310 - t315 - 2 * t318 + t324 - 2 * t336 - 4 * t339 - 4 * t342;
      t521 = -2 * t346 - 2 * t349 + 2 * t353 - t358 - t360 - t363 - t366 - t369 - t372 - 10 * t373 - 6 * t376 - t384 - t387 - t391;
      out_11 = -t492 * l * (t502 + t507 + t515 + t521) / 4;
      out_12 = out_6;
      t527 = A ^ 2;
      t528 = E * t527;
      t530 = t3 * F__x * t528;
      t532 = t3 * F__y * t528;
      t536 = 3 * l * t6 * t15;
      t539 = 3 * l * t12 * t15;
      t540 = t2 * K;
      t542 = 3 * t540 * t6;
      t544 = 3 * t540 * t12;
      out_13 = t26 * t59 * t29 * (t530 + t532 + 2 * t37 + t536 - t539 - t43 + t542 - t544 - t47 - t51) / 2;
      out_14 = t26 * (t530 + t532 + 2 * t39 + t43 - t536 + t539 + t47 - t542 + t544 + t51) * t59 * t29 / 2;
      t554 = t286 * t226;
      t555 = t3 * t7;
      t556 = t555 * t246;
      t559 = t299 * t226;
      t560 = t555 * t167;
      t565 = t234 * t139;
      t566 = t168 * t70;
      t569 = t168 * t73;
      t572 = t234 * t425;
      t578 = t438 * t70;
      t581 = t286 * t218;
      t582 = t146 * t70;
      t585 = t146 * t73;
      t596 = t77 * t197;
      t597 = t159 * T;
      t598 = t597 * t19;
      t601 = t180 * t76;
      t604 = t184 * t76;
      t608 = t135 * t76;
      t609 = t35 * t2;
      t610 = t609 * t420;
      t611 = t610 * t19;
      t614 = t464 * t70;
      t617 = 6 * t578 * t124 * t90 + 8 * t597 * t186 * t604 + 36 * t614 * t144 + 24 * t556 * t554 + 72 * t582 * t554 + 72 * t585 * t554 + 12 * t556 * t559 + 12 * t560 * t559 + 36 * t582 * t559 + 36 * t585 * t559 + 42 * t566 * t565 + 6 * t569 * t565 + 3 * t566 * t572 + 3 * t569 * t572 + 72 * t582 * t581 + 72 * t585 * t581 + 44 * t598 * t596 + 16 * t598 * t601 + 8 * t611 * t608;
      t618 = t464 * t73;
      t627 = t35 * t110;
      t628 = t627 * t246;
      t631 = t143 * t425;
      t632 = t627 * t167;
      t637 = t344 * t425;
      t642 = t420 * t7;
      t649 = t140 * t448;
      t650 = M__x * t185;
      t654 = M__y * t185;
      t659 = t2 * t642;
      t662 = F__z * t217;
      t663 = G * t662;
      t664 = t2 * t458;
      t667 = t172 * t197;
      t670 = G * t197;
      t671 = t3 * t474;
      t674 = t172 * t76;
      t677 = t68 * t173;
      t678 = t609 * t421;
      t680 = t185 * t173;
      t682 = 6 * t159 * t642 * t167 * t166 + 36 * t659 * M__x * t403 + 36 * t7 * t650 * t649 + 36 * t7 * t654 * t649 + 36 * t618 * t144 + 6 * t628 * t144 + 42 * t632 * t144 + 24 * t560 * t554 + 12 * t556 * t581 + 60 * t560 * t581 + 6 * t628 * t631 + 3 * t628 * t637 + 6 * t632 * t631 + 3 * t632 * t637 + 96 * t664 * t663 + 60 * t664 * t667 + 60 * t671 * t670 + 12 * t671 * t674 + t678 * t677 + t678 * t680;
      t684 = t172 * t662;
      t691 = t35 * t396;
      t700 = t68 * t197;
      t706 = t219 * t448;
      t728 = t597 * t234;
      t742 = 96 * l * t452 * t684 + 48 * l * t455 * t684 + 48 * t691 * t663 + 48 * t159 * t131 * t140 * t662 + 16 * t691 * t667 + 16 * t678 * t700 + 36 * t659 * M__y * t403 + 72 * t101 * t706 + 72 * t105 * t706 + 48 * l * t449 * t172 * t662 + 48 * t671 * t662 + 36 * t7 * M__x * t449 * t448 + 36 * t7 * M__y * t449 * t448 + 16 * t36 * t299 * t667 + 44 * t728 * t670 + 8 * t728 * t674 + 8 * t610 * t124 * t81 + 2 * t611 * I__y * t173 + 24 * t578 * K * t69;
      t743 = t219 * t218;
      t748 = t219 * t226;
      t761 = K * t403;
      t770 = t2 * T;
      t774 = t3 * t420;
      t775 = t774 * t143;
      t783 = t770 * t286;
      t788 = t36 * t286;
      t793 = 60 * t770 * t299 * t667 + 12 * t774 * t344 * t674 + 36 * t614 * t141 + 36 * t618 * t141 + 12 * t556 * t743 + 12 * t556 * t748 + 60 * t560 * t743 + 12 * t560 * t748 + 60 * t566 * t761 + 12 * t569 * t761 + 72 * t582 * t743 + 36 * t582 * t748 + 72 * t585 * t743 + 36 * t585 * t748 + 96 * t783 * t663 + 48 * t788 * t663 + 120 * t783 * t667 + 32 * t788 * t667 + 60 * t775 * t670 + 24 * t775 * t674;
      out_15 = 0.1e1 / I__y * t26 * t492 * (t617 + t682 + t742 + t793) * t2 / 24;
      t820 = t420 * M__x;
      t821 = t2 * t820;
      t824 = -12 * t478 * t135 * t76 * t555 - 12 * t420 * t321 * t67 * t555 - 48 * t821 * t375 - 14 * t164 - 52 * t170 - t177 - t183 - t189 - 24 * t200 - 24 * t204 - 12 * t208 - 20 * t212 - 14 * t215 - 24 * t221 + 24 * t224 - 24 * t227 - 24 * t229;
      t825 = K * t108;
      t826 = t159 * t820;
      t829 = K * t135;
      t832 = K * t137;
      t850 = -32 * t826 * t825 - 8 * t826 * t829 - 8 * t826 * t832 - 10 * t236 - 10 * t239 - 4 * t244 - 4 * t248 - 4 * t251 - 4 * t253 - 96 * t257 - 12 * t262 - 24 * t268 - 24 * t272 - 64 * t276 - 8 * t278 - 64 * t282 - 8 * t284 - 24 * t288;
      t869 = t610 * I__y * K;
      t873 = G * F__z * t7;
      t884 = -12 * t420 * t68 * t114 * E * t555 - 8 * t869 * F__z * E * t7 - 48 * t464 * t100 * t99 - 2 * t611 * t873 - 48 * t821 * t69 - 2 * t869 * t873 + 24 * t293 - 48 * t295 - 48 * t297 - 24 * t301 - 24 * t304 - 24 * t307 + 24 * t309 - 12 * t314 - 20 * t318 - 20 * t323 - t328 - t331;
      t902 = -t334 - 8 * t336 - 20 * t339 - 20 * t342 - 10 * t346 - 10 * t349 - 8 * t357 - 8 * t359 - 48 * t362 - 48 * t365 - 24 * t368 - 24 * t371 - 64 * t373 - 52 * t376 - 96 * t380 - 24 * t383 - 12 * t386 - 24 * t390;
      out_16 = -t492 * l * (t824 + t850 + t884 + t902) / 8;
      t909 = t3 * T;
      t913 = t160 * t19;
      t923 = t609 * T * t8;
      t929 = t909 * t48;
      t934 = t35 * t420;
      t938 = t597 * t246;
      t945 = t420 * M__y;
      t946 = t609 * t945;
      t949 = K * t180;
      t950 = t159 * t255;
      t953 = t159 * t192;
      t956 = K * t332;
      t963 = -2 * t609 * t110 * t19 * t608 - 12 * t909 * t7 * t185 * t604 - 4 * t160 * t186 * t604 - 2 * t923 * t82 * t173 - 12 * t934 * t48 * t608 - 2 * t923 * t77 * t76 - 28 * t938 * t166 - 4 * t913 * t596 - 24 * t929 * t596 - 8 * t913 * t601 - 24 * t929 * t601 - 8 * t946 * t825 - 8 * t946 * t829 - 4 * t950 * t949 - 4 * t953 * t949 - 4 * t950 * t956 - 4 * t953 * t956;
      t964 = G * t280;
      t970 = t68 * t67 * t159;
      t975 = t172 * t190;
      t985 = l * t104;
      t1000 = G * t67 * t2;
      t1009 = t3 * t945;
      t1012 = 24 * t287 * G * t306 - 48 * l * t100 * t408 - 24 * l * t650 * t411 - 24 * l * t654 * t411 - 24 * t2 * t192 * t426 - 24 * t2 * t255 * t426 - 96 * t271 * t1000 - 48 * t1009 * t375 - 8 * t235 * t964 - 10 * t235 * t975 - 16 * t238 * t964 - 10 * t238 * t975 - 8 * t243 * t970 - 16 * t247 * t970 - 24 * t985 * t400 - 48 * t985 * t408 - 8 * t946 * t832;
      t1044 = t160 * t234;
      t1053 = -12 * t2 * t7 * t219 * t667 - 12 * t934 * t7 * t68 * t81 - 8 * t597 * t167 * t444 - 12 * t35 * t642 * t700 - 96 * t364 * t1000 - 4 * t1044 * t670 - 4 * t1044 * t674 - 16 * t335 * t964 - 20 * t335 * t975 - 8 * t338 * t964 - 20 * t338 * t975 - 10 * t345 * t975 - 10 * t348 * t975 - 8 * t938 * t444 - t923 * t677 - t923 * t680 - 4 * t923 * t700;
      t1061 = t909 * t7 * t140;
      t1083 = l * t223;
      t1097 = t217 * t2;
      t1102 = -24 * t196 * t286 * t667 - 12 * t196 * t299 * t667 - 24 * t1061 * t670 - 12 * t1061 * t674 - 48 * t770 * t100 * t429 - 48 * t770 * t104 * t429 - 24 * t770 * t650 * t432 - 24 * t770 * t654 * t432 - 48 * t774 * t104 * t99 - 28 * t938 * t375 - 24 * t1083 * t218 - 24 * l * t220 * t226 - 24 * t1083 * t226 - 48 * t1009 * t69 + 24 * M__x * t219 * G * t306 + 24 * t267 * t1097 - 24 * t271 * t1097;
      out_17 = -(t963 + t1012 + t1053 + t1102) * t492 / 8;
      out_18 = t32 * t26 * t24 * (2 * t5 - t11 + t14 + t18 + t22) / 6;
      out_24 = -0.3e1 / 0.4e1 * t26 * t59 * t2 * (F__x * K * l + F__y * K * l + F__x * t15 + F__y * t15) * t7;

      % Store outputs
      out_d = zeros(24, 1);
      out_d(6) = out_6;
      out_d(7) = out_7;
      out_d(8) = out_8;
      out_d(9) = out_9;
      out_d(10) = out_10;
      out_d(11) = out_11;
      out_d(12) = out_12;
      out_d(13) = out_13;
      out_d(14) = out_14;
      out_d(15) = out_15;
      out_d(16) = out_16;
      out_d(17) = out_17;
      out_d(18) = out_18;
      out_d(24) = out_24;
    end % d
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_d_f = d_f( this, ~, ~ )
      % Evaluate the deformation vector d_f.

      % Extract properties
      E = this.m_data.E;
      G = this.m_data.G;
      A = this.m_data.A;
      I__y = this.m_data.I__y;
      I__z = this.m_data.I__z;
      K = this.m_data.K;
      T = this.m_data.T;
      l = this.m_data.l;
      F__x = this.m_data.F__x;
      F__y = this.m_data.F__y;
      F__z = this.m_data.F__z;
      M__x = this.m_data.M__x;
      M__y = this.m_data.M__y;
      M__z = this.m_data.M__z;

      % Extract inputs
      % No inputs

      % Evaluate function
      t1 = A * K;
      t2 = l ^ 2;
      t3 = t2 * l;
      t5 = t3 * M__z * t1;
      t6 = F__x * I__z;
      t7 = sqrt(2);
      t8 = t7 * K;
      t9 = t2 * t8;
      t11 = 3 * t9 * t6;
      t12 = F__y * I__z;
      t14 = 3 * t9 * t12;
      t15 = A * E;
      t18 = 6 * I__z * M__z * t15;
      t19 = I__z * K;
      t22 = 6 * M__z * l * t19;
      t24 = 0.1e1 / K;
      t26 = 0.1e1 / E;
      t29 = 0.1e1 / A;
      t32 = 0.1e1 / t2 * t29 / I__z;
      out_1 = t32 * t26 * t24 * (-t5 - t11 + t14 + t18 + t22) / 6;
      t35 = t2 ^ 2;
      t36 = t35 * K;
      t37 = t36 * A * F__x;
      t39 = t36 * A * F__y;
      t40 = A * t7;
      t41 = M__z * K;
      t43 = t3 * t41 * t40;
      t47 = 3 * E * I__z * M__z * t40;
      t48 = I__z * t7;
      t51 = 3 * l * t41 * t48;
      t59 = 0.1e1 / (3 * I__z * t15 + 3 * l * t19 + t1 * t3);
      t62 = 0.1e1 / l * t24;
      out_2 = t62 * t59 * (t37 + t39 + t43 + t47 + t51) / 2;
      out_3 = t62 * t59 * (t37 + t39 - t43 - t47 - t51) / 2;
      t67 = E ^ 2;
      t68 = I__y ^ 2;
      t69 = t68 * t67;
      t70 = t7 * M__x;
      t73 = t7 * M__y;
      t76 = E * F__z;
      t77 = t68 * G;
      t81 = G * t76;
      t82 = I__z * I__y;
      t87 = t2 * T * I__y;
      t90 = E * G;
      t99 = I__y * t90;
      t100 = M__x * I__z;
      t101 = t7 * t100;
      t104 = M__y * I__z;
      t105 = t7 * t104;
      t108 = E * I__y;
      t110 = T * t7;
      t114 = F__z * G;
      t116 = T * I__z;
      t119 = 3 * M__x * t68 * t7 * t90 + 6 * M__y * l * t108 * t110 + 3 * M__y * t68 * t7 * t90 + 4 * l * t76 * t77 + 4 * l * t81 * t82 + t114 * t116 * t2 + 3 * t101 * t99 + 3 * t105 * t99 + t114 * t87 - 6 * t69 * t70 + 6 * t69 * t73 + 4 * t76 * t87;
      t124 = K * t68;
      t128 = t3 * t19;
      t131 = T * K;
      t132 = t35 * t131;
      t135 = G * I__y;
      t137 = G * I__z;
      t139 = G * t67;
      t140 = t68 * I__y;
      t141 = t140 * t139;
      t143 = I__z * t68;
      t144 = t143 * t139;
      t146 = T * l;
      t153 = l * t116;
      t156 = 6 * T * l * t68 * t90 + 6 * K * t3 * t69 + 4 * t124 * t3 * t90 + 4 * t108 * t132 + 4 * t128 * t99 + t132 * t135 + t132 * t137 + 6 * t146 * t69 + 6 * t153 * t99 + 6 * t141 + 6 * t144;
      out_4 = 0.1e1 / t156 * t2 * t119 / 2;
      t159 = t67 * E;
      t160 = G * t159;
      t161 = I__z * t140;
      t162 = M__x * t161;
      t163 = t162 * t160;
      t164 = 12 * t163;
      t165 = M__y * t161;
      t166 = t165 * t160;
      t167 = 12 * t166;
      t168 = G ^ 2;
      t169 = t168 * t67;
      t170 = t162 * t169;
      t171 = 24 * t170;
      t172 = t165 * t169;
      t173 = 24 * t172;
      t174 = I__z ^ 2;
      t175 = t174 * t68;
      t177 = M__x * t175 * t169;
      t178 = 12 * t177;
      t180 = M__y * t175 * t169;
      t181 = 12 * t180;
      t182 = t159 * l;
      t184 = T * M__x * t140;
      t185 = t184 * t182;
      t186 = 12 * t185;
      t188 = T * M__y * t140;
      t189 = t188 * t182;
      t190 = 12 * t189;
      t191 = t35 * l;
      t192 = t191 * t7;
      t193 = t76 * t192;
      t196 = T * t19 * t135 * t193;
      t198 = T * M__x;
      t200 = l * t198 * t141;
      t203 = t67 * l * t7;
      t204 = t168 * F__z;
      t205 = t68 ^ 2;
      t207 = t205 * t204 * t203;
      t208 = 6 * t207;
      t210 = t168 * E * l;
      t211 = t184 * t210;
      t212 = 12 * t211;
      t213 = t188 * t210;
      t214 = 12 * t213;
      t216 = G * t67 * t3;
      t217 = K * t140;
      t218 = M__x * t217;
      t219 = t218 * t216;
      t221 = M__y * t217;
      t222 = t221 * t216;
      t224 = -t164 + t167 - t171 - t173 - t178 - t181 - t186 + t190 - 5 * t196 - 24 * t200 - t208 - t212 - t214 - 26 * t219 - 10 * t222;
      t225 = t67 * t35;
      t226 = t68 * t225;
      t227 = K * M__x;
      t228 = T * t227;
      t229 = t228 * t226;
      t230 = 8 * t229;
      t231 = M__y * K;
      t232 = T * t231;
      t233 = t232 * t226;
      t234 = 4 * t233;
      t236 = t168 * E * t3;
      t237 = t218 * t236;
      t239 = t221 * t236;
      t241 = t174 * I__y;
      t242 = t231 * t241;
      t243 = t242 * t236;
      t245 = E * t35;
      t247 = M__y * T;
      t249 = t247 * t124 * G * t245;
      t251 = t168 * t35;
      t252 = t68 * t251;
      t253 = t228 * t252;
      t254 = 2 * t253;
      t255 = t232 * t252;
      t256 = 2 * t255;
      t257 = I__y * t251;
      t259 = t198 * t19 * t257;
      t260 = 4 * t259;
      t261 = t174 * t251;
      t262 = t228 * t261;
      t263 = 2 * t262;
      t264 = t232 * t261;
      t265 = 2 * t264;
      t266 = M__x * t205;
      t267 = t266 * t160;
      t268 = 12 * t267;
      t269 = M__y * t205;
      t270 = t269 * t160;
      t271 = 12 * t270;
      t272 = t266 * t169;
      t273 = 12 * t272;
      t274 = t269 * t169;
      t275 = 12 * t274;
      t276 = -t230 - t234 - 8 * t237 - 8 * t239 - 8 * t243 - 6 * t249 - t254 - t256 - t260 - t263 - t265 - t268 + t271 - t273 - t275;
      t278 = t247 * t19;
      t279 = t278 * t257;
      t280 = 4 * t279;
      t282 = t198 * t143 * t210;
      t283 = 24 * t282;
      t284 = t247 * t143;
      t285 = t284 * t210;
      t286 = 24 * t285;
      t288 = t198 * t241 * t210;
      t289 = 12 * t288;
      t291 = t247 * t241 * t210;
      t292 = 12 * t291;
      t293 = t227 * t143;
      t294 = t293 * t216;
      t296 = t68 * t90;
      t297 = t35 * T;
      t298 = t297 * t227;
      t299 = t298 * t296;
      t301 = t68 * t139;
      t303 = t146 * t100 * t301;
      t306 = t161 * t204 * t203;
      t307 = 12 * t306;
      t309 = t175 * t204 * t203;
      t310 = 6 * t309;
      t311 = t2 * t7;
      t313 = T * t140;
      t315 = t313 * t114 * t67 * t311;
      t316 = 6 * t315;
      t319 = t313 * t204 * E * t311;
      t320 = 6 * t319;
      t321 = t35 * t7;
      t324 = t217 * t114 * t67 * t321;
      t327 = t68 * F__z;
      t329 = t131 * t327 * t67 * t192;
      t330 = 4 * t329;
      t334 = 4 * t217 * t204 * E * t321;
      t335 = -t280 - t283 - t286 - t289 - t292 - 26 * t294 - 10 * t299 - 24 * t303 - t307 - t310 - t316 - t320 - 10 * t324 - t330 - t334;
      t336 = F__z * t192;
      t337 = t68 * t168;
      t339 = t131 * t337 * t336;
      t340 = t174 * t168;
      t342 = t131 * t340 * t336;
      t343 = t231 * t143;
      t344 = t343 * t216;
      t346 = t293 * t236;
      t348 = t343 * t236;
      t350 = t227 * t241;
      t351 = t350 * t236;
      t353 = t76 * t311;
      t354 = I__y * t168;
      t355 = T * t174;
      t357 = t355 * t354 * t353;
      t358 = 6 * t357;
      t359 = F__z * t67;
      t362 = t19 * t77 * t359 * t321;
      t365 = t131 * t77 * t193;
      t367 = t82 * t90;
      t368 = t298 * t367;
      t373 = 2 * t131 * t82 * t204 * t192;
      t374 = t76 * t321;
      t377 = 8 * t19 * t337 * t374;
      t378 = K * t174;
      t381 = 4 * t378 * t354 * t374;
      t383 = t278 * t135 * t245;
      t387 = t116 * t77 * t359 * t311;
      t388 = 6 * t387;
      t390 = t116 * t337 * t353;
      t391 = 12 * t390;
      t392 = -t339 - t342 - 10 * t344 - 16 * t346 - 16 * t348 - 8 * t351 - t358 - 10 * t362 - 5 * t365 - 10 * t368 - t373 - t377 - t381 - 6 * t383 - t388 - t391;
      t396 = K * t205;
      t397 = t3 * t396;
      t400 = t140 * t160;
      t403 = t140 * t159;
      t408 = t140 * t169;
      t411 = t68 * t169;
      t417 = t297 * t19;
      t420 = T ^ 2;
      t421 = t420 * K;
      t422 = t191 * t421;
      t425 = t168 * E;
      t426 = t140 * t425;
      t429 = t68 * t425;
      t432 = I__y * t425;
      t438 = t191 * t420;
      t443 = 5 * t19 * t438 * t99 + 5 * t297 * t378 * t432 + 4 * t3 * t378 * t411 + 6 * t128 * t400 + 8 * t128 * t408 + 14 * t132 * t141 + 6 * t132 * t403 + 5 * t132 * t426 + 6 * t160 * t397 + 4 * t169 * t397 + 5 * t296 * t422 + 14 * t301 * t417 + t337 * t422 + 10 * t417 * t429 + 4 * t422 * t69;
      t444 = I__z * t354;
      t448 = t168 * t159;
      t449 = t205 * I__y;
      t452 = I__z * t205;
      t455 = t174 * t140;
      t458 = T * t205;
      t459 = l * t458;
      t464 = t2 * t420;
      t474 = t420 * t140;
      t475 = t2 * t474;
      t478 = t420 * I__z;
      t479 = t2 * t478;
      t490 = 6 * t174 * t2 * t420 * t432 + 12 * l * t355 * t411 + 12 * t139 * t475 + 12 * t153 * t400 + 24 * t153 * t408 + 12 * t160 * t459 + 12 * t169 * t459 + 12 * t301 * t479 + t340 * t422 + 6 * t403 * t464 + 2 * t422 * t444 + 6 * t425 * t475 + 12 * t429 * t479 + 6 * t448 * t449 + 12 * t448 * t452 + 6 * t448 * t455;
      t492 = 0.1e1 / (t443 + t490);
      out_5 = -t492 * (t224 + t276 + t335 + t392) * l / 4;
      t496 = G * t67 * l;
      t499 = -24 * t188 * t496 + t164 - t167 - t171 - t173 - t178 - t181 + t186 - t190 + t196 - t208 - t212 - t214;
      t504 = -10 * t219 - 2 * t222 + t230 + t234 - 2 * t237 - 2 * t239 - t254 - t256 - t263 - t265 + t268 - t271 - t273 - t275;
      t512 = -24 * t284 * t496 - 2 * t243 + 2 * t249 - t260 - t280 - t283 - t286 - t289 - t292 - 10 * t294 - 6 * t299 - t307 - t310 - t316;
      t521 = -t320 - 2 * t324 + t330 - 2 * t344 - 4 * t346 - 4 * t348 - 2 * t351 - t358 - 2 * t362 + t365 - 6 * t368 + 2 * t383 - t388 - t391;
      out_6 = -t492 * l * (t499 + t504 + t512 + t521) / 4;
      out_7 = out_1;
      t527 = A ^ 2;
      t528 = E * t527;
      t530 = t3 * F__x * t528;
      t532 = t3 * F__y * t528;
      t536 = 3 * l * t6 * t15;
      t539 = 3 * l * t12 * t15;
      t540 = t2 * K;
      t542 = 3 * t540 * t6;
      t544 = 3 * t540 * t12;
      out_8 = t26 * t59 * t29 * (t530 + t532 + 2 * t37 + t536 - t539 - t43 + t542 - t544 - t47 - t51) / 2;
      out_9 = t26 * (t530 + t532 + 2 * t39 + t43 - t536 + t539 + t47 - t542 + t544 + t51) * t59 * t29 / 2;
      t554 = F__z * t159;
      t559 = t3 * t474;
      t570 = t241 * t425;
      t571 = t35 * t110;
      t572 = t571 * t227;
      t575 = t571 * t231;
      t578 = t420 * t7;
      t587 = t143 * t425;
      t592 = t168 * t76;
      t595 = t68 * t204;
      t596 = t35 * t2;
      t597 = t596 * t421;
      t599 = t174 * t204;
      t601 = t168 * t554;
      t608 = G * t554;
      t609 = t35 * t396;
      t616 = t168 * t359;
      t619 = 36 * M__x * t448 * t449 * t7 + 36 * M__y * t448 * t449 * t7 + 48 * l * t168 * t449 * t554 + 48 * t131 * t140 * t191 * t554 + 6 * t191 * t227 * t367 * t578 + 96 * l * t452 * t601 + 48 * l * t455 * t601 + 42 * t144 * t572 + 6 * t144 * t575 + 48 * t554 * t559 + 12 * t559 * t592 + 3 * t570 * t572 + 3 * t570 * t575 + 6 * t572 * t587 + 6 * t575 * t587 + t595 * t597 + t597 * t599 + 48 * t608 * t609 + 16 * t609 * t616;
      t620 = t68 * t359;
      t624 = t2 * t578;
      t627 = t205 * t448;
      t632 = t140 * t448;
      t633 = M__x * t174;
      t637 = M__y * t174;
      t644 = t2 * t458;
      t649 = G * t359;
      t652 = t161 * t160;
      t653 = t146 * t73;
      t656 = t161 * t169;
      t657 = t146 * t70;
      t662 = t175 * t169;
      t667 = t77 * t359;
      t668 = t191 * T;
      t669 = t668 * t19;
      t672 = t337 * t76;
      t675 = t354 * t76;
      t679 = t135 * t76;
      t680 = t596 * t420;
      t681 = t680 * t19;
      t684 = t464 * t70;
      t687 = 16 * t597 * t620 + 36 * t624 * M__y * t403 + 72 * t101 * t627 + 72 * t105 * t627 + 36 * t7 * t633 * t632 + 36 * t7 * t637 * t632 + 36 * t624 * M__x * t403 + 96 * t644 * t608 + 60 * t644 * t616 + 60 * t559 * t649 + 72 * t653 * t652 + 72 * t657 * t656 + 72 * t653 * t656 + 36 * t657 * t662 + 36 * t653 * t662 + 44 * t669 * t667 + 16 * t669 * t672 + 8 * t668 * t378 * t675 + 8 * t681 * t679 + 36 * t684 * t144;
      t689 = t464 * t73;
      t692 = t3 * t7;
      t693 = t692 * t227;
      t696 = t692 * t231;
      t707 = t217 * t139;
      t708 = t297 * t70;
      t711 = t297 * t73;
      t714 = t217 * t425;
      t720 = t438 * t70;
      t728 = t205 * t160;
      t733 = t205 * t169;
      t740 = 24 * K * t69 * t720 + 6 * t124 * t720 * t90 + 36 * t141 * t684 + 36 * t144 * t689 + 72 * t652 * t657 + 60 * t652 * t693 + 12 * t652 * t696 + 72 * t653 * t728 + 36 * t653 * t733 + 24 * t656 * t693 + 24 * t656 * t696 + 72 * t657 * t728 + 36 * t657 * t733 + 12 * t662 * t693 + 12 * t662 * t696 + 42 * t707 * t708 + 6 * t707 * t711 + 3 * t708 * t714 + 3 * t711 * t714;
      t747 = K * t403;
      t756 = t2 * T;
      t760 = t3 * t420;
      t761 = t760 * t143;
      t769 = t756 * t161;
      t774 = t36 * t161;
      t782 = t668 * t217;
      t793 = 2 * I__y * t204 * t681 + 8 * t124 * t680 * t81 + 16 * t175 * t36 * t616 + 60 * t175 * t616 * t756 + 12 * t241 * t592 * t760 + 36 * t141 * t689 + 24 * t592 * t761 + 8 * t592 * t782 + 96 * t608 * t769 + 48 * t608 * t774 + 120 * t616 * t769 + 32 * t616 * t774 + 60 * t649 * t761 + 44 * t649 * t782 + 60 * t693 * t728 + 12 * t693 * t733 + 12 * t696 * t728 + 12 * t696 * t733 + 60 * t708 * t747 + 12 * t711 * t747;
      out_10 = 0.1e1 / I__y * t26 * t492 * (t619 + t687 + t740 + t793) * t2 / 24;
      t809 = t420 * M__x;
      t810 = t2 * t809;
      t820 = K * t108;
      t821 = t191 * t809;
      t824 = K * t135;
      t827 = K * t137;
      t832 = -12 * t327 * t420 * t67 * t692 - 48 * t296 * t810 - 48 * t69 * t810 - 32 * t820 * t821 - 8 * t821 * t824 - 8 * t821 * t827 - 24 * t163 + 24 * t166 - 48 * t170 - 48 * t172 - 24 * t177 - 24 * t180 - 24 * t185 + 24 * t189 - 14 * t196 - 96 * t200 - 12 * t207;
      t857 = t680 * I__y * K;
      t860 = -12 * E * t114 * t420 * t68 * t692 - 8 * E * F__z * t7 * t857 - 24 * t211 - 24 * t213 - 64 * t219 - 8 * t222 - 64 * t229 - 8 * t233 - 10 * t237 - 10 * t239 - 4 * t253 - 4 * t255 - 4 * t262 - 4 * t264 - 24 * t267 + 24 * t270 - 24 * t272 - 24 * t274;
      t863 = G * F__z * t7;
      t889 = -12 * t135 * t478 * t692 * t76 - 48 * t100 * t464 * t99 - 2 * t681 * t863 - 2 * t857 * t863 - 10 * t243 - 8 * t259 - 8 * t279 - 48 * t282 - 48 * t285 - 24 * t288 - 24 * t291 - 64 * t294 - 52 * t299 - 96 * t303 - 24 * t306 - 12 * t309 - 24 * t315 - 12 * t319;
      t902 = -20 * t324 - 20 * t329 - t334 - t339 - t342 - 8 * t344 - 20 * t346 - 20 * t348 - 10 * t351 - 12 * t357 - 20 * t362 - 14 * t365 - 52 * t368 - t373 - t377 - t381 - 24 * t387 - 24 * t390;
      out_11 = -t492 * l * (t832 + t860 + t889 + t902) / 8;
      t920 = t420 * M__y;
      t921 = t3 * t920;
      t924 = G * t225;
      t930 = t68 * t67 * t191;
      t935 = t168 * t245;
      t944 = G * t67 * t2;
      t954 = t596 * t920;
      t957 = K * t337;
      t958 = t191 * t198;
      t961 = -24 * l * t633 * t411 - 24 * l * t637 * t411 - 24 * t2 * t198 * t426 - 24 * t2 * t247 * t426 - 48 * t921 * t296 - 8 * t218 * t924 - 16 * t221 * t924 - 8 * t228 * t930 - 16 * t232 * t930 - 10 * t218 * t935 - 10 * t221 * t935 + 24 * t162 * G * t182 - 96 * t188 * t944 - 12 * t2 * t7 * t205 * t616 - 12 * t35 * t578 * t620 - 8 * t954 * t820 - 4 * t958 * t957;
      t962 = t191 * t247;
      t965 = K * t340;
      t974 = l * t104;
      t986 = l * t269;
      t1000 = t159 * t2;
      t1006 = t596 * T * t8;
      t1009 = -4 * t962 * t957 - 4 * t958 * t965 - 4 * t962 * t965 - 8 * t954 * t824 - 8 * t954 * t827 - 24 * t974 * t400 - 48 * l * t100 * t408 - 48 * t974 * t408 - 2 * t596 * t110 * t19 * t679 - 24 * t986 * t160 - 24 * l * t266 * t169 - 24 * t986 * t169 - 48 * t921 * t69 + 24 * M__x * t205 * G * t182 + 24 * t184 * t1000 - 24 * t188 * t1000 - 4 * t1006 * t620;
      t1011 = t192 * t217;
      t1023 = t3 * T;
      t1024 = t1023 * t7 * t140;
      t1044 = t668 * t231;
      t1056 = -48 * t100 * t429 * t756 - 48 * t104 * t429 * t756 - 48 * t104 * t760 * t99 - 24 * t161 * t311 * t616 - 12 * t175 * t311 * t616 - 8 * t227 * t444 * t668 - 24 * t432 * t633 * t756 - 24 * t432 * t637 * t756 - t1006 * t595 - t1006 * t599 - 4 * t1011 * t592 - 12 * t1024 * t592 - 24 * t1024 * t649 - 28 * t1044 * t296 - 8 * t1044 * t444 - 8 * t293 * t924 - 16 * t343 * t924;
      t1068 = t35 * t420;
      t1078 = t192 * t19;
      t1092 = t1023 * t48;
      t1102 = -20 * t293 * t935 - 20 * t343 * t935 - 10 * t350 * t935 - 10 * t242 * t935 - 96 * t284 * t944 - 12 * t1068 * t7 * t68 * t81 - 4 * t1011 * t649 - 12 * t1023 * t7 * t174 * t675 - 4 * t1078 * t667 - 8 * t1078 * t672 - 4 * t192 * t378 * t675 - 2 * t1006 * t77 * t76 - 2 * t1006 * t82 * t204 - 24 * t1092 * t667 - 24 * t1092 * t672 - 12 * t1068 * t48 * t679 - 28 * t1044 * t367;
      out_12 = -(t961 + t1009 + t1056 + t1102) * t492 / 8;
      out_13 = t32 * t26 * t24 * (2 * t5 - t11 + t14 + t18 + t22) / 6;
      out_14 = -0.3e1 / 0.4e1 * t26 * t59 * t2 * (F__x * K * l + F__y * K * l + F__x * t15 + F__y * t15) * t7;

      % Store outputs
      out_d_f = zeros(14, 1);
      out_d_f(1) = out_1;
      out_d_f(2) = out_2;
      out_d_f(3) = out_3;
      out_d_f(4) = out_4;
      out_d_f(5) = out_5;
      out_d_f(6) = out_6;
      out_d_f(7) = out_7;
      out_d_f(8) = out_8;
      out_d_f(9) = out_9;
      out_d_f(10) = out_10;
      out_d_f(11) = out_11;
      out_d_f(12) = out_12;
      out_d_f(13) = out_13;
      out_d_f(14) = out_14;
    end % d_f
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_d_s = d_s( ~, ~, ~ )
      % Evaluate the deformation vector d_s.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_d_s = sparse(10, 1);
    end % d_s
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_f = f( this, ~, ~ )
      % Evaluate the force vector f.

      % Extract properties
      E = this.m_data.E;
      G = this.m_data.G;
      A = this.m_data.A;
      I__y = this.m_data.I__y;
      I__z = this.m_data.I__z;
      K = this.m_data.K;
      T = this.m_data.T;
      l = this.m_data.l;
      F__x = this.m_data.F__x;
      F__y = this.m_data.F__y;
      F__z = this.m_data.F__z;
      M__x = this.m_data.M__x;
      M__y = this.m_data.M__y;
      M__z = this.m_data.M__z;

      % Extract inputs
      % No inputs

      % Evaluate function
      t2 = l ^ 2;
      t3 = t2 ^ 2;
      t4 = t3 * K;
      t5 = t4 * A * F__x;
      t7 = t4 * A * F__y;
      t8 = sqrt(2);
      t9 = A * t8;
      t10 = M__z * K;
      t11 = t2 * l;
      t13 = t11 * t10 * t9;
      t17 = 3 * E * I__z * M__z * t9;
      t18 = I__z * t8;
      t21 = 3 * l * t10 * t18;
      t25 = A * E;
      t28 = I__z * K;
      t32 = 0.1e1 / (t11 * K * A + 3 * I__z * t25 + 3 * l * t28);
      t34 = 0.1e1 / l;
      out_1 = -t34 * t32 * (t5 + t7 + t13 + t17 + t21) / 2;
      out_2 = -t34 * t32 * (t5 + t7 - t13 - t17 - t21) / 2;
      t41 = E ^ 2;
      t42 = I__y ^ 2;
      t43 = t42 * t41;
      t44 = t8 * M__x;
      t47 = t8 * M__y;
      t50 = E * F__z;
      t51 = t42 * G;
      t55 = G * t50;
      t56 = I__z * I__y;
      t61 = t2 * T * I__y;
      t64 = E * G;
      t73 = I__y * t64;
      t74 = M__x * I__z;
      t75 = t8 * t74;
      t78 = M__y * I__z;
      t79 = t8 * t78;
      t82 = E * I__y;
      t84 = T * t8;
      t88 = F__z * G;
      t90 = T * I__z;
      t93 = 3 * t8 * M__x * t42 * t64 + 6 * l * t84 * M__y * t82 + 3 * t8 * M__y * t42 * t64 + 4 * l * t51 * t50 + 4 * l * t56 * t55 + t2 * t90 * t88 - 6 * t44 * t43 + 6 * t47 * t43 + 4 * t61 * t50 + t61 * t88 + 3 * t75 * t73 + 3 * t79 * t73;
      t98 = K * t42;
      t102 = t11 * t28;
      t105 = T * K;
      t106 = t3 * t105;
      t109 = G * I__y;
      t111 = G * I__z;
      t113 = G * t41;
      t114 = t42 * I__y;
      t115 = t114 * t113;
      t117 = I__z * t42;
      t118 = t117 * t113;
      t120 = T * l;
      t127 = l * t90;
      t130 = 6 * l * T * t42 * t64 + 6 * t11 * K * t43 + 4 * t11 * t98 * t64 + 4 * t102 * t73 + t106 * t109 + t106 * t111 + 4 * t106 * t82 + 6 * t120 * t43 + 6 * t127 * t73 + 6 * t115 + 6 * t118;
      out_3 = -0.1e1 / t130 * t2 * t93 * K / 2;
      t135 = t56 * t64;
      t136 = K * M__x;
      t137 = t3 * T;
      t138 = t137 * t136;
      t139 = t138 * t135;
      t141 = t3 * l;
      t142 = t141 * t8;
      t143 = G ^ 2;
      t144 = t143 * F__z;
      t148 = 2 * t105 * t56 * t144 * t142;
      t149 = t3 * t8;
      t150 = t50 * t149;
      t151 = t42 * t143;
      t154 = 8 * t28 * t151 * t150;
      t155 = I__y * t143;
      t156 = I__z ^ 2;
      t157 = K * t156;
      t160 = 4 * t157 * t155 * t150;
      t161 = E * t3;
      t163 = M__y * T;
      t164 = t163 * t28;
      t165 = t164 * t109 * t161;
      t167 = t2 * t8;
      t168 = F__z * t41;
      t171 = t90 * t51 * t168 * t167;
      t172 = 6 * t171;
      t173 = t50 * t167;
      t175 = t90 * t151 * t173;
      t176 = 12 * t175;
      t177 = T * t156;
      t179 = t177 * t155 * t173;
      t180 = 6 * t179;
      t183 = t28 * t51 * t168 * t149;
      t185 = t50 * t142;
      t187 = t105 * t51 * t185;
      t190 = T * t114;
      t192 = t190 * t144 * E * t167;
      t193 = 6 * t192;
      t195 = K * t114;
      t197 = t195 * t88 * t41 * t149;
      t200 = t42 * F__z;
      t202 = t105 * t200 * t41 * t142;
      t203 = 4 * t202;
      t207 = 4 * t195 * t144 * E * t149;
      t208 = F__z * t142;
      t210 = t105 * t151 * t208;
      t211 = -10 * t139 - t148 - t154 - t160 - 6 * t165 - t172 - t176 - t180 - 10 * t183 - 5 * t187 - t193 - 10 * t197 - t203 - t207 - t210;
      t212 = t156 * t143;
      t214 = t105 * t212 * t208;
      t216 = G * t41 * t11;
      t217 = M__y * K;
      t218 = t217 * t117;
      t219 = t218 * t216;
      t222 = t143 * E * t11;
      t223 = t136 * t117;
      t224 = t223 * t222;
      t226 = t218 * t222;
      t228 = t156 * I__y;
      t229 = t136 * t228;
      t230 = t229 * t222;
      t232 = t217 * t228;
      t233 = t232 * t222;
      t237 = t163 * t98 * G * t161;
      t239 = t143 * t3;
      t240 = I__y * t239;
      t241 = T * M__x;
      t243 = t241 * t28 * t240;
      t244 = 4 * t243;
      t245 = t164 * t240;
      t246 = 4 * t245;
      t248 = t143 * E * l;
      t250 = t241 * t117 * t248;
      t251 = 24 * t250;
      t252 = t163 * t117;
      t253 = t252 * t248;
      t254 = 24 * t253;
      t256 = t241 * t228 * t248;
      t257 = 12 * t256;
      t259 = t163 * t228 * t248;
      t260 = 12 * t259;
      t261 = t223 * t216;
      t263 = t42 * t64;
      t264 = t138 * t263;
      t266 = -t214 - 10 * t219 - 16 * t224 - 16 * t226 - 8 * t230 - 8 * t233 - 6 * t237 - t244 - t246 - t251 - t254 - t257 - t260 - 26 * t261 - 10 * t264;
      t268 = t42 * t113;
      t270 = t120 * t74 * t268;
      t273 = t41 * l * t8;
      t274 = I__z * t114;
      t276 = t274 * t144 * t273;
      t277 = 12 * t276;
      t278 = t156 * t42;
      t280 = t278 * t144 * t273;
      t281 = 6 * t280;
      t284 = t190 * t88 * t41 * t167;
      t285 = 6 * t284;
      t286 = t41 * E;
      t287 = G * t286;
      t288 = t42 ^ 2;
      t289 = M__x * t288;
      t290 = t289 * t287;
      t291 = 12 * t290;
      t292 = M__y * t288;
      t293 = t292 * t287;
      t294 = 12 * t293;
      t295 = t143 * t41;
      t296 = t289 * t295;
      t297 = 12 * t296;
      t298 = t292 * t295;
      t299 = 12 * t298;
      t302 = T * t28 * t109 * t185;
      t305 = T * M__x * t114;
      t306 = t305 * t248;
      t307 = 12 * t306;
      t309 = T * M__y * t114;
      t310 = t309 * t248;
      t311 = 12 * t310;
      t312 = M__x * t195;
      t313 = t312 * t216;
      t315 = M__y * t195;
      t316 = t315 * t216;
      t318 = t41 * t3;
      t319 = t42 * t318;
      t320 = T * t136;
      t321 = t320 * t319;
      t322 = 8 * t321;
      t323 = T * t217;
      t324 = t323 * t319;
      t325 = 4 * t324;
      t326 = -24 * t270 - t277 - t281 - t285 - t291 + t294 - t297 - t299 - 5 * t302 - t307 - t311 - 26 * t313 - 10 * t316 - t322 - t325;
      t327 = t312 * t222;
      t329 = t315 * t222;
      t331 = t42 * t239;
      t332 = t320 * t331;
      t333 = 2 * t332;
      t334 = t323 * t331;
      t335 = 2 * t334;
      t336 = t156 * t239;
      t337 = t320 * t336;
      t338 = 2 * t337;
      t339 = t323 * t336;
      t340 = 2 * t339;
      t342 = l * t241 * t115;
      t345 = t288 * t144 * t273;
      t346 = 6 * t345;
      t348 = M__x * t278 * t295;
      t349 = 12 * t348;
      t351 = M__y * t278 * t295;
      t352 = 12 * t351;
      t353 = t286 * l;
      t354 = t305 * t353;
      t355 = 12 * t354;
      t356 = t309 * t353;
      t357 = 12 * t356;
      t358 = M__x * t274;
      t359 = t358 * t287;
      t360 = 12 * t359;
      t361 = M__y * t274;
      t362 = t361 * t287;
      t363 = 12 * t362;
      t364 = t358 * t295;
      t365 = 24 * t364;
      t366 = t361 * t295;
      t367 = 24 * t366;
      t368 = -8 * t327 - 8 * t329 - t333 - t335 - t338 - t340 - 24 * t342 - t346 - t349 - t352 - t355 + t357 - t360 + t363 - t365 - t367;
      t371 = K * t288;
      t372 = t11 * t371;
      t375 = t114 * t287;
      t378 = t114 * t286;
      t383 = t114 * t295;
      t386 = t42 * t295;
      t392 = t137 * t28;
      t395 = T ^ 2;
      t396 = t395 * K;
      t397 = t141 * t396;
      t400 = t143 * E;
      t401 = t114 * t400;
      t404 = t42 * t400;
      t407 = I__y * t400;
      t413 = t141 * t395;
      t418 = 4 * t11 * t157 * t386 + 5 * t137 * t157 * t407 + 5 * t413 * t28 * t73 + 6 * t102 * t375 + 8 * t102 * t383 + 14 * t106 * t115 + 6 * t106 * t378 + 5 * t106 * t401 + t397 * t151 + 5 * t397 * t263 + 14 * t392 * t268 + 6 * t372 * t287 + 4 * t372 * t295 + 10 * t392 * t404 + 4 * t397 * t43;
      t419 = I__z * t155;
      t423 = t143 * t286;
      t424 = t288 * I__y;
      t427 = I__z * t288;
      t430 = t156 * t114;
      t433 = T * t288;
      t434 = l * t433;
      t439 = t2 * t395;
      t449 = t395 * t114;
      t450 = t2 * t449;
      t453 = t395 * I__z;
      t454 = t2 * t453;
      t465 = 6 * t2 * t395 * t156 * t407 + 12 * l * t177 * t386 + 12 * t450 * t113 + 12 * t127 * t375 + 24 * t127 * t383 + t397 * t212 + 12 * t454 * t268 + 12 * t434 * t287 + 12 * t434 * t295 + 6 * t439 * t378 + 2 * t397 * t419 + 6 * t450 * t400 + 12 * t454 * t404 + 6 * t424 * t423 + 12 * t427 * t423 + 6 * t430 * t423;
      t467 = 0.1e1 / (t418 + t465);
      out_4 = t467 * (t211 + t266 + t326 + t368) * t120 / 4;
      t474 = G * t41 * l;
      t480 = -24 * t252 * t474 - 6 * t139 + 2 * t165 - t172 - t176 - t180 - 2 * t183 + t187 - t193 - 2 * t197 + t203 - 2 * t219 - 4 * t224;
      t487 = -4 * t226 - 2 * t230 - 2 * t233 + 2 * t237 - t244 - t246 - t251 - t254 - t257 - t260 - 10 * t261 - 6 * t264 - t277 - t281;
      t494 = -24 * t309 * t474 - t285 + t291 - t294 - t297 - t299 + t302 - t307 - t311 - 10 * t313 - 2 * t316 + t322 + t325 - 2 * t327;
      t496 = -2 * t329 - t333 - t335 - t338 - t340 - t346 - t349 - t352 + t355 - t357 + t360 - t363 - t365 - t367;
      out_5 = t467 * l * (t480 + t487 + t494 + t496) * T / 4;
      out_13 = F__x;
      out_14 = F__y;
      out_15 = F__z;
      out_16 = M__x;
      out_17 = M__y;
      out_18 = M__z;
      t502 = t2 * A;
      t503 = 12 * I__z;
      t505 = 0.1e1 / t11;
      t506 = t505 * (t502 + t503);
      t507 = A ^ 2;
      t508 = E * t507;
      t510 = t11 * F__x * t508;
      t512 = t11 * F__y * t508;
      t514 = F__x * I__z;
      t517 = 3 * l * t514 * t25;
      t518 = F__y * I__z;
      t521 = 3 * l * t518 * t25;
      t522 = t2 * K;
      t524 = 3 * t522 * t514;
      t526 = 3 * t522 * t518;
      t528 = 0.1e1 / A;
      t530 = t32 * t528 * (t510 + t512 + 2 * t5 + t517 - t521 - t13 + t524 - t526 - t17 - t21);
      t534 = t505 * (t502 - t503);
      t538 = (t510 + t512 + 2 * t7 + t13 - t517 + t521 + t17 - t524 + t526 + t21) * t32 * t528;
      t550 = 0.9e1 / 0.2e1 * t32 * (F__x * K * l + F__y * K * l + F__x * t25 + F__y * t25) * I__z;
      out_19 = -t530 * t506 / 4 + t538 * t534 / 4 + t550;
      out_20 = t530 * t534 / 4 - t538 * t506 / 4 + t550;
      t555 = t274 * t295;
      t556 = t11 * t8;
      t557 = t556 * t217;
      t560 = t278 * t295;
      t561 = t556 * t136;
      t566 = t195 * t113;
      t567 = t137 * t44;
      t570 = t137 * t47;
      t573 = t195 * t400;
      t579 = t413 * t44;
      t582 = t274 * t287;
      t583 = t120 * t44;
      t586 = t120 * t47;
      t597 = t51 * t168;
      t598 = t141 * T;
      t599 = t598 * t28;
      t602 = t151 * t50;
      t605 = t155 * t50;
      t609 = t109 * t50;
      t610 = t3 * t2;
      t611 = t610 * t395;
      t612 = t611 * t28;
      t615 = t439 * t44;
      t618 = 8 * t598 * t157 * t605 + 6 * t579 * t98 * t64 + 36 * t615 * t118 + 24 * t557 * t555 + 72 * t583 * t555 + 72 * t586 * t555 + 12 * t557 * t560 + 12 * t561 * t560 + 36 * t583 * t560 + 36 * t586 * t560 + 42 * t567 * t566 + 6 * t570 * t566 + 3 * t567 * t573 + 3 * t570 * t573 + 72 * t583 * t582 + 72 * t586 * t582 + 44 * t597 * t599 + 16 * t599 * t602 + 8 * t612 * t609;
      t619 = t439 * t47;
      t628 = K * t378;
      t633 = t288 * t295;
      t638 = t143 * t168;
      t639 = t2 * T;
      t643 = G * t168;
      t644 = t11 * t395;
      t645 = t644 * t117;
      t648 = t143 * t50;
      t654 = F__z * t286;
      t655 = G * t654;
      t656 = t639 * t274;
      t661 = t4 * t274;
      t669 = t598 * t195;
      t677 = 12 * t644 * t228 * t648 + 16 * t4 * t278 * t638 + 60 * t639 * t278 * t638 + 8 * t611 * t98 * t55 + 36 * t619 * t118 + 24 * t561 * t555 + 12 * t557 * t582 + 12 * t557 * t633 + 60 * t561 * t582 + 12 * t561 * t633 + 60 * t567 * t628 + 12 * t570 * t628 + 120 * t656 * t638 + 32 * t661 * t638 + 60 * t645 * t643 + 44 * t669 * t643 + 24 * t645 * t648 + 8 * t669 * t648 + 96 * t656 * t655 + 48 * t661 * t655;
      t685 = t288 * t287;
      t702 = t114 * t423;
      t703 = M__x * t156;
      t707 = M__y * t156;
      t712 = t395 * t8;
      t713 = t2 * t712;
      t716 = t2 * t433;
      t721 = t11 * t449;
      t726 = t42 * t144;
      t727 = t610 * t396;
      t729 = t156 * t144;
      t731 = 2 * t612 * I__y * t144 + 24 * t579 * K * t43 + 36 * t713 * M__x * t378 + 36 * t8 * t703 * t702 + 36 * t8 * t707 * t702 + 36 * t615 * t115 + 36 * t619 * t115 + 12 * t557 * t685 + 60 * t561 * t685 + 36 * t583 * t633 + 72 * t583 * t685 + 36 * t586 * t633 + 72 * t586 * t685 + 60 * t716 * t638 + 60 * t721 * t643 + 12 * t721 * t648 + 96 * t716 * t655 + t727 * t726 + t727 * t729;
      t732 = t143 * t654;
      t739 = t3 * t371;
      t748 = t42 * t168;
      t754 = t288 * t423;
      t759 = t117 * t400;
      t760 = t3 * t84;
      t761 = t760 * t217;
      t764 = t228 * t400;
      t765 = t760 * t136;
      t794 = 96 * l * t427 * t732 + 48 * l * t430 * t732 + 48 * t739 * t655 + 48 * t141 * t105 * t114 * t654 + 16 * t739 * t638 + 16 * t727 * t748 + 36 * t713 * M__y * t378 + 72 * t75 * t754 + 72 * t79 * t754 + 6 * t761 * t759 + 3 * t765 * t764 + 3 * t761 * t764 + 6 * t141 * t712 * t136 * t135 + 42 * t765 * t118 + 6 * t761 * t118 + 6 * t765 * t759 + 48 * l * t424 * t143 * t654 + 48 * t721 * t654 + 36 * t8 * M__x * t424 * t423 + 36 * t8 * M__y * t424 * t423;
      t796 = t618 + t677 + t731 + t794;
      t800 = E * t8;
      t801 = I__y * t800;
      t816 = -12 * t453 * t109 * t50 * t556 - 52 * t139 - t148 - t154 - t160 - 24 * t171 - 24 * t175 - 12 * t179 - 20 * t183 - 14 * t187 - 12 * t192 - 20 * t197 - 20 * t202 - t207 - t210 - t214 - 8 * t219;
      t835 = -20 * t224 - 20 * t226 - 10 * t230 - 10 * t233 - 8 * t243 - 8 * t245 - 48 * t250 - 48 * t253 - 24 * t256 - 24 * t259 - 64 * t261 - 52 * t264 - 96 * t270 - 24 * t276 - 12 * t280 - 24 * t284 - 24 * t290 + 24 * t293;
      t846 = t611 * I__y * K;
      t850 = G * F__z * t8;
      t862 = t395 * M__x;
      t863 = t2 * t862;
      t866 = K * t82;
      t867 = t141 * t862;
      t870 = K * t109;
      t873 = K * t111;
      t882 = -12 * t395 * t42 * t88 * E * t556 - 12 * t395 * t200 * t41 * t556 - 8 * t846 * F__z * t800 - 48 * t439 * t74 * t73 - 48 * t863 * t263 - 2 * t612 * t850 - 2 * t846 * t850 - 32 * t867 * t866 - 8 * t867 * t870 - 8 * t867 * t873 - 24 * t296 - 24 * t298 - 14 * t302 - 24 * t306 - 24 * t310 - 64 * t313 - 8 * t316 - 64 * t321;
      t902 = -48 * t863 * t43 - 8 * t324 - 10 * t327 - 10 * t329 - 4 * t332 - 4 * t334 - 4 * t337 - 4 * t339 - 96 * t342 - 12 * t345 - 24 * t348 - 24 * t351 - 24 * t354 + 24 * t356 - 24 * t359 + 24 * t362 - 48 * t364 - 48 * t366;
      t904 = t816 + t835 + t882 + t902;
      t912 = t11 * T;
      t916 = t142 * t28;
      t927 = t610 * T * t8 * K;
      t933 = t912 * t18;
      t938 = t3 * t395;
      t942 = t598 * t217;
      t958 = G * t318;
      t963 = -12 * t912 * t8 * t156 * t605 - 4 * t916 * t597 - 8 * t916 * t602 - 4 * t142 * t157 * t605 - 2 * t927 * t51 * t50 - 2 * t927 * t56 * t144 - 24 * t933 * t597 - 24 * t933 * t602 - 12 * t938 * t18 * t609 - 28 * t942 * t135 - 24 * t639 * t707 * t407 - 48 * t644 * t78 * t73 - 28 * t942 * t263 - 8 * t598 * t136 * t419 - 8 * t942 * t419 - 8 * t223 * t958 - 16 * t218 * t958;
      t964 = t143 * t161;
      t974 = G * t41 * t2;
      t981 = t142 * t195;
      t997 = t912 * t8 * t114;
      t1008 = -12 * t938 * t8 * t42 * t55 - 24 * t167 * t274 * t638 - 12 * t167 * t278 * t638 - 48 * t639 * t74 * t404 - 48 * t639 * t78 * t404 - 20 * t218 * t964 - 20 * t223 * t964 - 10 * t229 * t964 - 10 * t232 * t964 - 96 * t252 * t974 - 4 * t981 * t643 - 24 * t997 * t643 - 4 * t981 * t648 - 12 * t997 * t648 - t927 * t726 - t927 * t729 - 4 * t927 * t748;
      t1012 = t395 * M__y;
      t1013 = t610 * t1012;
      t1016 = K * t151;
      t1017 = t141 * t241;
      t1020 = t141 * t163;
      t1023 = K * t212;
      t1032 = l * t78;
      t1055 = t11 * t1012;
      t1058 = -48 * l * t74 * t383 - 24 * l * t703 * t386 - 24 * l * t707 * t386 - 24 * t2 * t163 * t401 - 24 * t2 * t241 * t401 - 24 * t639 * t703 * t407 - 8 * t1013 * t866 - 8 * t1013 * t870 - 8 * t1013 * t873 - 4 * t1017 * t1016 - 4 * t1020 * t1016 - 4 * t1017 * t1023 - 4 * t1020 * t1023 - 24 * t1032 * t375 - 48 * t1032 * t383 - 48 * t1055 * t263 - 8 * t312 * t958;
      t1062 = t42 * t41 * t141;
      t1087 = l * t292;
      t1101 = t286 * t2;
      t1106 = -16 * t315 * t958 - 8 * t320 * t1062 - 16 * t323 * t1062 - 10 * t312 * t964 - 10 * t315 * t964 + 24 * t358 * G * t353 - 96 * t309 * t974 - 12 * t2 * t8 * t288 * t638 - 12 * t3 * t712 * t748 - 2 * t610 * t84 * t28 * t609 - 24 * t1087 * t287 - 24 * l * t289 * t295 - 24 * t1087 * t295 - 48 * t1055 * t43 + 24 * M__x * t288 * G * t353 + 24 * t305 * t1101 - 24 * t309 * t1101;
      t1108 = t963 + t1008 + t1058 + t1106;
      out_21 = -t467 * t796 * t34 / 2 - 0.3e1 / 0.8e1 * t467 * t904 * t34 * t801 - 0.3e1 / 0.8e1 * t1108 * t467 / t2 * t801;
      t1114 = t467 * t796 * t8 / 8;
      t1115 = 2 * E;
      t1118 = I__y * (t1115 - G) - t111;
      t1124 = I__y * (t1115 + G) + t111;
      t1126 = t1108 * t467;
      out_22 = -t1114 - t467 * t904 * t1118 / 16 - t1126 * t34 * t1124 / 16;
      out_23 = -t1114 - t467 * t904 * t1124 / 16 - t1126 * t34 * t1118 / 16;

      % Store outputs
      out_f = zeros(24, 1);
      out_f(1) = out_1;
      out_f(2) = out_2;
      out_f(3) = out_3;
      out_f(4) = out_4;
      out_f(5) = out_5;
      out_f(13) = out_13;
      out_f(14) = out_14;
      out_f(15) = out_15;
      out_f(16) = out_16;
      out_f(17) = out_17;
      out_f(18) = out_18;
      out_f(19) = out_19;
      out_f(20) = out_20;
      out_f(21) = out_21;
      out_f(22) = out_22;
      out_f(23) = out_23;
    end % f
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_f_f = f_f( this, ~, ~ )
      % Evaluate the force vector f_f.

      % Extract properties
      F__x = this.m_data.F__x;
      F__y = this.m_data.F__y;
      F__z = this.m_data.F__z;
      M__x = this.m_data.M__x;
      M__y = this.m_data.M__y;
      M__z = this.m_data.M__z;

      % Extract inputs
      % No inputs

      % Evaluate function
      out_8 = F__x;
      out_9 = F__y;
      out_10 = F__z;
      out_11 = M__x;
      out_12 = M__y;
      out_13 = M__z;

      % Store outputs
      out_f_f = sparse(14, 1);
      out_f_f(8) = out_8;
      out_f_f(9) = out_9;
      out_f_f(10) = out_10;
      out_f_f(11) = out_11;
      out_f_f(12) = out_12;
      out_f_f(13) = out_13;
    end % f_f
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_f_s = f_s( this, ~, ~ )
      % Evaluate the force vector f_s.

      % Extract properties
      E = this.m_data.E;
      G = this.m_data.G;
      A = this.m_data.A;
      I__y = this.m_data.I__y;
      I__z = this.m_data.I__z;
      K = this.m_data.K;
      T = this.m_data.T;
      l = this.m_data.l;
      F__x = this.m_data.F__x;
      F__y = this.m_data.F__y;
      F__z = this.m_data.F__z;
      M__x = this.m_data.M__x;
      M__y = this.m_data.M__y;
      M__z = this.m_data.M__z;

      % Extract inputs
      % No inputs

      % Evaluate function
      t2 = l ^ 2;
      t3 = t2 ^ 2;
      t4 = t3 * K;
      t5 = t4 * A * F__x;
      t7 = t4 * A * F__y;
      t8 = sqrt(2);
      t9 = A * t8;
      t10 = M__z * K;
      t11 = t2 * l;
      t13 = t11 * t10 * t9;
      t17 = 3 * E * I__z * M__z * t9;
      t18 = I__z * t8;
      t21 = 3 * l * t10 * t18;
      t25 = A * E;
      t28 = I__z * K;
      t32 = 0.1e1 / (t11 * K * A + 3 * I__z * t25 + 3 * l * t28);
      t34 = 0.1e1 / l;
      out_1 = -t34 * t32 * (t5 + t7 + t13 + t17 + t21) / 2;
      out_2 = -t34 * t32 * (t5 + t7 - t13 - t17 - t21) / 2;
      t41 = E ^ 2;
      t42 = I__y ^ 2;
      t43 = t42 * t41;
      t44 = t8 * M__x;
      t47 = t8 * M__y;
      t50 = E * F__z;
      t51 = t42 * G;
      t55 = G * t50;
      t56 = I__z * I__y;
      t61 = t2 * T * I__y;
      t64 = E * G;
      t73 = I__y * t64;
      t74 = M__x * I__z;
      t75 = t8 * t74;
      t78 = M__y * I__z;
      t79 = t8 * t78;
      t82 = E * I__y;
      t84 = T * t8;
      t88 = F__z * G;
      t90 = T * I__z;
      t93 = 3 * t8 * M__x * t42 * t64 + 6 * l * t84 * M__y * t82 + 3 * t8 * M__y * t42 * t64 + 4 * l * t51 * t50 + 4 * l * t56 * t55 + t2 * t90 * t88 - 6 * t44 * t43 + 6 * t47 * t43 + 4 * t61 * t50 + t61 * t88 + 3 * t75 * t73 + 3 * t79 * t73;
      t98 = K * t42;
      t102 = t11 * t28;
      t105 = T * K;
      t106 = t3 * t105;
      t109 = G * I__y;
      t111 = G * I__z;
      t113 = G * t41;
      t114 = t42 * I__y;
      t115 = t114 * t113;
      t117 = I__z * t42;
      t118 = t117 * t113;
      t120 = T * l;
      t127 = l * t90;
      t130 = 6 * l * T * t42 * t64 + 6 * t11 * K * t43 + 4 * t11 * t98 * t64 + 4 * t102 * t73 + t106 * t109 + t106 * t111 + 4 * t106 * t82 + 6 * t120 * t43 + 6 * t127 * t73 + 6 * t115 + 6 * t118;
      out_3 = -0.1e1 / t130 * t2 * t93 * K / 2;
      t135 = t3 * l;
      t136 = t135 * t8;
      t137 = t50 * t136;
      t140 = T * t28 * t109 * t137;
      t142 = t41 * E;
      t143 = G * t142;
      t144 = t42 ^ 2;
      t145 = M__x * t144;
      t146 = t145 * t143;
      t147 = 12 * t146;
      t148 = M__y * t144;
      t149 = t148 * t143;
      t150 = 12 * t149;
      t151 = G ^ 2;
      t152 = t151 * t41;
      t153 = t145 * t152;
      t154 = 12 * t153;
      t155 = t148 * t152;
      t156 = 12 * t155;
      t158 = t151 * E * l;
      t160 = T * M__x * t114;
      t161 = t160 * t158;
      t162 = 12 * t161;
      t164 = T * M__y * t114;
      t165 = t164 * t158;
      t166 = 12 * t165;
      t168 = G * t41 * t11;
      t169 = K * t114;
      t170 = M__x * t169;
      t171 = t170 * t168;
      t173 = M__y * t169;
      t174 = t173 * t168;
      t176 = t41 * t3;
      t177 = t42 * t176;
      t178 = K * M__x;
      t179 = T * t178;
      t180 = t179 * t177;
      t181 = 8 * t180;
      t182 = t3 * t8;
      t183 = t50 * t182;
      t184 = t42 * t151;
      t187 = 8 * t28 * t184 * t183;
      t188 = I__y * t151;
      t189 = I__z ^ 2;
      t190 = K * t189;
      t193 = 4 * t190 * t188 * t183;
      t194 = E * t3;
      t196 = M__y * T;
      t197 = t196 * t28;
      t198 = t197 * t109 * t194;
      t200 = t2 * t8;
      t201 = F__z * t41;
      t204 = t90 * t51 * t201 * t200;
      t205 = 6 * t204;
      t206 = t50 * t200;
      t208 = t90 * t184 * t206;
      t209 = 12 * t208;
      t210 = -5 * t140 - t147 + t150 - t154 - t156 - t162 - t166 - 26 * t171 - 10 * t174 - t181 - t187 - t193 - 6 * t198 - t205 - t209;
      t211 = T * t189;
      t213 = t211 * t188 * t206;
      t214 = 6 * t213;
      t217 = t28 * t51 * t201 * t182;
      t220 = t105 * t51 * t137;
      t222 = t56 * t64;
      t223 = t3 * T;
      t224 = t223 * t178;
      t225 = t224 * t222;
      t227 = t151 * F__z;
      t231 = 2 * t105 * t56 * t227 * t136;
      t233 = T * t114;
      t235 = t233 * t227 * E * t200;
      t236 = 6 * t235;
      t239 = t169 * t88 * t41 * t182;
      t242 = t42 * F__z;
      t244 = t105 * t242 * t41 * t136;
      t245 = 4 * t244;
      t249 = 4 * t169 * t227 * E * t182;
      t250 = F__z * t136;
      t252 = t105 * t184 * t250;
      t253 = t189 * t151;
      t255 = t105 * t253 * t250;
      t256 = M__y * K;
      t257 = t256 * t117;
      t258 = t257 * t168;
      t261 = t151 * E * t11;
      t262 = t178 * t117;
      t263 = t262 * t261;
      t265 = t257 * t261;
      t267 = t189 * I__y;
      t268 = t178 * t267;
      t269 = t268 * t261;
      t271 = -t214 - 10 * t217 - 5 * t220 - 10 * t225 - t231 - t236 - 10 * t239 - t245 - t249 - t252 - t255 - 10 * t258 - 16 * t263 - 16 * t265 - 8 * t269;
      t273 = t256 * t267;
      t274 = t273 * t261;
      t278 = t196 * t98 * G * t194;
      t280 = t151 * t3;
      t281 = I__y * t280;
      t282 = T * M__x;
      t284 = t282 * t28 * t281;
      t285 = 4 * t284;
      t286 = t197 * t281;
      t287 = 4 * t286;
      t289 = t282 * t117 * t158;
      t290 = 24 * t289;
      t291 = t196 * t117;
      t292 = t291 * t158;
      t293 = 24 * t292;
      t295 = t282 * t267 * t158;
      t296 = 12 * t295;
      t298 = t196 * t267 * t158;
      t299 = 12 * t298;
      t300 = t262 * t168;
      t302 = t42 * t64;
      t303 = t224 * t302;
      t305 = t42 * t113;
      t307 = t120 * t74 * t305;
      t310 = t41 * l * t8;
      t311 = I__z * t114;
      t313 = t311 * t227 * t310;
      t314 = 12 * t313;
      t315 = t189 * t42;
      t317 = t315 * t227 * t310;
      t318 = 6 * t317;
      t321 = t233 * t88 * t41 * t200;
      t322 = 6 * t321;
      t323 = T * t256;
      t324 = t323 * t177;
      t325 = 4 * t324;
      t326 = -8 * t274 - 6 * t278 - t285 - t287 - t290 - t293 - t296 - t299 - 26 * t300 - 10 * t303 - 24 * t307 - t314 - t318 - t322 - t325;
      t327 = t170 * t261;
      t329 = t173 * t261;
      t331 = t42 * t280;
      t332 = t179 * t331;
      t333 = 2 * t332;
      t334 = t323 * t331;
      t335 = 2 * t334;
      t336 = t189 * t280;
      t337 = t179 * t336;
      t338 = 2 * t337;
      t339 = t323 * t336;
      t340 = 2 * t339;
      t342 = l * t282 * t115;
      t345 = t144 * t227 * t310;
      t346 = 6 * t345;
      t347 = M__x * t311;
      t348 = t347 * t143;
      t349 = 12 * t348;
      t350 = M__y * t311;
      t351 = t350 * t143;
      t352 = 12 * t351;
      t353 = t347 * t152;
      t354 = 24 * t353;
      t355 = t350 * t152;
      t356 = 24 * t355;
      t358 = M__x * t315 * t152;
      t359 = 12 * t358;
      t361 = M__y * t315 * t152;
      t362 = 12 * t361;
      t363 = t142 * l;
      t364 = t160 * t363;
      t365 = 12 * t364;
      t366 = t164 * t363;
      t367 = 12 * t366;
      t368 = -8 * t327 - 8 * t329 - t333 - t335 - t338 - t340 - 24 * t342 - t346 - t349 + t352 - t354 - t356 - t359 - t362 - t365 + t367;
      t371 = K * t144;
      t372 = t11 * t371;
      t375 = t114 * t143;
      t378 = t114 * t142;
      t383 = t114 * t152;
      t386 = t42 * t152;
      t392 = t223 * t28;
      t395 = T ^ 2;
      t396 = t395 * K;
      t397 = t135 * t396;
      t400 = t151 * E;
      t401 = t114 * t400;
      t404 = t42 * t400;
      t407 = I__y * t400;
      t413 = t135 * t395;
      t418 = 4 * t11 * t190 * t386 + 5 * t190 * t223 * t407 + 5 * t28 * t413 * t73 + 6 * t102 * t375 + 8 * t102 * t383 + 14 * t106 * t115 + 6 * t106 * t378 + 5 * t106 * t401 + 6 * t143 * t372 + 4 * t152 * t372 + t184 * t397 + 5 * t302 * t397 + 14 * t305 * t392 + 10 * t392 * t404 + 4 * t397 * t43;
      t419 = I__z * t188;
      t423 = t151 * t142;
      t424 = t144 * I__y;
      t427 = I__z * t144;
      t430 = t189 * t114;
      t433 = T * t144;
      t434 = l * t433;
      t439 = t2 * t395;
      t449 = t395 * t114;
      t450 = t2 * t449;
      t453 = t395 * I__z;
      t454 = t2 * t453;
      t465 = 6 * t189 * t2 * t395 * t407 + 12 * l * t211 * t386 + 12 * t113 * t450 + 12 * t127 * t375 + 24 * t127 * t383 + 12 * t143 * t434 + 12 * t152 * t434 + t253 * t397 + 12 * t305 * t454 + 6 * t378 * t439 + 2 * t397 * t419 + 6 * t400 * t450 + 12 * t404 * t454 + 6 * t423 * t424 + 12 * t423 * t427 + 6 * t423 * t430;
      t467 = 0.1e1 / (t418 + t465);
      out_4 = t467 * (t210 + t271 + t326 + t368) * t120 / 4;
      t473 = t140 + t147 - t150 - t154 - t156 - t162 - t166 - 10 * t171 - 2 * t174 + t181 + 2 * t198 - t205 - t209;
      t483 = -t214 - 2 * t217 + t220 - 6 * t225 - t236 - 2 * t239 + t245 - 2 * t258 - 4 * t263 - 4 * t265 - 2 * t269 - 2 * t274 + 2 * t278 - t285;
      t488 = G * t41 * l;
      t494 = -24 * t164 * t488 - 24 * t291 * t488 - t287 - t290 - t293 - t296 - t299 - 10 * t300 - 6 * t303 - t314 - t318 - t322 + t325 - 2 * t327;
      t496 = -2 * t329 - t333 - t335 - t338 - t340 - t346 + t349 - t352 - t354 - t356 - t359 - t362 + t365 - t367;
      out_5 = t467 * l * (t473 + t483 + t494 + t496) * T / 4;
      t502 = t2 * A;
      t503 = 12 * I__z;
      t505 = 0.1e1 / t11;
      t506 = t505 * (t502 + t503);
      t507 = A ^ 2;
      t508 = E * t507;
      t510 = t11 * F__x * t508;
      t512 = t11 * F__y * t508;
      t514 = F__x * I__z;
      t517 = 3 * l * t514 * t25;
      t518 = F__y * I__z;
      t521 = 3 * l * t518 * t25;
      t522 = t2 * K;
      t524 = 3 * t522 * t514;
      t526 = 3 * t522 * t518;
      t528 = 0.1e1 / A;
      t530 = t32 * t528 * (t510 + t512 + 2 * t5 + t517 - t521 - t13 + t524 - t526 - t17 - t21);
      t534 = t505 * (t502 - t503);
      t538 = (t510 + t512 + 2 * t7 + t13 - t517 + t521 + t17 - t524 + t526 + t21) * t32 * t528;
      t550 = 0.9e1 / 0.2e1 * t32 * (F__x * K * l + F__y * K * l + F__x * t25 + F__y * t25) * I__z;
      out_6 = -t530 * t506 / 4 + t538 * t534 / 4 + t550;
      out_7 = t530 * t534 / 4 - t538 * t506 / 4 + t550;
      t555 = t267 * t400;
      t556 = t3 * t84;
      t557 = t556 * t178;
      t560 = t556 * t256;
      t563 = t395 * t8;
      t572 = t117 * t400;
      t577 = t151 * t201;
      t578 = t3 * t371;
      t581 = t42 * t201;
      t582 = t3 * t2;
      t583 = t582 * t396;
      t587 = t2 * t563;
      t590 = t144 * t423;
      t595 = t114 * t423;
      t596 = M__x * t189;
      t600 = M__y * t189;
      t607 = F__z * t142;
      t608 = G * t607;
      t609 = t2 * t433;
      t614 = G * t201;
      t615 = t11 * t449;
      t618 = t151 * t50;
      t621 = 6 * t135 * t178 * t222 * t563 + 36 * M__x * t378 * t587 + 36 * M__y * t378 * t587 + 36 * t595 * t596 * t8 + 36 * t595 * t600 * t8 + 42 * t118 * t557 + 6 * t118 * t560 + 3 * t555 * t557 + 3 * t555 * t560 + 6 * t557 * t572 + 6 * t560 * t572 + 16 * t577 * t578 + 60 * t577 * t609 + 16 * t581 * t583 + 72 * t590 * t75 + 72 * t590 * t79 + 96 * t608 * t609 + 60 * t614 * t615 + 12 * t615 * t618;
      t622 = t42 * t227;
      t624 = t189 * t227;
      t626 = t151 * t607;
      t635 = t311 * t152;
      t636 = t11 * t8;
      t637 = t636 * t256;
      t640 = t315 * t152;
      t641 = t636 * t178;
      t646 = t169 * t113;
      t647 = t223 * t44;
      t650 = t223 * t47;
      t653 = t169 * t400;
      t659 = t413 * t44;
      t662 = t311 * t143;
      t663 = t120 * t44;
      t666 = t120 * t47;
      t677 = t51 * t201;
      t678 = t135 * T;
      t679 = t678 * t28;
      t682 = 96 * l * t427 * t626 + 48 * l * t430 * t626 + 6 * t64 * t659 * t98 + 48 * t578 * t608 + t583 * t622 + t583 * t624 + 24 * t635 * t637 + 72 * t635 * t663 + 72 * t635 * t666 + 12 * t637 * t640 + 12 * t640 * t641 + 36 * t640 * t663 + 36 * t640 * t666 + 42 * t646 * t647 + 6 * t646 * t650 + 3 * t647 * t653 + 3 * t650 * t653 + 72 * t662 * t663 + 72 * t662 * t666 + 44 * t677 * t679;
      t684 = t184 * t50;
      t687 = t188 * t50;
      t691 = t109 * t50;
      t692 = t582 * t395;
      t693 = t692 * t28;
      t696 = t439 * t44;
      t699 = t439 * t47;
      t712 = K * t378;
      t731 = t144 * t152;
      t736 = t2 * T;
      t740 = t11 * t395;
      t741 = t740 * t117;
      t744 = 16 * t679 * t684 + 8 * t678 * t190 * t687 + 8 * t693 * t691 + 36 * t696 * t118 + 36 * t699 * t118 + 48 * t135 * t105 * t114 * t607 + 60 * t641 * t662 + 12 * t637 * t662 + 24 * t641 * t635 + 60 * t647 * t712 + 12 * t650 * t712 + 48 * l * t424 * t151 * t607 + 48 * t615 * t607 + 36 * t8 * M__x * t424 * t423 + 36 * t8 * M__y * t424 * t423 + 12 * t641 * t731 + 12 * t637 * t731 + 60 * t736 * t315 * t577 + 60 * t741 * t614;
      t750 = t736 * t311;
      t755 = t4 * t311;
      t763 = t678 * t169;
      t777 = t144 * t143;
      t794 = 2 * I__y * t227 * t693 + 24 * K * t43 * t659 + 12 * t267 * t618 * t740 + 16 * t315 * t4 * t577 + 8 * t55 * t692 * t98 + 36 * t115 * t696 + 36 * t115 * t699 + 120 * t577 * t750 + 32 * t577 * t755 + 96 * t608 * t750 + 48 * t608 * t755 + 44 * t614 * t763 + 24 * t618 * t741 + 8 * t618 * t763 + 12 * t637 * t777 + 60 * t641 * t777 + 36 * t663 * t731 + 72 * t663 * t777 + 36 * t666 * t731 + 72 * t666 * t777;
      t796 = t621 + t682 + t744 + t794;
      t800 = E * t8;
      t801 = I__y * t800;
      t802 = K * t111;
      t803 = t395 * M__x;
      t804 = t135 * t803;
      t821 = -8 * t802 * t804 - 14 * t140 - 24 * t146 + 24 * t149 - 24 * t153 - 24 * t155 - 24 * t161 - 24 * t165 - 64 * t171 - 8 * t174 - 64 * t180 - t187 - t193 - 24 * t204 - 24 * t208 - 12 * t213 - 20 * t217;
      t828 = t2 * t803;
      t831 = K * t82;
      t834 = K * t109;
      t845 = -12 * t242 * t395 * t41 * t636 - 48 * t302 * t828 - 32 * t804 * t831 - 8 * t804 * t834 - 14 * t220 - 52 * t225 - t231 - 12 * t235 - 20 * t239 - 20 * t244 - t249 - t252 - t255 - 8 * t258 - 20 * t263 - 20 * t265 - 10 * t269 - 10 * t274;
      t865 = -8 * t284 - 8 * t286 - 48 * t289 - 48 * t292 - 24 * t295 - 24 * t298 - 64 * t300 - 52 * t303 - 96 * t307 - 24 * t313 - 12 * t317 - 24 * t321 - 8 * t324 - 10 * t327 - 10 * t329 - 4 * t332 - 4 * t334 - 4 * t337;
      t890 = t692 * I__y * K;
      t894 = G * F__z * t8;
      t902 = -12 * E * t395 * t42 * t636 * t88 - 12 * t109 * t453 * t50 * t636 - 8 * F__z * t800 * t890 - 48 * t439 * t73 * t74 - 48 * t43 * t828 - 2 * t693 * t894 - 2 * t890 * t894 - 4 * t339 - 96 * t342 - 12 * t345 - 24 * t348 + 24 * t351 - 48 * t353 - 48 * t355 - 24 * t358 - 24 * t361 - 24 * t364 + 24 * t366;
      t904 = t821 + t845 + t865 + t902;
      t915 = G * t176;
      t921 = t42 * t41 * t135;
      t926 = t151 * t194;
      t935 = G * t41 * t2;
      t945 = t395 * M__y;
      t946 = t582 * t945;
      t949 = K * t184;
      t950 = t135 * t282;
      t953 = t135 * t196;
      t956 = K * t253;
      t963 = -12 * t144 * t2 * t577 * t8 - 2 * t28 * t582 * t691 * t84 + 24 * G * t347 * t363 - 12 * t3 * t563 * t581 - 96 * t164 * t935 - 8 * t170 * t915 - 10 * t170 * t926 - 16 * t173 * t915 - 10 * t173 * t926 - 8 * t179 * t921 - 16 * t323 * t921 - 8 * t831 * t946 - 8 * t834 * t946 - 4 * t949 * t950 - 4 * t949 * t953 - 4 * t950 * t956 - 4 * t953 * t956;
      t966 = l * t78;
      t986 = t11 * t945;
      t990 = t11 * T;
      t994 = t136 * t28;
      t1005 = t582 * T * t8 * K;
      t1011 = t990 * t18;
      t1016 = -8 * t946 * t802 - 24 * t966 * t375 - 48 * l * t74 * t383 - 48 * t966 * t383 - 24 * l * t596 * t386 - 24 * l * t600 * t386 - 24 * t2 * t282 * t401 - 24 * t2 * t196 * t401 - 48 * t986 * t302 - 12 * t990 * t8 * t189 * t687 - 4 * t994 * t677 - 8 * t994 * t684 - 4 * t136 * t190 * t687 - 2 * t1005 * t51 * t50 - 2 * t1005 * t56 * t227 - 24 * t1011 * t677 - 24 * t1011 * t684;
      t1018 = t3 * t395;
      t1022 = t678 * t256;
      t1056 = t136 * t169;
      t1061 = -12 * t1018 * t42 * t55 * t8 - 12 * t1018 * t18 * t691 - 8 * t178 * t419 * t678 - 24 * t407 * t600 * t736 - 48 * t73 * t740 * t78 - 4 * t1005 * t581 - 28 * t1022 * t222 - 28 * t1022 * t302 - 8 * t1022 * t419 - 4 * t1056 * t614 - 16 * t257 * t915 - 20 * t257 * t926 - 8 * t262 * t915 - 20 * t262 * t926 - 10 * t268 * t926 - 10 * t273 * t926 - 96 * t291 * t935;
      t1073 = t990 * t8 * t114;
      t1087 = l * t148;
      t1101 = t142 * t2;
      t1106 = -4 * t1056 * t618 - t1005 * t622 - t1005 * t624 - 24 * t200 * t311 * t577 - 12 * t200 * t315 * t577 - 24 * t1073 * t614 - 12 * t1073 * t618 - 48 * t736 * t74 * t404 - 48 * t736 * t78 * t404 - 24 * t736 * t596 * t407 - 24 * t1087 * t143 - 24 * l * t145 * t152 - 24 * t1087 * t152 - 48 * t986 * t43 + 24 * M__x * t144 * G * t363 + 24 * t160 * t1101 - 24 * t164 * t1101;
      t1108 = t963 + t1016 + t1061 + t1106;
      out_8 = -t467 * t796 * t34 / 2 - 0.3e1 / 0.8e1 * t467 * t904 * t34 * t801 - 0.3e1 / 0.8e1 * t1108 * t467 / t2 * t801;
      t1114 = t467 * t796 * t8 / 8;
      t1115 = 2 * E;
      t1118 = I__y * (t1115 - G) - t111;
      t1124 = I__y * (t1115 + G) + t111;
      t1126 = t1108 * t467;
      out_9 = -t1114 - t467 * t904 * t1118 / 16 - t1126 * t34 * t1124 / 16;
      out_10 = -t1114 - t467 * t904 * t1124 / 16 - t1126 * t34 * t1118 / 16;

      % Store outputs
      out_f_s = zeros(10, 1);
      out_f_s(1) = out_1;
      out_f_s(2) = out_2;
      out_f_s(3) = out_3;
      out_f_s(4) = out_4;
      out_f_s(5) = out_5;
      out_f_s(6) = out_6;
      out_f_s(7) = out_7;
      out_f_s(8) = out_8;
      out_f_s(9) = out_9;
      out_f_s(10) = out_10;
    end % f_s
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_f_r = f_r( ~, ~, ~ )
      % Evaluate the force vector f_r.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_f_r = sparse(10, 1);
    end % f_r
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_perm = perm( ~ )
      % Evaluate the permutation vector.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_perm = zeros(24, 1);
      out_perm(1) = 6;
      out_perm(2) = 7;
      out_perm(3) = 8;
      out_perm(4) = 9;
      out_perm(5) = 10;
      out_perm(6) = 11;
      out_perm(7) = 12;
      out_perm(8) = 13;
      out_perm(9) = 14;
      out_perm(10) = 15;
      out_perm(11) = 16;
      out_perm(12) = 17;
      out_perm(13) = 18;
      out_perm(14) = 24;
      out_perm(15) = 1;
      out_perm(16) = 2;
      out_perm(17) = 3;
      out_perm(18) = 4;
      out_perm(19) = 5;
      out_perm(20) = 19;
      out_perm(21) = 20;
      out_perm(22) = 21;
      out_perm(23) = 22;
      out_perm(24) = 23;
    end % perm
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_unperm = unperm( ~ )
      % Evaluate the unpermutation vector.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_unperm = zeros(24, 1);
      out_unperm(1) = 15;
      out_unperm(2) = 16;
      out_unperm(3) = 17;
      out_unperm(4) = 18;
      out_unperm(5) = 19;
      out_unperm(6) = 1;
      out_unperm(7) = 2;
      out_unperm(8) = 3;
      out_unperm(9) = 4;
      out_unperm(10) = 5;
      out_unperm(11) = 6;
      out_unperm(12) = 7;
      out_unperm(13) = 8;
      out_unperm(14) = 9;
      out_unperm(15) = 10;
      out_unperm(16) = 11;
      out_unperm(17) = 12;
      out_unperm(18) = 13;
      out_unperm(19) = 20;
      out_unperm(20) = 21;
      out_unperm(21) = 22;
      out_unperm(22) = 23;
      out_unperm(23) = 24;
      out_unperm(24) = 14;
    end % unperm
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_v = v( ~, ~ )
      % Evaluate the veiling vector.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_v = zeros(0, 1);
    end % v
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
  end
end % Test_10

% That's All Folks!
