% +--------------------------------------------------------------------------+
% | 'TrussMe' module version 0.0 - BSD 3-Clause License - Copyright (c) 2023 |
% | Current version authors:                                                 |
% |   Davide Stocco and Matteo Larcher.                                      |
% +--------------------------------------------------------------------------+

% Matlab generated code for system: Test_07
% This file has been automatically generated by TrussMe.
% DISCLAIMER: If you need to edit it, do it wisely!

classdef Test_07 < TrussMe.System
  %
  % Test_07 class
  %
  methods
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function this = Test_07( varargin )
      % Class constructor.

      % User data
      if (nargin == 0)
        data = [];
      elseif (nargin == 1 && isstruct(varargin{1}))
        data = varargin{1};
      else
        error('wrong number of input arguments.');
      end

      % Call superclass constructor
      this = this@TrussMe.System(data);
    end % Test_07
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_K = K( ~, ~, ~ )
      % Evaluate the stiffness matrix K.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_K = sparse(24, 24);
      out_K(1, 1) = 100.6944444;
      out_K(7, 1) = -100.6944444;
      out_K(2, 2) = 7.429711613;
      out_K(6, 2) = 1069.878472;
      out_K(8, 2) = -7.429711613;
      out_K(12, 2) = 1069.878472;
      out_K(3, 3) = 7.429711613;
      out_K(5, 3) = -1069.878472;
      out_K(9, 3) = -7.429711613;
      out_K(11, 3) = -1069.878472;
      out_K(4, 4) = 51354.16667;
      out_K(10, 4) = -51354.16667;
      out_K(3, 5) = -1069.878472;
      out_K(5, 5) = 205416.6667;
      out_K(9, 5) = 1069.878472;
      out_K(11, 5) = 102708.3333;
      out_K(2, 6) = 1069.878472;
      out_K(6, 6) = 205416.6667;
      out_K(8, 6) = -1069.878472;
      out_K(12, 6) = 102708.3333;
      out_K(1, 7) = -100.6944444;
      out_K(7, 7) = 704.8611111;
      out_K(13, 7) = -604.1666667;
      out_K(2, 8) = -7.429711613;
      out_K(6, 8) = -1069.878472;
      out_K(8, 8) = 1612.247420;
      out_K(12, 8) = 37445.74653;
      out_K(14, 8) = -1604.817708;
      out_K(18, 8) = 38515.62500;
      out_K(3, 9) = -7.429711613;
      out_K(5, 9) = 1069.878472;
      out_K(9, 9) = 1612.247420;
      out_K(11, 9) = -37445.74653;
      out_K(15, 9) = -1604.817708;
      out_K(17, 9) = -38515.62500;
      out_K(4, 10) = -51354.16667;
      out_K(10, 10) = 359479.1667;
      out_K(16, 10) = -308125.;
      out_K(3, 11) = -1069.878472;
      out_K(5, 11) = 102708.3333;
      out_K(9, 11) = -37445.74653;
      out_K(11, 11) = 1437916.667;
      out_K(15, 11) = 38515.62500;
      out_K(17, 11) = 616250.;
      out_K(2, 12) = 1069.878472;
      out_K(6, 12) = 102708.3333;
      out_K(8, 12) = 37445.74653;
      out_K(12, 12) = 1437916.667;
      out_K(14, 12) = -38515.62500;
      out_K(18, 12) = 616250.;
      out_K(7, 13) = -604.1666667;
      out_K(13, 13) = 1208.333333;
      out_K(19, 13) = -604.1666667;
      out_K(8, 14) = -1604.817708;
      out_K(12, 14) = -38515.62500;
      out_K(14, 14) = 3209.635416;
      out_K(20, 14) = -1604.817708;
      out_K(24, 14) = 38515.62500;
      out_K(9, 15) = -1604.817708;
      out_K(11, 15) = 38515.62500;
      out_K(15, 15) = 3209.635416;
      out_K(21, 15) = -1604.817708;
      out_K(23, 15) = -38515.62500;
      out_K(10, 16) = -308125.;
      out_K(16, 16) = 616250.;
      out_K(22, 16) = -308125.;
      out_K(9, 17) = -38515.62500;
      out_K(11, 17) = 616250.;
      out_K(17, 17) = 2465000.;
      out_K(21, 17) = 38515.62500;
      out_K(23, 17) = 616250.;
      out_K(8, 18) = 38515.62500;
      out_K(12, 18) = 616250.;
      out_K(18, 18) = 2465000.;
      out_K(20, 18) = -38515.62500;
      out_K(24, 18) = 616250.;
      out_K(13, 19) = -604.1666667;
      out_K(19, 19) = 604.1666667;
      out_K(14, 20) = -1604.817708;
      out_K(18, 20) = -38515.62500;
      out_K(20, 20) = 1604.817708;
      out_K(24, 20) = -38515.62500;
      out_K(15, 21) = -1604.817708;
      out_K(17, 21) = 38515.62500;
      out_K(21, 21) = 1604.817708;
      out_K(23, 21) = 38515.62500;
      out_K(16, 22) = -308125.;
      out_K(22, 22) = 308125.;
      out_K(15, 23) = -38515.62500;
      out_K(17, 23) = 616250.;
      out_K(21, 23) = 38515.62500;
      out_K(23, 23) = 1232500.;
      out_K(14, 24) = 38515.62500;
      out_K(18, 24) = 616250.;
      out_K(20, 24) = -38515.62500;
      out_K(24, 24) = 1232500.;
    end % K
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_K_ff = K_ff( ~, ~, ~ )
      % Evaluate the stiffness matrix K_ff.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_K_ff = sparse(12, 12);
      out_K_ff(1, 1) = 359479.1667;
      out_K_ff(7, 1) = -308125.;
      out_K_ff(2, 2) = 1437916.667;
      out_K_ff(6, 2) = 38515.62500;
      out_K_ff(8, 2) = 616250.;
      out_K_ff(3, 3) = 1437916.667;
      out_K_ff(5, 3) = -38515.62500;
      out_K_ff(9, 3) = 616250.;
      out_K_ff(4, 4) = 1208.333333;
      out_K_ff(3, 5) = -38515.62500;
      out_K_ff(5, 5) = 3209.635416;
      out_K_ff(12, 5) = 38515.62500;
      out_K_ff(2, 6) = 38515.62500;
      out_K_ff(6, 6) = 3209.635416;
      out_K_ff(11, 6) = -38515.62500;
      out_K_ff(1, 7) = -308125.;
      out_K_ff(7, 7) = 616250.;
      out_K_ff(10, 7) = -308125.;
      out_K_ff(2, 8) = 616250.;
      out_K_ff(8, 8) = 2465000.;
      out_K_ff(11, 8) = 616250.;
      out_K_ff(3, 9) = 616250.;
      out_K_ff(9, 9) = 2465000.;
      out_K_ff(12, 9) = 616250.;
      out_K_ff(7, 10) = -308125.;
      out_K_ff(10, 10) = 308125.;
      out_K_ff(6, 11) = -38515.62500;
      out_K_ff(8, 11) = 616250.;
      out_K_ff(11, 11) = 1232500.;
      out_K_ff(5, 12) = 38515.62500;
      out_K_ff(9, 12) = 616250.;
      out_K_ff(12, 12) = 1232500.;
    end % K_ff
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_K_fs = K_fs( ~, ~, ~ )
      % Evaluate the stiffness matrix K_fs.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_K_fs = sparse(12, 12);
      out_K_fs(3, 2) = 1069.878472;
      out_K_fs(2, 3) = -1069.878472;
      out_K_fs(1, 4) = -51354.16667;
      out_K_fs(2, 5) = 102708.3333;
      out_K_fs(3, 6) = 102708.3333;
      out_K_fs(4, 7) = -604.1666667;
      out_K_fs(3, 8) = 37445.74653;
      out_K_fs(5, 8) = -1604.817708;
      out_K_fs(9, 8) = 38515.62500;
      out_K_fs(2, 9) = -37445.74653;
      out_K_fs(6, 9) = -1604.817708;
      out_K_fs(8, 9) = -38515.62500;
      out_K_fs(4, 10) = -604.1666667;
      out_K_fs(5, 11) = -1604.817708;
      out_K_fs(9, 11) = -38515.62500;
      out_K_fs(12, 11) = -38515.62500;
      out_K_fs(6, 12) = -1604.817708;
      out_K_fs(8, 12) = 38515.62500;
      out_K_fs(11, 12) = 38515.62500;
    end % K_fs
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_K_sf = K_sf( ~, ~, ~ )
      % Evaluate the stiffness matrix K_sf.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_K_sf = sparse(12, 12);
      out_K_sf(4, 1) = -51354.16667;
      out_K_sf(3, 2) = -1069.878472;
      out_K_sf(5, 2) = 102708.3333;
      out_K_sf(9, 2) = -37445.74653;
      out_K_sf(2, 3) = 1069.878472;
      out_K_sf(6, 3) = 102708.3333;
      out_K_sf(8, 3) = 37445.74653;
      out_K_sf(7, 4) = -604.1666667;
      out_K_sf(10, 4) = -604.1666667;
      out_K_sf(8, 5) = -1604.817708;
      out_K_sf(11, 5) = -1604.817708;
      out_K_sf(9, 6) = -1604.817708;
      out_K_sf(12, 6) = -1604.817708;
      out_K_sf(9, 8) = -38515.62500;
      out_K_sf(12, 8) = 38515.62500;
      out_K_sf(8, 9) = 38515.62500;
      out_K_sf(11, 9) = -38515.62500;
      out_K_sf(12, 11) = 38515.62500;
      out_K_sf(11, 12) = -38515.62500;
    end % K_sf
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_K_ss = K_ss( ~, ~, ~ )
      % Evaluate the stiffness matrix K_ss.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_K_ss = sparse(12, 12);
      out_K_ss(1, 1) = 100.6944444;
      out_K_ss(7, 1) = -100.6944444;
      out_K_ss(2, 2) = 7.429711613;
      out_K_ss(6, 2) = 1069.878472;
      out_K_ss(8, 2) = -7.429711613;
      out_K_ss(3, 3) = 7.429711613;
      out_K_ss(5, 3) = -1069.878472;
      out_K_ss(9, 3) = -7.429711613;
      out_K_ss(4, 4) = 51354.16667;
      out_K_ss(3, 5) = -1069.878472;
      out_K_ss(5, 5) = 205416.6667;
      out_K_ss(9, 5) = 1069.878472;
      out_K_ss(2, 6) = 1069.878472;
      out_K_ss(6, 6) = 205416.6667;
      out_K_ss(8, 6) = -1069.878472;
      out_K_ss(1, 7) = -100.6944444;
      out_K_ss(7, 7) = 704.8611111;
      out_K_ss(2, 8) = -7.429711613;
      out_K_ss(6, 8) = -1069.878472;
      out_K_ss(8, 8) = 1612.247420;
      out_K_ss(3, 9) = -7.429711613;
      out_K_ss(5, 9) = 1069.878472;
      out_K_ss(9, 9) = 1612.247420;
      out_K_ss(10, 10) = 604.1666667;
      out_K_ss(11, 11) = 1604.817708;
      out_K_ss(12, 12) = 1604.817708;
    end % K_ss
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_d = d( ~, ~, ~ )
      % Evaluate the deformation vector d.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_d = sparse(24, 1);
      out_d(12) = .00140202839720191;
      out_d(14) = .0186937119677883;
      out_d(18) = -.000233671399488149;
      out_d(24) = -.00046734279924931;
    end % d
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_d_f = d_f( ~, ~, ~ )
      % Evaluate the deformation vector d_f.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_d_f = sparse(12, 1);
      out_d_f(3) = .00140202839720191;
      out_d_f(5) = .0186937119677883;
      out_d_f(9) = -.000233671399488149;
      out_d_f(12) = -.00046734279924931;
    end % d_f
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_d_s = d_s( ~, ~, ~ )
      % Evaluate the deformation vector d_s.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_d_s = sparse(12, 1);
    end % d_s
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_f = f( ~, ~, ~ )
      % Evaluate the force vector f.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_f = sparse(24, 1);
      out_f(2) = 25.499999999299;
      out_f(6) = 1295.99999991588;
      out_f(8) = 37.4999999994158;
      out_f(12) = 1152;
      out_f(14) = -12;
      out_f(20) = -2.99999999591076;
    end % f
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_f_f = f_f( ~, ~, ~ )
      % Evaluate the force vector f_f.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_f_f = sparse(12, 1);
      out_f_f(3) = 1152;
      out_f_f(5) = -12;
    end % f_f
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_f_s = f_s( ~, ~, ~ )
      % Evaluate the force vector f_s.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_f_s = sparse(12, 1);
      out_f_s(2) = 25.499999999299;
      out_f_s(6) = 1295.99999991588;
      out_f_s(8) = 37.4999999994158;
      out_f_s(11) = -2.99999999591076;
    end % f_s
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_f_r = f_r( ~, ~, ~ )
      % Evaluate the force vector f_r.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_f_r = sparse(12, 1);
      out_f_r(2) = -24;
      out_f_r(6) = -1152;
      out_f_r(8) = -24;
    end % f_r
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_perm = perm( ~ )
      % Evaluate the permutation vector.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_perm = zeros(24, 1);
      out_perm(1) = 10;
      out_perm(2) = 11;
      out_perm(3) = 12;
      out_perm(4) = 13;
      out_perm(5) = 14;
      out_perm(6) = 15;
      out_perm(7) = 16;
      out_perm(8) = 17;
      out_perm(9) = 18;
      out_perm(10) = 22;
      out_perm(11) = 23;
      out_perm(12) = 24;
      out_perm(13) = 1;
      out_perm(14) = 2;
      out_perm(15) = 3;
      out_perm(16) = 4;
      out_perm(17) = 5;
      out_perm(18) = 6;
      out_perm(19) = 7;
      out_perm(20) = 8;
      out_perm(21) = 9;
      out_perm(22) = 19;
      out_perm(23) = 20;
      out_perm(24) = 21;
    end % perm
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_unperm = unperm( ~ )
      % Evaluate the unpermutation vector.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_unperm = zeros(24, 1);
      out_unperm(1) = 13;
      out_unperm(2) = 14;
      out_unperm(3) = 15;
      out_unperm(4) = 16;
      out_unperm(5) = 17;
      out_unperm(6) = 18;
      out_unperm(7) = 19;
      out_unperm(8) = 20;
      out_unperm(9) = 21;
      out_unperm(10) = 1;
      out_unperm(11) = 2;
      out_unperm(12) = 3;
      out_unperm(13) = 4;
      out_unperm(14) = 5;
      out_unperm(15) = 6;
      out_unperm(16) = 7;
      out_unperm(17) = 8;
      out_unperm(18) = 9;
      out_unperm(19) = 22;
      out_unperm(20) = 23;
      out_unperm(21) = 24;
      out_unperm(22) = 10;
      out_unperm(23) = 11;
      out_unperm(24) = 12;
    end % unperm
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_v = v( ~, ~ )
      % Evaluate the veiling vector.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_v = zeros(0, 1);
    end % v
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
  end
end % Test_07

% That's All Folks!
