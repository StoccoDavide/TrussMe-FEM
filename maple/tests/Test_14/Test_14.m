% +--------------------------------------------------------------------------+
% | 'TrussMe' module version 0.0 - BSD 3-Clause License - Copyright (c) 2023 |
% | Current version authors:                                                 |
% |   Davide Stocco and Matteo Larcher.                                      |
% +--------------------------------------------------------------------------+

% Matlab generated code for system: Test_14
% This file has been automatically generated by TrussMe.
% DISCLAIMER: If you need to edit it, do it wisely!

classdef Test_14 < TrussMe.System
  %
  % Test_14 class
  %
  methods
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function this = Test_14( varargin )
      % Class constructor.

      % User data
      if (nargin == 0)
        data.E = .2e12;
        data.G = .1e12;
        data.A = .1e-2;
        data.I__x = .1e-4;
        data.I__y = .1e-4;
        data.I__z = .1e-4;
        data.K = .1e5;
        data.T = .1e4;
        data.l = 1.0;
        data.F__x = 0.;
        data.F__y = 0.;
        data.F__z = 0.;
        data.M__x = 0.;
        data.M__y = .1e3;
        data.M__z = 0.;
      elseif (nargin == 1 && isstruct(varargin{1}))
        data = varargin{1};
      elseif (nargin == 15)
        data.E = varargin{1};
        data.G = varargin{2};
        data.A = varargin{3};
        data.I__x = varargin{4};
        data.I__y = varargin{5};
        data.I__z = varargin{6};
        data.K = varargin{7};
        data.T = varargin{8};
        data.l = varargin{9};
        data.F__x = varargin{10};
        data.F__y = varargin{11};
        data.F__z = varargin{12};
        data.M__x = varargin{13};
        data.M__y = varargin{14};
        data.M__z = varargin{15};
      else
        error('wrong number of input arguments.');
      end

      % Call superclass constructor
      this = this@TrussMe.System(data);
    end % Test_14
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_K = K( this, ~, ~ )
      % Evaluate the stiffness matrix K.

      % Extract properties
      E = this.m_data.E;
      G = this.m_data.G;
      A = this.m_data.A;
      I__y = this.m_data.I__y;
      I__z = this.m_data.I__z;
      l = this.m_data.l;

      % Extract inputs
      % No inputs

      % Evaluate function
      t1 = l ^ 2;
      t2 = t1 * A;
      t3 = 12 * I__z;
      t7 = 0.1e1 / t1 / l;
      t8 = t7 * (t2 + t3) * E;
      out_1_1 = t8 / 2;
      out_2_1 = t7 * (t2 - t3) * E / 2;
      t12 = sqrt(2);
      t13 = 0.1e1 / l;
      t14 = t13 * t12;
      t15 = I__z * E;
      t16 = abs(l);
      t17 = 0.1e1 / t16;
      t20 = 3 * t17 * t15 * t14;
      out_6_1 = -t20;
      out_7_1 = -out_1_1;
      out_8_1 = -out_2_1;
      out_12_1 = out_6_1;
      out_1_2 = out_2_1;
      out_2_2 = out_1_1;
      out_6_2 = t20;
      out_7_2 = out_8_1;
      out_8_2 = out_7_1;
      out_12_2 = out_6_2;
      t21 = I__y * E;
      t22 = t7 * t21;
      out_3_3 = 12 * t22;
      t24 = t17 * t21 * t14;
      out_4_3 = 3 * t24;
      out_5_3 = -out_4_3;
      out_9_3 = -out_3_3;
      out_10_3 = out_4_3;
      out_11_3 = out_5_3;
      out_3_4 = out_10_3;
      t25 = 4 * E;
      t28 = G * I__z;
      t30 = t13 * (I__y * (t25 + G) + t28);
      out_4_4 = t30 / 2;
      t31 = -t25 + G;
      out_5_4 = t13 * (I__y * t31 + t28) / 2;
      out_9_4 = out_11_3;
      t35 = 2 * E;
      out_10_4 = t13 * (I__y * (t35 - G) - t28) / 2;
      t40 = -t35 - G;
      out_11_4 = t13 * (I__y * t40 - t28) / 2;
      out_3_5 = out_9_4;
      out_4_5 = out_5_4;
      out_5_5 = out_4_4;
      out_9_5 = out_3_4;
      out_10_5 = out_11_4;
      out_11_5 = out_10_4;
      out_1_6 = out_12_1;
      out_2_6 = out_12_2;
      t44 = t13 * t15;
      out_6_6 = 4 * t44;
      out_7_6 = out_2_6;
      out_8_6 = out_1_6;
      out_12_6 = 2 * t44;
      out_1_7 = out_8_2;
      out_2_7 = out_7_2;
      out_6_7 = out_7_6;
      out_7_7 = t8;
      out_12_7 = out_6_7;
      out_13_7 = out_1_7;
      out_14_7 = out_1_2;
      out_18_7 = out_12_7;
      out_1_8 = out_2_7;
      out_2_8 = out_13_7;
      out_6_8 = out_8_6;
      out_8_8 = out_7_7;
      out_12_8 = out_6_8;
      out_13_8 = out_14_7;
      out_14_8 = out_2_8;
      out_18_8 = out_18_7;
      out_3_9 = out_9_3;
      out_4_9 = out_3_5;
      out_5_9 = out_9_5;
      out_9_9 = 24 * t22;
      out_10_9 = -6 * t24;
      out_15_9 = out_3_9;
      out_16_9 = out_4_9;
      out_17_9 = out_16_9;
      out_3_10 = out_5_9;
      out_4_10 = out_11_5;
      out_5_10 = out_10_5;
      out_9_10 = out_10_9;
      out_10_10 = t30;
      out_15_10 = out_3_10;
      out_16_10 = out_4_10;
      out_17_10 = t13 * (-I__y * t40 + t28) / 2;
      out_3_11 = out_17_9;
      out_4_11 = out_5_10;
      out_5_11 = out_16_10;
      out_11_11 = out_10_10;
      out_15_11 = out_15_10;
      out_16_11 = out_17_10;
      out_17_11 = out_5_11;
      out_1_12 = out_12_8;
      out_2_12 = out_18_8;
      out_6_12 = out_12_6;
      out_7_12 = out_2_12;
      out_8_12 = out_1_12;
      out_12_12 = out_6_6;
      out_7_13 = out_14_8;
      out_8_13 = out_13_8;
      out_13_13 = out_2_2;
      out_14_13 = out_1_8;
      out_18_13 = out_8_12;
      out_7_14 = out_8_13;
      out_8_14 = out_7_13;
      out_13_14 = out_14_13;
      out_14_14 = out_13_13;
      out_18_14 = out_18_13;
      out_9_15 = out_15_9;
      out_10_15 = out_15_11;
      out_11_15 = out_10_15;
      out_15_15 = out_3_3;
      out_16_15 = out_11_15;
      out_17_15 = out_16_15;
      out_9_16 = out_3_11;
      out_10_16 = out_17_11;
      out_11_16 = out_16_11;
      out_15_16 = out_17_15;
      out_16_16 = out_5_5;
      out_17_16 = t13 * (-I__y * t31 - t28) / 2;
      out_9_17 = out_9_16;
      out_10_17 = out_11_16;
      out_11_17 = out_10_16;
      out_15_17 = out_15_16;
      out_16_17 = out_17_16;
      out_17_17 = out_16_16;
      out_7_18 = out_7_12;
      out_8_18 = out_7_18;
      out_13_18 = out_18_14;
      out_14_18 = out_13_18;
      out_18_18 = out_12_12;

      % Store outputs
      out_K = sparse(18, 18);
      out_K(1, 1) = out_1_1;
      out_K(2, 1) = out_2_1;
      out_K(6, 1) = out_6_1;
      out_K(7, 1) = out_7_1;
      out_K(8, 1) = out_8_1;
      out_K(12, 1) = out_12_1;
      out_K(1, 2) = out_1_2;
      out_K(2, 2) = out_2_2;
      out_K(6, 2) = out_6_2;
      out_K(7, 2) = out_7_2;
      out_K(8, 2) = out_8_2;
      out_K(12, 2) = out_12_2;
      out_K(3, 3) = out_3_3;
      out_K(4, 3) = out_4_3;
      out_K(5, 3) = out_5_3;
      out_K(9, 3) = out_9_3;
      out_K(10, 3) = out_10_3;
      out_K(11, 3) = out_11_3;
      out_K(3, 4) = out_3_4;
      out_K(4, 4) = out_4_4;
      out_K(5, 4) = out_5_4;
      out_K(9, 4) = out_9_4;
      out_K(10, 4) = out_10_4;
      out_K(11, 4) = out_11_4;
      out_K(3, 5) = out_3_5;
      out_K(4, 5) = out_4_5;
      out_K(5, 5) = out_5_5;
      out_K(9, 5) = out_9_5;
      out_K(10, 5) = out_10_5;
      out_K(11, 5) = out_11_5;
      out_K(1, 6) = out_1_6;
      out_K(2, 6) = out_2_6;
      out_K(6, 6) = out_6_6;
      out_K(7, 6) = out_7_6;
      out_K(8, 6) = out_8_6;
      out_K(12, 6) = out_12_6;
      out_K(1, 7) = out_1_7;
      out_K(2, 7) = out_2_7;
      out_K(6, 7) = out_6_7;
      out_K(7, 7) = out_7_7;
      out_K(12, 7) = out_12_7;
      out_K(13, 7) = out_13_7;
      out_K(14, 7) = out_14_7;
      out_K(18, 7) = out_18_7;
      out_K(1, 8) = out_1_8;
      out_K(2, 8) = out_2_8;
      out_K(6, 8) = out_6_8;
      out_K(8, 8) = out_8_8;
      out_K(12, 8) = out_12_8;
      out_K(13, 8) = out_13_8;
      out_K(14, 8) = out_14_8;
      out_K(18, 8) = out_18_8;
      out_K(3, 9) = out_3_9;
      out_K(4, 9) = out_4_9;
      out_K(5, 9) = out_5_9;
      out_K(9, 9) = out_9_9;
      out_K(10, 9) = out_10_9;
      out_K(15, 9) = out_15_9;
      out_K(16, 9) = out_16_9;
      out_K(17, 9) = out_17_9;
      out_K(3, 10) = out_3_10;
      out_K(4, 10) = out_4_10;
      out_K(5, 10) = out_5_10;
      out_K(9, 10) = out_9_10;
      out_K(10, 10) = out_10_10;
      out_K(15, 10) = out_15_10;
      out_K(16, 10) = out_16_10;
      out_K(17, 10) = out_17_10;
      out_K(3, 11) = out_3_11;
      out_K(4, 11) = out_4_11;
      out_K(5, 11) = out_5_11;
      out_K(11, 11) = out_11_11;
      out_K(15, 11) = out_15_11;
      out_K(16, 11) = out_16_11;
      out_K(17, 11) = out_17_11;
      out_K(1, 12) = out_1_12;
      out_K(2, 12) = out_2_12;
      out_K(6, 12) = out_6_12;
      out_K(7, 12) = out_7_12;
      out_K(8, 12) = out_8_12;
      out_K(12, 12) = out_12_12;
      out_K(7, 13) = out_7_13;
      out_K(8, 13) = out_8_13;
      out_K(13, 13) = out_13_13;
      out_K(14, 13) = out_14_13;
      out_K(18, 13) = out_18_13;
      out_K(7, 14) = out_7_14;
      out_K(8, 14) = out_8_14;
      out_K(13, 14) = out_13_14;
      out_K(14, 14) = out_14_14;
      out_K(18, 14) = out_18_14;
      out_K(9, 15) = out_9_15;
      out_K(10, 15) = out_10_15;
      out_K(11, 15) = out_11_15;
      out_K(15, 15) = out_15_15;
      out_K(16, 15) = out_16_15;
      out_K(17, 15) = out_17_15;
      out_K(9, 16) = out_9_16;
      out_K(10, 16) = out_10_16;
      out_K(11, 16) = out_11_16;
      out_K(15, 16) = out_15_16;
      out_K(16, 16) = out_16_16;
      out_K(17, 16) = out_17_16;
      out_K(9, 17) = out_9_17;
      out_K(10, 17) = out_10_17;
      out_K(11, 17) = out_11_17;
      out_K(15, 17) = out_15_17;
      out_K(16, 17) = out_16_17;
      out_K(17, 17) = out_17_17;
      out_K(7, 18) = out_7_18;
      out_K(8, 18) = out_8_18;
      out_K(13, 18) = out_13_18;
      out_K(14, 18) = out_14_18;
      out_K(18, 18) = out_18_18;
    end % K
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_K_ff = K_ff( this, ~, ~ )
      % Evaluate the stiffness matrix K_ff.

      % Extract properties
      E = this.m_data.E;
      G = this.m_data.G;
      A = this.m_data.A;
      I__y = this.m_data.I__y;
      I__z = this.m_data.I__z;
      l = this.m_data.l;

      % Extract inputs
      % No inputs

      % Evaluate function
      t1 = I__z * E;
      t2 = 0.1e1 / l;
      t3 = t2 * t1;
      out_1_1 = 4 * t3;
      t4 = sqrt(2);
      t5 = t2 * t4;
      t6 = abs(l);
      t7 = 0.1e1 / t6;
      out_2_1 = 3 * t7 * t1 * t5;
      out_3_1 = -out_2_1;
      out_7_1 = 2 * t3;
      out_1_2 = out_2_1;
      t10 = l ^ 2;
      t16 = 0.1e1 / t10 / l;
      out_2_2 = t16 * (t10 * A + 12 * I__z) * E;
      out_7_2 = out_1_2;
      out_8_2 = out_7_2;
      out_1_3 = out_3_1;
      out_3_3 = out_2_2;
      out_7_3 = out_1_3;
      out_8_3 = out_8_2;
      t17 = I__y * E;
      out_4_4 = 24 * t16 * t17;
      out_5_4 = -6 * t7 * t17 * t5;
      out_4_5 = out_5_4;
      out_5_5 = t2 * ((4 * E + G) * I__y + G * I__z);
      out_6_6 = out_5_5;
      out_1_7 = out_7_1;
      out_2_7 = out_8_3;
      out_3_7 = out_7_3;
      out_7_7 = out_1_1;
      out_2_8 = out_2_7;
      out_3_8 = out_2_8;
      out_8_8 = out_7_7;

      % Store outputs
      out_K_ff = sparse(8, 8);
      out_K_ff(1, 1) = out_1_1;
      out_K_ff(2, 1) = out_2_1;
      out_K_ff(3, 1) = out_3_1;
      out_K_ff(7, 1) = out_7_1;
      out_K_ff(1, 2) = out_1_2;
      out_K_ff(2, 2) = out_2_2;
      out_K_ff(7, 2) = out_7_2;
      out_K_ff(8, 2) = out_8_2;
      out_K_ff(1, 3) = out_1_3;
      out_K_ff(3, 3) = out_3_3;
      out_K_ff(7, 3) = out_7_3;
      out_K_ff(8, 3) = out_8_3;
      out_K_ff(4, 4) = out_4_4;
      out_K_ff(5, 4) = out_5_4;
      out_K_ff(4, 5) = out_4_5;
      out_K_ff(5, 5) = out_5_5;
      out_K_ff(6, 6) = out_6_6;
      out_K_ff(1, 7) = out_1_7;
      out_K_ff(2, 7) = out_2_7;
      out_K_ff(3, 7) = out_3_7;
      out_K_ff(7, 7) = out_7_7;
      out_K_ff(2, 8) = out_2_8;
      out_K_ff(3, 8) = out_3_8;
      out_K_ff(8, 8) = out_8_8;
    end % K_ff
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_K_fs = K_fs( this, ~, ~ )
      % Evaluate the stiffness matrix K_fs.

      % Extract properties
      E = this.m_data.E;
      G = this.m_data.G;
      A = this.m_data.A;
      I__y = this.m_data.I__y;
      I__z = this.m_data.I__z;
      l = this.m_data.l;

      % Extract inputs
      % No inputs

      % Evaluate function
      t1 = sqrt(2);
      t2 = 0.1e1 / l;
      t3 = t2 * t1;
      t5 = abs(l);
      t6 = 0.1e1 / t5;
      t9 = 3 * t6 * I__z * E * t3;
      out_1_1 = -t9;
      t10 = l ^ 2;
      t11 = t10 * A;
      t12 = 12 * I__z;
      t16 = 0.1e1 / t10 / l;
      out_2_1 = -t16 * (t11 + t12) * E / 2;
      t22 = t16 * (t11 - t12) * E / 2;
      out_3_1 = -t22;
      out_7_1 = out_1_1;
      out_1_2 = t9;
      out_2_2 = out_3_1;
      out_3_2 = out_2_1;
      out_7_2 = out_1_2;
      t23 = I__y * E;
      out_4_3 = -12 * t16 * t23;
      out_5_3 = 3 * t6 * t23 * t3;
      out_6_3 = -out_5_3;
      out_4_4 = out_6_3;
      t28 = 2 * E;
      t31 = G * I__z;
      out_5_4 = t2 * (I__y * (t28 - G) - t31) / 2;
      t34 = -t28 - G;
      out_6_4 = t2 * (I__y * t34 - t31) / 2;
      out_4_5 = out_5_3;
      out_5_5 = out_6_4;
      out_6_5 = out_5_4;
      out_2_6 = out_3_2;
      out_3_6 = t22;
      out_8_6 = out_7_1;
      out_2_7 = out_3_6;
      out_3_7 = out_2_6;
      out_8_7 = out_8_6;
      out_4_8 = out_4_3;
      out_5_8 = out_4_5;
      out_6_8 = out_5_8;
      out_4_9 = out_4_4;
      out_5_9 = out_6_5;
      out_6_9 = t2 * (-I__y * t34 + t31) / 2;
      out_4_10 = out_4_9;
      out_5_10 = out_6_9;
      out_6_10 = out_5_9;

      % Store outputs
      out_K_fs = sparse(8, 10);
      out_K_fs(1, 1) = out_1_1;
      out_K_fs(2, 1) = out_2_1;
      out_K_fs(3, 1) = out_3_1;
      out_K_fs(7, 1) = out_7_1;
      out_K_fs(1, 2) = out_1_2;
      out_K_fs(2, 2) = out_2_2;
      out_K_fs(3, 2) = out_3_2;
      out_K_fs(7, 2) = out_7_2;
      out_K_fs(4, 3) = out_4_3;
      out_K_fs(5, 3) = out_5_3;
      out_K_fs(6, 3) = out_6_3;
      out_K_fs(4, 4) = out_4_4;
      out_K_fs(5, 4) = out_5_4;
      out_K_fs(6, 4) = out_6_4;
      out_K_fs(4, 5) = out_4_5;
      out_K_fs(5, 5) = out_5_5;
      out_K_fs(6, 5) = out_6_5;
      out_K_fs(2, 6) = out_2_6;
      out_K_fs(3, 6) = out_3_6;
      out_K_fs(8, 6) = out_8_6;
      out_K_fs(2, 7) = out_2_7;
      out_K_fs(3, 7) = out_3_7;
      out_K_fs(8, 7) = out_8_7;
      out_K_fs(4, 8) = out_4_8;
      out_K_fs(5, 8) = out_5_8;
      out_K_fs(6, 8) = out_6_8;
      out_K_fs(4, 9) = out_4_9;
      out_K_fs(5, 9) = out_5_9;
      out_K_fs(6, 9) = out_6_9;
      out_K_fs(4, 10) = out_4_10;
      out_K_fs(5, 10) = out_5_10;
      out_K_fs(6, 10) = out_6_10;
    end % K_fs
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_K_sf = K_sf( this, ~, ~ )
      % Evaluate the stiffness matrix K_sf.

      % Extract properties
      E = this.m_data.E;
      G = this.m_data.G;
      A = this.m_data.A;
      I__y = this.m_data.I__y;
      I__z = this.m_data.I__z;
      l = this.m_data.l;

      % Extract inputs
      % No inputs

      % Evaluate function
      t1 = sqrt(2);
      t2 = 0.1e1 / l;
      t3 = t2 * t1;
      t5 = abs(l);
      t6 = 0.1e1 / t5;
      t9 = 3 * t6 * I__z * E * t3;
      out_1_1 = -t9;
      out_2_1 = t9;
      t10 = l ^ 2;
      t11 = t10 * A;
      t12 = 12 * I__z;
      t16 = 0.1e1 / t10 / l;
      out_1_2 = -t16 * (t11 + t12) * E / 2;
      t22 = t16 * (t11 - t12) * E / 2;
      out_2_2 = -t22;
      out_6_2 = out_1_2;
      out_7_2 = t22;
      out_1_3 = out_2_2;
      out_2_3 = out_6_2;
      out_6_3 = out_7_2;
      out_7_3 = out_2_3;
      t23 = I__y * E;
      out_3_4 = -12 * t16 * t23;
      t28 = 3 * t6 * t23 * t3;
      out_4_4 = -t28;
      out_5_4 = t28;
      out_8_4 = out_3_4;
      out_9_4 = out_4_4;
      out_10_4 = out_9_4;
      out_3_5 = out_5_4;
      t29 = 2 * E;
      t32 = G * I__z;
      out_4_5 = t2 * (I__y * (t29 - G) - t32) / 2;
      t35 = -t29 - G;
      out_5_5 = t2 * (I__y * t35 - t32) / 2;
      out_8_5 = out_3_5;
      out_9_5 = out_4_5;
      out_10_5 = t2 * (-I__y * t35 + t32) / 2;
      out_3_6 = out_10_4;
      out_4_6 = out_5_5;
      out_5_6 = out_9_5;
      out_8_6 = out_8_5;
      out_9_6 = out_10_5;
      out_10_6 = out_5_6;
      out_1_7 = out_1_1;
      out_2_7 = out_2_1;
      out_6_8 = out_1_7;
      out_7_8 = out_6_8;

      % Store outputs
      out_K_sf = sparse(10, 8);
      out_K_sf(1, 1) = out_1_1;
      out_K_sf(2, 1) = out_2_1;
      out_K_sf(1, 2) = out_1_2;
      out_K_sf(2, 2) = out_2_2;
      out_K_sf(6, 2) = out_6_2;
      out_K_sf(7, 2) = out_7_2;
      out_K_sf(1, 3) = out_1_3;
      out_K_sf(2, 3) = out_2_3;
      out_K_sf(6, 3) = out_6_3;
      out_K_sf(7, 3) = out_7_3;
      out_K_sf(3, 4) = out_3_4;
      out_K_sf(4, 4) = out_4_4;
      out_K_sf(5, 4) = out_5_4;
      out_K_sf(8, 4) = out_8_4;
      out_K_sf(9, 4) = out_9_4;
      out_K_sf(10, 4) = out_10_4;
      out_K_sf(3, 5) = out_3_5;
      out_K_sf(4, 5) = out_4_5;
      out_K_sf(5, 5) = out_5_5;
      out_K_sf(8, 5) = out_8_5;
      out_K_sf(9, 5) = out_9_5;
      out_K_sf(10, 5) = out_10_5;
      out_K_sf(3, 6) = out_3_6;
      out_K_sf(4, 6) = out_4_6;
      out_K_sf(5, 6) = out_5_6;
      out_K_sf(8, 6) = out_8_6;
      out_K_sf(9, 6) = out_9_6;
      out_K_sf(10, 6) = out_10_6;
      out_K_sf(1, 7) = out_1_7;
      out_K_sf(2, 7) = out_2_7;
      out_K_sf(6, 8) = out_6_8;
      out_K_sf(7, 8) = out_7_8;
    end % K_sf
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_K_ss = K_ss( this, ~, ~ )
      % Evaluate the stiffness matrix K_ss.

      % Extract properties
      E = this.m_data.E;
      G = this.m_data.G;
      A = this.m_data.A;
      I__y = this.m_data.I__y;
      I__z = this.m_data.I__z;
      l = this.m_data.l;

      % Extract inputs
      % No inputs

      % Evaluate function
      t1 = l ^ 2;
      t2 = t1 * A;
      t3 = 12 * I__z;
      t7 = 0.1e1 / t1 / l;
      out_1_1 = t7 * (t2 + t3) * E / 2;
      out_2_1 = t7 * (t2 - t3) * E / 2;
      out_1_2 = out_2_1;
      out_2_2 = out_1_1;
      t12 = I__y * E;
      out_3_3 = 12 * t7 * t12;
      t14 = sqrt(2);
      t15 = 0.1e1 / l;
      t17 = abs(l);
      out_4_3 = 3 / t17 * t12 * t15 * t14;
      out_5_3 = -out_4_3;
      out_3_4 = out_4_3;
      t21 = 4 * E;
      t24 = G * I__z;
      out_4_4 = t15 * (I__y * (t21 + G) + t24) / 2;
      t27 = -t21 + G;
      out_5_4 = t15 * (I__y * t27 + t24) / 2;
      out_3_5 = out_5_3;
      out_4_5 = out_5_4;
      out_5_5 = out_4_4;
      out_6_6 = out_2_2;
      out_7_6 = -out_1_2;
      out_6_7 = out_7_6;
      out_7_7 = out_6_6;
      out_8_8 = out_3_3;
      out_9_8 = out_3_4;
      out_10_8 = out_9_8;
      out_8_9 = out_10_8;
      out_9_9 = out_5_5;
      out_10_9 = t15 * (-I__y * t27 - t24) / 2;
      out_8_10 = out_8_9;
      out_9_10 = out_10_9;
      out_10_10 = out_9_9;

      % Store outputs
      out_K_ss = sparse(10, 10);
      out_K_ss(1, 1) = out_1_1;
      out_K_ss(2, 1) = out_2_1;
      out_K_ss(1, 2) = out_1_2;
      out_K_ss(2, 2) = out_2_2;
      out_K_ss(3, 3) = out_3_3;
      out_K_ss(4, 3) = out_4_3;
      out_K_ss(5, 3) = out_5_3;
      out_K_ss(3, 4) = out_3_4;
      out_K_ss(4, 4) = out_4_4;
      out_K_ss(5, 4) = out_5_4;
      out_K_ss(3, 5) = out_3_5;
      out_K_ss(4, 5) = out_4_5;
      out_K_ss(5, 5) = out_5_5;
      out_K_ss(6, 6) = out_6_6;
      out_K_ss(7, 6) = out_7_6;
      out_K_ss(6, 7) = out_6_7;
      out_K_ss(7, 7) = out_7_7;
      out_K_ss(8, 8) = out_8_8;
      out_K_ss(9, 8) = out_9_8;
      out_K_ss(10, 8) = out_10_8;
      out_K_ss(8, 9) = out_8_9;
      out_K_ss(9, 9) = out_9_9;
      out_K_ss(10, 9) = out_10_9;
      out_K_ss(8, 10) = out_8_10;
      out_K_ss(9, 10) = out_9_10;
      out_K_ss(10, 10) = out_10_10;
    end % K_ss
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_d = d( this, ~, ~ )
      % Evaluate the deformation vector d.

      % Extract properties
      E = this.m_data.E;
      G = this.m_data.G;
      A = this.m_data.A;
      I__y = this.m_data.I__y;
      I__z = this.m_data.I__z;
      l = this.m_data.l;
      F__x = this.m_data.F__x;
      F__y = this.m_data.F__y;
      F__z = this.m_data.F__z;
      M__x = this.m_data.M__x;
      M__y = this.m_data.M__y;
      M__z = this.m_data.M__z;

      % Extract inputs
      % No inputs

      % Evaluate function
      t1 = A * M__z;
      t2 = abs(l);
      t3 = t2 ^ 2;
      t4 = l ^ 2;
      t7 = F__x * I__z;
      t8 = sqrt(2);
      t9 = t8 * t2;
      t10 = t4 * t9;
      t13 = F__y * I__z;
      t16 = M__z * I__z;
      t23 = 0.1e1 / E;
      t25 = t4 * t3 * A;
      t27 = 12 * t3 * I__z;
      t28 = t4 * I__z;
      t32 = 0.1e1 / (t25 + t27 - 12 * t28) * t23;
      t34 = 0.1e1 / I__z * t32;
      out_6 = -t34 * (t4 * t3 * t1 - 3 * t10 * t13 + 3 * t10 * t7 + 12 * t3 * t16 - 18 * t4 * t16) * l / 6;
      t37 = t4 * l;
      t38 = t2 * t37;
      t40 = t3 * t2;
      t41 = t4 * t40;
      t44 = t8 * t3;
      t46 = t4 * t44 * t1;
      t51 = I__z * t2 * t4 * F__x;
      t54 = t4 * t2 * t13;
      t55 = 3 * t54;
      t57 = 12 * t44 * t16;
      t60 = 9 * t4 * t8 * t16;
      t65 = 0.1e1 / (t25 + t27 - 9 * t28);
      t66 = t65 * t32;
      out_7 = t66 * (2 * t41 * A * F__x + 24 * t40 * t7 - t46 - 21 * t51 - t55 - t57 + t60) * t38 / 2;
      t71 = 3 * t51;
      out_8 = t66 * (2 * t41 * A * F__y + 24 * t40 * t13 + t46 - 21 * t54 + t57 - t60 - t71) * t38 / 2;
      t85 = F__z * t8;
      t88 = G * I__z;
      t95 = E * I__y;
      t100 = G * I__y;
      t104 = 0.1e1 / (t3 * t100 + t3 * t88 + 4 * t3 * t95 - 3 * t4 * t95);
      out_9 = 0.1e1 / I__y * t23 * t104 * (4 * F__z * I__y * E * t9 + I__y * t85 * t2 * G + 12 * M__x * I__y * E + F__z * t9 * t88) * t2 * t37 * t8 / 48;
      out_10 = t104 * (4 * t2 * M__x + t4 * t85) * t2 * l / 4;
      out_11 = l * M__y / (4 * t95 + t100 + t88);
      out_12 = t34 * (t46 - t71 + t55 + t57 - t60) * t8 * l / 6;
      out_18 = -0.3e1 / 0.4e1 * t37 * t2 * (F__x + F__y) * t65 * t8 * t23;

      % Store outputs
      out_d = sparse(18, 1);
      out_d(6) = out_6;
      out_d(7) = out_7;
      out_d(8) = out_8;
      out_d(9) = out_9;
      out_d(10) = out_10;
      out_d(11) = out_11;
      out_d(12) = out_12;
      out_d(18) = out_18;
    end % d
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_d_f = d_f( this, ~, ~ )
      % Evaluate the deformation vector d_f.

      % Extract properties
      E = this.m_data.E;
      G = this.m_data.G;
      A = this.m_data.A;
      I__y = this.m_data.I__y;
      I__z = this.m_data.I__z;
      l = this.m_data.l;
      F__x = this.m_data.F__x;
      F__y = this.m_data.F__y;
      F__z = this.m_data.F__z;
      M__x = this.m_data.M__x;
      M__y = this.m_data.M__y;
      M__z = this.m_data.M__z;

      % Extract inputs
      % No inputs

      % Evaluate function
      t1 = A * M__z;
      t2 = abs(l);
      t3 = t2 ^ 2;
      t4 = l ^ 2;
      t7 = F__x * I__z;
      t8 = sqrt(2);
      t9 = t8 * t2;
      t10 = t4 * t9;
      t13 = F__y * I__z;
      t16 = M__z * I__z;
      t23 = 0.1e1 / E;
      t25 = t4 * t3 * A;
      t27 = 12 * t3 * I__z;
      t28 = t4 * I__z;
      t32 = 0.1e1 / (t25 + t27 - 12 * t28) * t23;
      t34 = 0.1e1 / I__z * t32;
      out_1 = -t34 * (t4 * t3 * t1 - 3 * t10 * t13 + 3 * t10 * t7 + 12 * t3 * t16 - 18 * t4 * t16) * l / 6;
      t37 = t4 * l;
      t38 = t2 * t37;
      t40 = t3 * t2;
      t41 = t4 * t40;
      t44 = t8 * t3;
      t46 = t4 * t44 * t1;
      t51 = I__z * t2 * t4 * F__x;
      t54 = t4 * t2 * t13;
      t55 = 3 * t54;
      t57 = 12 * t44 * t16;
      t60 = 9 * t4 * t8 * t16;
      t65 = 0.1e1 / (t25 + t27 - 9 * t28);
      t66 = t65 * t32;
      out_2 = t66 * (2 * t41 * A * F__x + 24 * t40 * t7 - t46 - 21 * t51 - t55 - t57 + t60) * t38 / 2;
      t71 = 3 * t51;
      out_3 = t66 * (2 * t41 * A * F__y + 24 * t40 * t13 + t46 - 21 * t54 + t57 - t60 - t71) * t38 / 2;
      t85 = F__z * t8;
      t88 = G * I__z;
      t95 = E * I__y;
      t100 = G * I__y;
      t104 = 0.1e1 / (t3 * t100 + t3 * t88 + 4 * t3 * t95 - 3 * t4 * t95);
      out_4 = 0.1e1 / I__y * t23 * t104 * (4 * F__z * I__y * E * t9 + I__y * t85 * t2 * G + 12 * M__x * I__y * E + F__z * t9 * t88) * t2 * t37 * t8 / 48;
      out_5 = t104 * (4 * t2 * M__x + t4 * t85) * t2 * l / 4;
      out_6 = l * M__y / (4 * t95 + t100 + t88);
      out_7 = t34 * (t46 - t71 + t55 + t57 - t60) * t8 * l / 6;
      out_8 = -0.3e1 / 0.4e1 * t37 * t2 * (F__x + F__y) * t65 * t8 * t23;

      % Store outputs
      out_d_f = zeros(8, 1);
      out_d_f(1) = out_1;
      out_d_f(2) = out_2;
      out_d_f(3) = out_3;
      out_d_f(4) = out_4;
      out_d_f(5) = out_5;
      out_d_f(6) = out_6;
      out_d_f(7) = out_7;
      out_d_f(8) = out_8;
    end % d_f
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_d_s = d_s( ~, ~, ~ )
      % Evaluate the deformation vector d_s.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_d_s = sparse(10, 1);
    end % d_s
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_f = f( this, ~, ~ )
      % Evaluate the force vector f.

      % Extract properties
      E = this.m_data.E;
      G = this.m_data.G;
      A = this.m_data.A;
      I__y = this.m_data.I__y;
      I__z = this.m_data.I__z;
      l = this.m_data.l;
      F__x = this.m_data.F__x;
      F__y = this.m_data.F__y;
      F__z = this.m_data.F__z;
      M__x = this.m_data.M__x;
      M__y = this.m_data.M__y;
      M__z = this.m_data.M__z;

      % Extract inputs
      % No inputs

      % Evaluate function
      t1 = sqrt(2);
      t2 = abs(l);
      t3 = 0.1e1 / t2;
      t5 = A * M__z;
      t6 = t2 ^ 2;
      t7 = l ^ 2;
      t10 = F__x * I__z;
      t11 = t1 * t2;
      t12 = t7 * t11;
      t15 = F__y * I__z;
      t18 = M__z * I__z;
      t25 = t7 * t6 * A;
      t27 = 12 * t6 * I__z;
      t28 = t7 * I__z;
      t31 = 0.1e1 / (t25 + t27 - 12 * t28);
      t34 = t31 * (t7 * t6 * t5 + 3 * t12 * t10 - 3 * t12 * t15 + 12 * t6 * t18 - 18 * t7 * t18) * t3 * t1 / 2;
      t35 = t7 * A;
      t36 = 12 * I__z;
      t38 = t2 * (t35 + t36);
      t40 = t6 * t2;
      t41 = t40 * t7;
      t44 = t1 * t6;
      t46 = t7 * t44 * t5;
      t51 = I__z * t2 * t7 * F__x;
      t54 = t7 * t2 * t15;
      t55 = 3 * t54;
      t57 = 12 * t44 * t18;
      t60 = 9 * t7 * t1 * t18;
      t65 = 0.1e1 / (t25 + t27 - 9 * t28);
      t66 = t65 * t31 * (2 * t41 * A * F__x + 24 * t40 * t10 - t46 - 21 * t51 - t55 - t57 + t60);
      t68 = t66 * t38 / 4;
      t70 = t2 * (t35 - t36);
      t74 = 3 * t51;
      t80 = t65 * t31 * (2 * t41 * A * F__y + 24 * t40 * t15 + t46 - 21 * t54 + t57 - t60 - t74);
      t82 = t80 * t70 / 4;
      t85 = t31 * (t46 - t74 + t55 + t57 - t60) * t3;
      out_1 = t34 - t68 - t82 - t85;
      t87 = t66 * t70 / 4;
      t89 = t80 * t38 / 4;
      out_2 = -t34 - t87 - t89 + t85;
      t95 = F__z * t1;
      t98 = G * I__z;
      t104 = 4 * F__z * I__y * E * t11 + I__y * t95 * t2 * G + 12 * M__x * I__y * E + F__z * t11 * t98;
      t105 = E * I__y;
      t110 = G * I__y;
      t114 = 0.1e1 / (4 * t6 * t105 - 3 * t7 * t105 + t6 * t110 + t6 * t98);
      t117 = t114 * t104 * t11 / 4;
      t118 = E * t1;
      t122 = 4 * t2 * M__x + t7 * t95;
      t126 = 0.3e1 / 0.4e1 * t114 * t122 * I__y * t118;
      t130 = 0.1e1 / (4 * t105 + t110 + t98);
      t134 = 3 * M__y * t130 * t3 * I__y * t118;
      out_3 = -t117 + t126 - t134;
      t137 = t114 * t104 * t7 / 8;
      t138 = 2 * E;
      t141 = I__y * (t138 - G) - t98;
      t143 = t114 * t122;
      t145 = t143 * t2 * t141 / 8;
      t146 = -t138 - G;
      t148 = I__y * t146 - t98;
      out_4 = -t137 + t145 + M__y * t130 * t148 / 2;
      t157 = M__y * t130 * t141 / 2;
      out_5 = t137 + t143 * t2 * t148 / 8 + t157;
      out_7 = F__x;
      out_8 = F__y;
      out_9 = F__z;
      out_10 = M__x;
      out_11 = M__y;
      out_12 = M__z;
      t161 = 0.9e1 / 0.2e1 * (F__x + F__y) * t65 * t28;
      out_13 = -t68 + t82 + t161;
      out_14 = t87 - t89 + t161;
      out_15 = -t117 + t126 + t134;
      t164 = -I__y * t146 + t98;
      out_16 = -t137 + t145 + M__y * t130 * t164 / 2;
      out_17 = -t137 + t143 * t2 * t164 / 8 + t157;

      % Store outputs
      out_f = zeros(18, 1);
      out_f(1) = out_1;
      out_f(2) = out_2;
      out_f(3) = out_3;
      out_f(4) = out_4;
      out_f(5) = out_5;
      out_f(7) = out_7;
      out_f(8) = out_8;
      out_f(9) = out_9;
      out_f(10) = out_10;
      out_f(11) = out_11;
      out_f(12) = out_12;
      out_f(13) = out_13;
      out_f(14) = out_14;
      out_f(15) = out_15;
      out_f(16) = out_16;
      out_f(17) = out_17;
    end % f
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_f_f = f_f( this, ~, ~ )
      % Evaluate the force vector f_f.

      % Extract properties
      F__x = this.m_data.F__x;
      F__y = this.m_data.F__y;
      F__z = this.m_data.F__z;
      M__x = this.m_data.M__x;
      M__y = this.m_data.M__y;
      M__z = this.m_data.M__z;

      % Extract inputs
      % No inputs

      % Evaluate function
      out_2 = F__x;
      out_3 = F__y;
      out_4 = F__z;
      out_5 = M__x;
      out_6 = M__y;
      out_7 = M__z;

      % Store outputs
      out_f_f = zeros(8, 1);
      out_f_f(2) = out_2;
      out_f_f(3) = out_3;
      out_f_f(4) = out_4;
      out_f_f(5) = out_5;
      out_f_f(6) = out_6;
      out_f_f(7) = out_7;
    end % f_f
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_f_s = f_s( this, ~, ~ )
      % Evaluate the force vector f_s.

      % Extract properties
      E = this.m_data.E;
      G = this.m_data.G;
      A = this.m_data.A;
      I__y = this.m_data.I__y;
      I__z = this.m_data.I__z;
      l = this.m_data.l;
      F__x = this.m_data.F__x;
      F__y = this.m_data.F__y;
      F__z = this.m_data.F__z;
      M__x = this.m_data.M__x;
      M__y = this.m_data.M__y;
      M__z = this.m_data.M__z;

      % Extract inputs
      % No inputs

      % Evaluate function
      t1 = sqrt(2);
      t2 = abs(l);
      t3 = 0.1e1 / t2;
      t5 = A * M__z;
      t6 = t2 ^ 2;
      t7 = l ^ 2;
      t10 = F__x * I__z;
      t11 = t1 * t2;
      t12 = t7 * t11;
      t15 = F__y * I__z;
      t18 = M__z * I__z;
      t25 = t7 * t6 * A;
      t27 = 12 * t6 * I__z;
      t28 = t7 * I__z;
      t31 = 0.1e1 / (t25 + t27 - 12 * t28);
      t34 = t31 * (t7 * t6 * t5 + 3 * t12 * t10 - 3 * t12 * t15 + 12 * t6 * t18 - 18 * t7 * t18) * t3 * t1 / 2;
      t35 = t7 * A;
      t36 = 12 * I__z;
      t38 = t2 * (t35 + t36);
      t40 = t6 * t2;
      t41 = t40 * t7;
      t44 = t1 * t6;
      t46 = t7 * t44 * t5;
      t51 = I__z * t2 * t7 * F__x;
      t54 = t7 * t2 * t15;
      t55 = 3 * t54;
      t57 = 12 * t44 * t18;
      t60 = 9 * t7 * t1 * t18;
      t65 = 0.1e1 / (t25 + t27 - 9 * t28);
      t66 = t65 * t31 * (2 * t41 * A * F__x + 24 * t40 * t10 - t46 - 21 * t51 - t55 - t57 + t60);
      t68 = t66 * t38 / 4;
      t70 = t2 * (t35 - t36);
      t74 = 3 * t51;
      t80 = t65 * t31 * (2 * t41 * A * F__y + 24 * t40 * t15 + t46 - 21 * t54 + t57 - t60 - t74);
      t82 = t80 * t70 / 4;
      t85 = t31 * (t46 - t74 + t55 + t57 - t60) * t3;
      out_1 = t34 - t68 - t82 - t85;
      t87 = t66 * t70 / 4;
      t89 = t80 * t38 / 4;
      out_2 = -t34 - t87 - t89 + t85;
      t95 = F__z * t1;
      t98 = G * I__z;
      t104 = 4 * F__z * I__y * E * t11 + I__y * t95 * t2 * G + 12 * M__x * I__y * E + F__z * t11 * t98;
      t105 = E * I__y;
      t110 = G * I__y;
      t114 = 0.1e1 / (4 * t6 * t105 - 3 * t7 * t105 + t6 * t110 + t6 * t98);
      t117 = t114 * t104 * t11 / 4;
      t118 = E * t1;
      t122 = 4 * t2 * M__x + t7 * t95;
      t126 = 0.3e1 / 0.4e1 * t114 * t122 * I__y * t118;
      t130 = 0.1e1 / (4 * t105 + t110 + t98);
      t134 = 3 * M__y * t130 * t3 * I__y * t118;
      out_3 = -t117 + t126 - t134;
      t137 = t114 * t104 * t7 / 8;
      t138 = 2 * E;
      t141 = I__y * (t138 - G) - t98;
      t143 = t114 * t122;
      t145 = t143 * t2 * t141 / 8;
      t146 = -t138 - G;
      t148 = I__y * t146 - t98;
      out_4 = -t137 + t145 + M__y * t130 * t148 / 2;
      t157 = M__y * t130 * t141 / 2;
      out_5 = t137 + t143 * t2 * t148 / 8 + t157;
      t161 = 0.9e1 / 0.2e1 * (F__x + F__y) * t65 * t28;
      out_6 = -t68 + t82 + t161;
      out_7 = t87 - t89 + t161;
      out_8 = -t117 + t126 + t134;
      t164 = -I__y * t146 + t98;
      out_9 = -t137 + t145 + M__y * t130 * t164 / 2;
      out_10 = -t137 + t143 * t2 * t164 / 8 + t157;

      % Store outputs
      out_f_s = zeros(10, 1);
      out_f_s(1) = out_1;
      out_f_s(2) = out_2;
      out_f_s(3) = out_3;
      out_f_s(4) = out_4;
      out_f_s(5) = out_5;
      out_f_s(6) = out_6;
      out_f_s(7) = out_7;
      out_f_s(8) = out_8;
      out_f_s(9) = out_9;
      out_f_s(10) = out_10;
    end % f_s
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_f_r = f_r( ~, ~, ~ )
      % Evaluate the force vector f_r.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_f_r = sparse(10, 1);
    end % f_r
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_perm = perm( ~ )
      % Evaluate the permutation vector.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_perm = zeros(18, 1);
      out_perm(1) = 6;
      out_perm(2) = 7;
      out_perm(3) = 8;
      out_perm(4) = 9;
      out_perm(5) = 10;
      out_perm(6) = 11;
      out_perm(7) = 12;
      out_perm(8) = 18;
      out_perm(9) = 1;
      out_perm(10) = 2;
      out_perm(11) = 3;
      out_perm(12) = 4;
      out_perm(13) = 5;
      out_perm(14) = 13;
      out_perm(15) = 14;
      out_perm(16) = 15;
      out_perm(17) = 16;
      out_perm(18) = 17;
    end % perm
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_unperm = unperm( ~ )
      % Evaluate the unpermutation vector.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_unperm = zeros(18, 1);
      out_unperm(1) = 9;
      out_unperm(2) = 10;
      out_unperm(3) = 11;
      out_unperm(4) = 12;
      out_unperm(5) = 13;
      out_unperm(6) = 1;
      out_unperm(7) = 2;
      out_unperm(8) = 3;
      out_unperm(9) = 4;
      out_unperm(10) = 5;
      out_unperm(11) = 6;
      out_unperm(12) = 7;
      out_unperm(13) = 14;
      out_unperm(14) = 15;
      out_unperm(15) = 16;
      out_unperm(16) = 17;
      out_unperm(17) = 18;
      out_unperm(18) = 8;
    end % unperm
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_v = v( ~, ~ )
      % Evaluate the veiling vector.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_v = zeros(0, 1);
    end % v
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
  end
end % Test_14

% That's All Folks!
