% +--------------------------------------------------------------------------+
% | 'TrussMe' module version 0.0 - BSD 3-Clause License - Copyright (c) 2023 |
% | Current version authors:                                                 |
% |   Davide Stocco and Matteo Larcher.                                      |
% +--------------------------------------------------------------------------+

% Matlab generated code for system: Test_13
% This file has been automatically generated by TrussMe.
% DISCLAIMER: If you need to edit it, do it wisely!

classdef Test_13 < TrussMe.System
  %
  % Test_13 class
  %
  methods
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function this = Test_13( varargin )
      % Class constructor.

      % User data
      if (nargin == 0)
        data = [];
      elseif (nargin == 1 && isstruct(varargin{1}))
        data = varargin{1};
      else
        error('wrong number of input arguments.');
      end

      % Call superclass constructor
      this = this@TrussMe.System(data);
    end % Test_13
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_K = K( ~, ~, ~ )
      % Evaluate the stiffness matrix K.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_K = sparse(18, 18);
      out_K(1, 1) = .2477511111;
      out_K(2, 1) = .8448000000e-1;
      out_K(6, 1) = .3333333332;
      out_K(7, 1) = -.7856742007e-1;
      out_K(8, 1) = .7856742007e-1;
      out_K(13, 1) = -.1366400000;
      out_K(14, 1) = -.8448000000e-1;
      out_K(18, 1) = .7200000000e-1;
      out_K(1, 2) = .8448000000e-1;
      out_K(2, 2) = .4206933333;
      out_K(7, 2) = -.2357022603;
      out_K(8, 2) = -.2357022603;
      out_K(13, 2) = -.8448000000e-1;
      out_K(14, 2) = -.8736000000e-1;
      out_K(18, 2) = -.9600000000e-1;
      out_K(3, 3) = .5404444444;
      out_K(4, 3) = -.8106666666;
      out_K(5, 3) = .1920000000;
      out_K(9, 3) = -.4444444444;
      out_K(10, 3) = -.4714045206;
      out_K(11, 3) = .4714045206;
      out_K(15, 3) = -.9600000000e-1;
      out_K(16, 3) = -.1440000000;
      out_K(17, 3) = .1920000000;
      out_K(3, 4) = -.8106666666;
      out_K(4, 4) = 1.749333333;
      out_K(5, 4) = -.2880000000;
      out_K(9, 4) = .6666666666;
      out_K(10, 4) = .4714045206;
      out_K(11, 4) = -.4714045206;
      out_K(15, 4) = .1440000000;
      out_K(16, 4) = .1600000000e-1;
      out_K(17, 4) = -.2880000000;
      out_K(3, 5) = .1920000000;
      out_K(4, 5) = -.2880000000;
      out_K(5, 5) = .9173333333;
      out_K(10, 5) = -.2357022603;
      out_K(11, 5) = -.2357022603;
      out_K(15, 5) = -.1920000000;
      out_K(16, 5) = -.2880000000;
      out_K(17, 5) = .1840000000;
      out_K(1, 6) = .3333333332;
      out_K(6, 6) = .9999999996;
      out_K(7, 6) = -.2357022603;
      out_K(8, 6) = .2357022603;
      out_K(1, 7) = -.7856742007e-1;
      out_K(2, 7) = -.2357022603;
      out_K(6, 7) = -.2357022603;
      out_K(7, 7) = .3706597222;
      out_K(8, 7) = .9548611125e-2;
      out_K(12, 7) = -.1325825214;
      out_K(13, 7) = -.1767766953;
      out_K(14, 7) = -.3314563036e-1;
      out_K(1, 8) = .7856742007e-1;
      out_K(2, 8) = -.2357022603;
      out_K(6, 8) = .2357022603;
      out_K(7, 8) = .9548611125e-2;
      out_K(8, 8) = .3706597222;
      out_K(12, 8) = -.1325825214;
      out_K(13, 8) = .1767766953;
      out_K(14, 8) = -.3314563036e-1;
      out_K(3, 9) = -.4444444444;
      out_K(4, 9) = .6666666666;
      out_K(9, 9) = .6319444444;
      out_K(10, 9) = .7365695635;
      out_K(11, 9) = -.2062394777;
      out_K(15, 9) = -.1875000000;
      out_K(17, 9) = .3750000000;
      out_K(3, 10) = -.4714045206;
      out_K(4, 10) = .4714045206;
      out_K(5, 10) = -.2357022603;
      out_K(9, 10) = .7365695635;
      out_K(10, 10) = 1.458333333;
      out_K(11, 10) = -.1249999998;
      out_K(15, 10) = -.2651650429;
      out_K(16, 10) = -.1767766953;
      out_K(17, 10) = .3535533905;
      out_K(3, 11) = .4714045206;
      out_K(4, 11) = -.4714045206;
      out_K(5, 11) = -.2357022603;
      out_K(9, 11) = -.2062394777;
      out_K(10, 11) = -.1249999998;
      out_K(11, 11) = 1.458333333;
      out_K(15, 11) = -.2651650429;
      out_K(16, 11) = .1767766953;
      out_K(17, 11) = .3535533905;
      out_K(7, 12) = -.1325825214;
      out_K(8, 12) = -.1325825214;
      out_K(12, 12) = .7500000000;
      out_K(14, 12) = .1875000000;
      out_K(1, 13) = -.1366400000;
      out_K(2, 13) = -.8448000000e-1;
      out_K(7, 13) = -.1767766953;
      out_K(8, 13) = .1767766953;
      out_K(13, 13) = .3866400000;
      out_K(14, 13) = .8448000000e-1;
      out_K(18, 13) = -.7200000000e-1;
      out_K(1, 14) = -.8448000000e-1;
      out_K(2, 14) = -.8736000000e-1;
      out_K(7, 14) = -.3314563036e-1;
      out_K(8, 14) = -.3314563036e-1;
      out_K(12, 14) = .1875000000;
      out_K(13, 14) = .8448000000e-1;
      out_K(14, 14) = .1342350000;
      out_K(18, 14) = .9600000000e-1;
      out_K(3, 15) = -.9600000000e-1;
      out_K(4, 15) = .1440000000;
      out_K(5, 15) = -.1920000000;
      out_K(9, 15) = -.1875000000;
      out_K(10, 15) = -.2651650429;
      out_K(11, 15) = -.2651650429;
      out_K(15, 15) = .2835000000;
      out_K(16, 15) = .1440000000;
      out_K(17, 15) = -.5670000000;
      out_K(3, 16) = -.1440000000;
      out_K(4, 16) = .1600000000e-1;
      out_K(5, 16) = -.2880000000;
      out_K(10, 16) = -.1767766953;
      out_K(11, 16) = .1767766953;
      out_K(15, 16) = .1440000000;
      out_K(16, 16) = .6660000000;
      out_K(17, 16) = -.2880000000;
      out_K(3, 17) = .1920000000;
      out_K(4, 17) = -.2880000000;
      out_K(5, 17) = .1840000000;
      out_K(9, 17) = .3750000000;
      out_K(10, 17) = .3535533905;
      out_K(11, 17) = .3535533905;
      out_K(15, 17) = -.5670000000;
      out_K(16, 17) = -.2880000000;
      out_K(17, 17) = 1.584000000;
      out_K(1, 18) = .7200000000e-1;
      out_K(2, 18) = -.9600000000e-1;
      out_K(13, 18) = -.7200000000e-1;
      out_K(14, 18) = .9600000000e-1;
      out_K(18, 18) = .6000000000;
    end % K
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_K_ff = K_ff( ~, ~, ~ )
      % Evaluate the stiffness matrix K_ff.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_K_ff = sparse(11, 11);
      out_K_ff(1, 1) = .2477511111;
      out_K_ff(2, 1) = .8448000000e-1;
      out_K_ff(6, 1) = .3333333332;
      out_K_ff(7, 1) = -.7856742007e-1;
      out_K_ff(11, 1) = .7200000000e-1;
      out_K_ff(1, 2) = .8448000000e-1;
      out_K_ff(2, 2) = .4206933333;
      out_K_ff(7, 2) = -.2357022603;
      out_K_ff(11, 2) = -.9600000000e-1;
      out_K_ff(3, 3) = .5404444444;
      out_K_ff(4, 3) = -.8106666666;
      out_K_ff(5, 3) = .1920000000;
      out_K_ff(8, 3) = -.4714045206;
      out_K_ff(9, 3) = .4714045206;
      out_K_ff(3, 4) = -.8106666666;
      out_K_ff(4, 4) = 1.749333333;
      out_K_ff(5, 4) = -.2880000000;
      out_K_ff(8, 4) = .4714045206;
      out_K_ff(9, 4) = -.4714045206;
      out_K_ff(3, 5) = .1920000000;
      out_K_ff(4, 5) = -.2880000000;
      out_K_ff(5, 5) = .9173333333;
      out_K_ff(8, 5) = -.2357022603;
      out_K_ff(9, 5) = -.2357022603;
      out_K_ff(1, 6) = .3333333332;
      out_K_ff(6, 6) = .9999999996;
      out_K_ff(7, 6) = -.2357022603;
      out_K_ff(1, 7) = -.7856742007e-1;
      out_K_ff(2, 7) = -.2357022603;
      out_K_ff(6, 7) = -.2357022603;
      out_K_ff(7, 7) = .3706597222;
      out_K_ff(10, 7) = -.1325825214;
      out_K_ff(3, 8) = -.4714045206;
      out_K_ff(4, 8) = .4714045206;
      out_K_ff(5, 8) = -.2357022603;
      out_K_ff(8, 8) = 1.458333333;
      out_K_ff(9, 8) = -.1249999998;
      out_K_ff(3, 9) = .4714045206;
      out_K_ff(4, 9) = -.4714045206;
      out_K_ff(5, 9) = -.2357022603;
      out_K_ff(8, 9) = -.1249999998;
      out_K_ff(9, 9) = 1.458333333;
      out_K_ff(7, 10) = -.1325825214;
      out_K_ff(10, 10) = .7500000000;
      out_K_ff(1, 11) = .7200000000e-1;
      out_K_ff(2, 11) = -.9600000000e-1;
      out_K_ff(11, 11) = .6000000000;
    end % K_ff
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_K_fs = K_fs( ~, ~, ~ )
      % Evaluate the stiffness matrix K_fs.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_K_fs = sparse(11, 7);
      out_K_fs(1, 1) = .7856742007e-1;
      out_K_fs(2, 1) = -.2357022603;
      out_K_fs(6, 1) = .2357022603;
      out_K_fs(7, 1) = .9548611125e-2;
      out_K_fs(10, 1) = -.1325825214;
      out_K_fs(3, 2) = -.4444444444;
      out_K_fs(4, 2) = .6666666666;
      out_K_fs(8, 2) = .7365695635;
      out_K_fs(9, 2) = -.2062394777;
      out_K_fs(1, 3) = -.1366400000;
      out_K_fs(2, 3) = -.8448000000e-1;
      out_K_fs(7, 3) = -.1767766953;
      out_K_fs(11, 3) = -.7200000000e-1;
      out_K_fs(1, 4) = -.8448000000e-1;
      out_K_fs(2, 4) = -.8736000000e-1;
      out_K_fs(7, 4) = -.3314563036e-1;
      out_K_fs(10, 4) = .1875000000;
      out_K_fs(11, 4) = .9600000000e-1;
      out_K_fs(3, 5) = -.9600000000e-1;
      out_K_fs(4, 5) = .1440000000;
      out_K_fs(5, 5) = -.1920000000;
      out_K_fs(8, 5) = -.2651650429;
      out_K_fs(9, 5) = -.2651650429;
      out_K_fs(3, 6) = -.1440000000;
      out_K_fs(4, 6) = .1600000000e-1;
      out_K_fs(5, 6) = -.2880000000;
      out_K_fs(8, 6) = -.1767766953;
      out_K_fs(9, 6) = .1767766953;
      out_K_fs(3, 7) = .1920000000;
      out_K_fs(4, 7) = -.2880000000;
      out_K_fs(5, 7) = .1840000000;
      out_K_fs(8, 7) = .3535533905;
      out_K_fs(9, 7) = .3535533905;
    end % K_fs
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_K_sf = K_sf( ~, ~, ~ )
      % Evaluate the stiffness matrix K_sf.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_K_sf = sparse(7, 11);
      out_K_sf(1, 1) = .7856742007e-1;
      out_K_sf(3, 1) = -.1366400000;
      out_K_sf(4, 1) = -.8448000000e-1;
      out_K_sf(1, 2) = -.2357022603;
      out_K_sf(3, 2) = -.8448000000e-1;
      out_K_sf(4, 2) = -.8736000000e-1;
      out_K_sf(2, 3) = -.4444444444;
      out_K_sf(5, 3) = -.9600000000e-1;
      out_K_sf(6, 3) = -.1440000000;
      out_K_sf(7, 3) = .1920000000;
      out_K_sf(2, 4) = .6666666666;
      out_K_sf(5, 4) = .1440000000;
      out_K_sf(6, 4) = .1600000000e-1;
      out_K_sf(7, 4) = -.2880000000;
      out_K_sf(5, 5) = -.1920000000;
      out_K_sf(6, 5) = -.2880000000;
      out_K_sf(7, 5) = .1840000000;
      out_K_sf(1, 6) = .2357022603;
      out_K_sf(1, 7) = .9548611125e-2;
      out_K_sf(3, 7) = -.1767766953;
      out_K_sf(4, 7) = -.3314563036e-1;
      out_K_sf(2, 8) = .7365695635;
      out_K_sf(5, 8) = -.2651650429;
      out_K_sf(6, 8) = -.1767766953;
      out_K_sf(7, 8) = .3535533905;
      out_K_sf(2, 9) = -.2062394777;
      out_K_sf(5, 9) = -.2651650429;
      out_K_sf(6, 9) = .1767766953;
      out_K_sf(7, 9) = .3535533905;
      out_K_sf(1, 10) = -.1325825214;
      out_K_sf(4, 10) = .1875000000;
      out_K_sf(3, 11) = -.7200000000e-1;
      out_K_sf(4, 11) = .9600000000e-1;
    end % K_sf
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_K_ss = K_ss( ~, ~, ~ )
      % Evaluate the stiffness matrix K_ss.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_K_ss = sparse(7, 7);
      out_K_ss(1, 1) = .3706597222;
      out_K_ss(3, 1) = .1767766953;
      out_K_ss(4, 1) = -.3314563036e-1;
      out_K_ss(2, 2) = .6319444444;
      out_K_ss(5, 2) = -.1875000000;
      out_K_ss(7, 2) = .3750000000;
      out_K_ss(1, 3) = .1767766953;
      out_K_ss(3, 3) = .3866400000;
      out_K_ss(4, 3) = .8448000000e-1;
      out_K_ss(1, 4) = -.3314563036e-1;
      out_K_ss(3, 4) = .8448000000e-1;
      out_K_ss(4, 4) = .1342350000;
      out_K_ss(2, 5) = -.1875000000;
      out_K_ss(5, 5) = .2835000000;
      out_K_ss(6, 5) = .1440000000;
      out_K_ss(7, 5) = -.5670000000;
      out_K_ss(5, 6) = .1440000000;
      out_K_ss(6, 6) = .6660000000;
      out_K_ss(7, 6) = -.2880000000;
      out_K_ss(2, 7) = .3750000000;
      out_K_ss(5, 7) = -.5670000000;
      out_K_ss(6, 7) = -.2880000000;
      out_K_ss(7, 7) = 1.584000000;
    end % K_ss
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_d = d( ~, ~, ~ )
      % Evaluate the deformation vector d.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_d = sparse(18, 1);
      out_d(1) = 352499.99983743;
      out_d(2) = -157499.999865861;
      out_d(6) = -147499.999913796;
      out_d(7) = -127279.22047842;
      out_d(12) = -22499.9999638072;
      out_d(18) = -67499.9999590293;
    end % d
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_d_f = d_f( ~, ~, ~ )
      % Evaluate the deformation vector d_f.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_d_f = zeros(11, 1);
      out_d_f(1) = 352499.99983743;
      out_d_f(2) = -157499.999865861;
      out_d_f(6) = -147499.999913796;
      out_d_f(7) = -127279.22047842;
      out_d_f(10) = -22499.9999638072;
      out_d_f(11) = -67499.9999590293;
    end % d_f
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_d_s = d_s( ~, ~, ~ )
      % Evaluate the deformation vector d_s.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_d_s = sparse(7, 1);
    end % d_s
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_f = f( ~, ~, ~ )
      % Evaluate the force vector f.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_f = sparse(18, 1);
      out_f(1) = 30000;
      out_f(8) = 31819.8050996638;
      out_f(13) = -7500.00001553323;
      out_f(14) = -22499.9999927785;
    end % f
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_f_f = f_f( ~, ~, ~ )
      % Evaluate the force vector f_f.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_f_f = sparse(11, 1);
      out_f_f(1) = 30000;
    end % f_f
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_f_s = f_s( ~, ~, ~ )
      % Evaluate the force vector f_s.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_f_s = sparse(7, 1);
      out_f_s(1) = 31819.8050996638;
      out_f_s(3) = -7500.00001553323;
      out_f_s(4) = -22499.9999927785;
    end % f_s
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_f_r = f_r( ~, ~, ~ )
      % Evaluate the force vector f_r.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_f_r = sparse(7, 1);
    end % f_r
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_perm = perm( ~ )
      % Evaluate the permutation vector.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_perm = zeros(18, 1);
      out_perm(1) = 1;
      out_perm(2) = 2;
      out_perm(3) = 3;
      out_perm(4) = 4;
      out_perm(5) = 5;
      out_perm(6) = 6;
      out_perm(7) = 7;
      out_perm(8) = 10;
      out_perm(9) = 11;
      out_perm(10) = 12;
      out_perm(11) = 18;
      out_perm(12) = 8;
      out_perm(13) = 9;
      out_perm(14) = 13;
      out_perm(15) = 14;
      out_perm(16) = 15;
      out_perm(17) = 16;
      out_perm(18) = 17;
    end % perm
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_unperm = unperm( ~ )
      % Evaluate the unpermutation vector.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_unperm = zeros(18, 1);
      out_unperm(1) = 1;
      out_unperm(2) = 2;
      out_unperm(3) = 3;
      out_unperm(4) = 4;
      out_unperm(5) = 5;
      out_unperm(6) = 6;
      out_unperm(7) = 7;
      out_unperm(8) = 12;
      out_unperm(9) = 13;
      out_unperm(10) = 8;
      out_unperm(11) = 9;
      out_unperm(12) = 10;
      out_unperm(13) = 14;
      out_unperm(14) = 15;
      out_unperm(15) = 16;
      out_unperm(16) = 17;
      out_unperm(17) = 18;
      out_unperm(18) = 11;
    end % unperm
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_v = v( ~, ~ )
      % Evaluate the veiling vector.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_v = zeros(0, 1);
    end % v
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
  end
end % Test_13

% That's All Folks!
