% +--------------------------------------------------------------------------+
% | 'TrussMe' module version 0.0 - BSD 3-Clause License - Copyright (c) 2023 |
% | Current version authors:                                                 |
% |   Davide Stocco and Matteo Larcher.                                      |
% +--------------------------------------------------------------------------+

% Matlab generated code for system: Test_00
% This file has been automatically generated by TrussMe.
% DISCLAIMER: If you need to edit it, do it wisely!

classdef Test_00 < TrussMe.System
  %
  % Test_00 class
  %
  methods
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function this = Test_00( varargin )
      % Class constructor.

      % User data
      if (nargin == 0)
        data = [];
      elseif (nargin == 1 && isstruct(varargin{1}))
        data = varargin{1};
      else
        error('wrong number of input arguments.');
      end

      % Call superclass constructor
      this = this@TrussMe.System(data);
    end % Test_00
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_K = K( ~, ~, ~ )
      % Evaluate the stiffness matrix K.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_K = sparse(30, 30);
      out_K(1, 1) = 666666.6667;
      out_K(7, 1) = -666666.6667;
      out_K(2, 2) = 500000.;
      out_K(14, 2) = -500000.;
      out_K(4, 4) = .6666666667e11;
      out_K(10, 4) = -.6666666667e11;
      out_K(5, 5) = .5000000000e11;
      out_K(17, 5) = -.5000000000e11;
      out_K(1, 7) = -666666.6667;
      out_K(7, 7) = 954666.6667;
      out_K(13, 7) = -144000.;
      out_K(14, 7) = -192000.;
      out_K(25, 7) = -144000.;
      out_K(26, 7) = 192000.;
      out_K(8, 8) = 1012000.;
      out_K(13, 8) = -192000.;
      out_K(14, 8) = -256000.;
      out_K(20, 8) = -500000.;
      out_K(25, 8) = 192000.;
      out_K(26, 8) = -256000.;
      out_K(4, 10) = -.6666666667e11;
      out_K(10, 10) = .9546666667e11;
      out_K(16, 10) = -.1440000000e11;
      out_K(17, 10) = -.1920000000e11;
      out_K(28, 10) = -.1440000000e11;
      out_K(29, 10) = .1920000000e11;
      out_K(11, 11) = .1012000000e12;
      out_K(16, 11) = -.1920000000e11;
      out_K(17, 11) = -.2560000000e11;
      out_K(23, 11) = -.5000000000e11;
      out_K(28, 11) = .1920000000e11;
      out_K(29, 11) = -.2560000000e11;
      out_K(7, 13) = -144000.;
      out_K(8, 13) = -192000.;
      out_K(13, 13) = 810666.6667;
      out_K(14, 13) = 192000.;
      out_K(19, 13) = -666666.6667;
      out_K(2, 14) = -500000.;
      out_K(7, 14) = -192000.;
      out_K(8, 14) = -256000.;
      out_K(13, 14) = 192000.;
      out_K(14, 14) = 756000.;
      out_K(10, 16) = -.1440000000e11;
      out_K(11, 16) = -.1920000000e11;
      out_K(16, 16) = .8106666667e11;
      out_K(17, 16) = .1920000000e11;
      out_K(22, 16) = -.6666666667e11;
      out_K(5, 17) = -.5000000000e11;
      out_K(10, 17) = -.1920000000e11;
      out_K(11, 17) = -.2560000000e11;
      out_K(16, 17) = .1920000000e11;
      out_K(17, 17) = .7560000000e11;
      out_K(13, 19) = -666666.6667;
      out_K(19, 19) = 1333333.333;
      out_K(25, 19) = -666666.6667;
      out_K(8, 20) = -500000.;
      out_K(20, 20) = 500000.;
      out_K(16, 22) = -.6666666667e11;
      out_K(22, 22) = .1333333333e12;
      out_K(28, 22) = -.6666666667e11;
      out_K(11, 23) = -.5000000000e11;
      out_K(23, 23) = .5000000000e11;
      out_K(7, 25) = -144000.;
      out_K(8, 25) = 192000.;
      out_K(19, 25) = -666666.6667;
      out_K(25, 25) = 810666.6667;
      out_K(26, 25) = -192000.;
      out_K(7, 26) = 192000.;
      out_K(8, 26) = -256000.;
      out_K(25, 26) = -192000.;
      out_K(26, 26) = 256000.;
      out_K(10, 28) = -.1440000000e11;
      out_K(11, 28) = .1920000000e11;
      out_K(22, 28) = -.6666666667e11;
      out_K(28, 28) = .8106666667e11;
      out_K(29, 28) = -.1920000000e11;
      out_K(10, 29) = .1920000000e11;
      out_K(11, 29) = -.2560000000e11;
      out_K(28, 29) = -.1920000000e11;
      out_K(29, 29) = .2560000000e11;
    end % K
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_K_ff = K_ff( ~, ~, ~ )
      % Evaluate the stiffness matrix K_ff.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_K_ff = sparse(9, 9);
      out_K_ff(1, 1) = 954666.6667;
      out_K_ff(5, 1) = -192000.;
      out_K_ff(2, 2) = 1012000.;
      out_K_ff(5, 2) = -256000.;
      out_K_ff(7, 2) = -500000.;
      out_K_ff(3, 3) = .9546666667e11;
      out_K_ff(4, 4) = .1012000000e12;
      out_K_ff(9, 4) = -.5000000000e11;
      out_K_ff(1, 5) = -192000.;
      out_K_ff(2, 5) = -256000.;
      out_K_ff(5, 5) = 756000.;
      out_K_ff(6, 6) = 1333333.333;
      out_K_ff(2, 7) = -500000.;
      out_K_ff(7, 7) = 500000.;
      out_K_ff(8, 8) = .1333333333e12;
      out_K_ff(4, 9) = -.5000000000e11;
      out_K_ff(9, 9) = .5000000000e11;
    end % K_ff
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_K_fs = K_fs( ~, ~, ~ )
      % Evaluate the stiffness matrix K_fs.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_K_fs = sparse(9, 21);
      out_K_fs(1, 1) = -666666.6667;
      out_K_fs(5, 2) = -500000.;
      out_K_fs(3, 4) = -.6666666667e11;
      out_K_fs(1, 9) = -144000.;
      out_K_fs(2, 9) = -192000.;
      out_K_fs(5, 9) = 192000.;
      out_K_fs(6, 9) = -666666.6667;
      out_K_fs(3, 11) = -.1440000000e11;
      out_K_fs(4, 11) = -.1920000000e11;
      out_K_fs(8, 11) = -.6666666667e11;
      out_K_fs(3, 12) = -.1920000000e11;
      out_K_fs(4, 12) = -.2560000000e11;
      out_K_fs(1, 16) = -144000.;
      out_K_fs(2, 16) = 192000.;
      out_K_fs(6, 16) = -666666.6667;
      out_K_fs(1, 17) = 192000.;
      out_K_fs(2, 17) = -256000.;
      out_K_fs(3, 19) = -.1440000000e11;
      out_K_fs(4, 19) = .1920000000e11;
      out_K_fs(8, 19) = -.6666666667e11;
      out_K_fs(3, 20) = .1920000000e11;
      out_K_fs(4, 20) = -.2560000000e11;
    end % K_fs
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_K_sf = K_sf( ~, ~, ~ )
      % Evaluate the stiffness matrix K_sf.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_K_sf = sparse(21, 9);
      out_K_sf(1, 1) = -666666.6667;
      out_K_sf(9, 1) = -144000.;
      out_K_sf(16, 1) = -144000.;
      out_K_sf(17, 1) = 192000.;
      out_K_sf(9, 2) = -192000.;
      out_K_sf(16, 2) = 192000.;
      out_K_sf(17, 2) = -256000.;
      out_K_sf(4, 3) = -.6666666667e11;
      out_K_sf(11, 3) = -.1440000000e11;
      out_K_sf(12, 3) = -.1920000000e11;
      out_K_sf(19, 3) = -.1440000000e11;
      out_K_sf(20, 3) = .1920000000e11;
      out_K_sf(11, 4) = -.1920000000e11;
      out_K_sf(12, 4) = -.2560000000e11;
      out_K_sf(19, 4) = .1920000000e11;
      out_K_sf(20, 4) = -.2560000000e11;
      out_K_sf(2, 5) = -500000.;
      out_K_sf(9, 5) = 192000.;
      out_K_sf(9, 6) = -666666.6667;
      out_K_sf(16, 6) = -666666.6667;
      out_K_sf(11, 8) = -.6666666667e11;
      out_K_sf(19, 8) = -.6666666667e11;
    end % K_sf
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_K_ss = K_ss( ~, ~, ~ )
      % Evaluate the stiffness matrix K_ss.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_K_ss = sparse(21, 21);
      out_K_ss(1, 1) = 666666.6667;
      out_K_ss(2, 2) = 500000.;
      out_K_ss(4, 4) = .6666666667e11;
      out_K_ss(5, 5) = .5000000000e11;
      out_K_ss(12, 5) = -.5000000000e11;
      out_K_ss(9, 9) = 810666.6667;
      out_K_ss(11, 11) = .8106666667e11;
      out_K_ss(12, 11) = .1920000000e11;
      out_K_ss(5, 12) = -.5000000000e11;
      out_K_ss(11, 12) = .1920000000e11;
      out_K_ss(12, 12) = .7560000000e11;
      out_K_ss(16, 16) = 810666.6667;
      out_K_ss(17, 16) = -192000.;
      out_K_ss(16, 17) = -192000.;
      out_K_ss(17, 17) = 256000.;
      out_K_ss(19, 19) = .8106666667e11;
      out_K_ss(20, 19) = -.1920000000e11;
      out_K_ss(19, 20) = -.1920000000e11;
      out_K_ss(20, 20) = .2560000000e11;
    end % K_ss
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_d = d( ~, ~, ~ )
      % Evaluate the deformation vector d.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_d = sparse(30, 1);
      out_d(7) = .00945497630296578;
      out_d(8) = -.0220667950237504;
      out_d(14) = -.00507109004750091;
      out_d(20) = -.0420667950237504;
    end % d
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_d_f = d_f( ~, ~, ~ )
      % Evaluate the deformation vector d_f.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_d_f = sparse(9, 1);
      out_d_f(1) = .00945497630296578;
      out_d_f(2) = -.0220667950237504;
      out_d_f(5) = -.00507109004750091;
      out_d_f(7) = -.0420667950237504;
    end % d_f
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_d_s = d_s( ~, ~, ~ )
      % Evaluate the deformation vector d_s.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_d_s = sparse(21, 1);
    end % d_s
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_f = f( ~, ~, ~ )
      % Evaluate the force vector f.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_f = sparse(30, 1);
      out_f(1) = -6303.31753562568;
      out_f(2) = 2535.54502375045;
      out_f(7) = 10000;
      out_f(13) = 1901.65876781284;
      out_f(20) = -10000;
      out_f(25) = -5598.34123218716;
      out_f(26) = 7464.45497624954;
    end % f
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_f_f = f_f( ~, ~, ~ )
      % Evaluate the force vector f_f.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_f_f = sparse(9, 1);
      out_f_f(1) = 10000;
      out_f_f(7) = -10000;
    end % f_f
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_f_s = f_s( ~, ~, ~ )
      % Evaluate the force vector f_s.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_f_s = sparse(21, 1);
      out_f_s(1) = -6303.31753562568;
      out_f_s(2) = 2535.54502375045;
      out_f_s(9) = 1901.65876781284;
      out_f_s(16) = -5598.34123218716;
      out_f_s(17) = 7464.45497624954;
    end % f_s
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_f_r = f_r( ~, ~, ~ )
      % Evaluate the force vector f_r.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_f_r = sparse(21, 1);
    end % f_r
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_perm = perm( ~ )
      % Evaluate the permutation vector.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_perm = zeros(30, 1);
      out_perm(1) = 7;
      out_perm(2) = 8;
      out_perm(3) = 10;
      out_perm(4) = 11;
      out_perm(5) = 14;
      out_perm(6) = 19;
      out_perm(7) = 20;
      out_perm(8) = 22;
      out_perm(9) = 23;
      out_perm(10) = 1;
      out_perm(11) = 2;
      out_perm(12) = 3;
      out_perm(13) = 4;
      out_perm(14) = 5;
      out_perm(15) = 6;
      out_perm(16) = 9;
      out_perm(17) = 12;
      out_perm(18) = 13;
      out_perm(19) = 15;
      out_perm(20) = 16;
      out_perm(21) = 17;
      out_perm(22) = 18;
      out_perm(23) = 21;
      out_perm(24) = 24;
      out_perm(25) = 25;
      out_perm(26) = 26;
      out_perm(27) = 27;
      out_perm(28) = 28;
      out_perm(29) = 29;
      out_perm(30) = 30;
    end % perm
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_unperm = unperm( ~ )
      % Evaluate the unpermutation vector.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_unperm = zeros(30, 1);
      out_unperm(1) = 10;
      out_unperm(2) = 11;
      out_unperm(3) = 12;
      out_unperm(4) = 13;
      out_unperm(5) = 14;
      out_unperm(6) = 15;
      out_unperm(7) = 1;
      out_unperm(8) = 2;
      out_unperm(9) = 16;
      out_unperm(10) = 3;
      out_unperm(11) = 4;
      out_unperm(12) = 17;
      out_unperm(13) = 18;
      out_unperm(14) = 5;
      out_unperm(15) = 19;
      out_unperm(16) = 20;
      out_unperm(17) = 21;
      out_unperm(18) = 22;
      out_unperm(19) = 6;
      out_unperm(20) = 7;
      out_unperm(21) = 23;
      out_unperm(22) = 8;
      out_unperm(23) = 9;
      out_unperm(24) = 24;
      out_unperm(25) = 25;
      out_unperm(26) = 26;
      out_unperm(27) = 27;
      out_unperm(28) = 28;
      out_unperm(29) = 29;
      out_unperm(30) = 30;
    end % unperm
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_v = v( ~, ~ )
      % Evaluate the veiling vector.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_v = zeros(0, 1);
    end % v
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
  end
end % Test_00

% That's All Folks!
