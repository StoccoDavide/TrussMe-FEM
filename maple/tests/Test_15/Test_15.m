% +--------------------------------------------------------------------------+
% | 'TrussMe' module version 0.0 - BSD 3-Clause License - Copyright (c) 2023 |
% | Current version authors:                                                 |
% |   Davide Stocco and Matteo Larcher.                                      |
% +--------------------------------------------------------------------------+

% Matlab generated code for system: Test_15
% This file has been automatically generated by TrussMe.
% DISCLAIMER: If you need to edit it, do it wisely!

classdef Test_15 < TrussMe.System
  %
  % Test_15 class
  %
  methods
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function this = Test_15( varargin )
      % Class constructor.

      % User data
      if (nargin == 0)
        data.E = 1000.0;
        data.v = .3;
        data.A = 1.0;
        data.I_x = 2.0;
        data.I_y = 1.0;
        data.I_z = 1.0;
      elseif (nargin == 1 && isstruct(varargin{1}))
        data = varargin{1};
      elseif (nargin == 6)
        data.E = varargin{1};
        data.v = varargin{2};
        data.A = varargin{3};
        data.I_x = varargin{4};
        data.I_y = varargin{5};
        data.I_z = varargin{6};
      else
        error('wrong number of input arguments.');
      end

      % Call superclass constructor
      this = this@TrussMe.System(data);
    end % Test_15
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_K = K( this, ~, ~ )
      % Evaluate the stiffness matrix K.

      % Extract properties
      E = this.m_data.E;
      A = this.m_data.A;
      I_y = this.m_data.I_y;
      I_z = this.m_data.I_z;

      % Extract inputs
      % No inputs

      % Evaluate function
      out_1_1 = E * (A * 0.138388347648318399e1 + I_z * 0.866140759202985144e1);
      t5 = 0.828640759202985144e1 * I_z;
      out_2_1 = (A * 0.883883476483183994e0 - t5) * E;
      t7 = E * I_z;
      t8 = 0.75e0 * t7;
      out_6_1 = -t8;
      t9 = E * A;
      out_7_1 = -0.5e0 * t9;
      out_19_1 = -0.375e0 * t7;
      t12 = A * 0.1e1;
      out_25_1 = -0.883883476483183883e0 * E * (t12 + I_z * 0.937500000000000355e1);
      out_26_1 = -0.883883476483183883e0 * (t12 - 0.937500000000000355e1 * I_z) * E;
      out_30_1 = -0.662912607362388062e1 * t7;
      out_1_2 = out_2_1;
      out_2_2 = out_1_1;
      out_8_2 = out_19_1;
      out_12_2 = t8;
      out_20_2 = out_7_1;
      out_25_2 = out_26_1;
      out_26_2 = out_25_1;
      out_30_2 = t7 * 0.662912607362388062e1;
      t22 = E * I_y;
      out_3_3 = t22 * 0.173228151840596993e2;
      out_4_3 = 0.75e0 * t22;
      out_9_3 = -0.375e0 * t22;
      out_11_3 = -out_4_3;
      out_21_3 = out_9_3;
      out_27_3 = -0.165728151840596993e2 * t22;
      out_28_3 = t22 * 0.662912607362388062e1;
      out_29_3 = -0.662912607362388062e1 * t22;
      out_3_4 = out_4_3;
      out_4_4 = 0.15e1 * t22;
      out_21_4 = out_11_3;
      out_1_6 = out_6_1;
      out_6_6 = 0.15e1 * t7;
      out_19_6 = out_12_2;
      out_1_7 = out_20_2;
      out_7_7 = E * (A * 0.108925565098878963e1 + I_z * 0.256634299023106482e1);
      out_8_7 = -0.589255650988789403e0 * (t12 - 0.416666666666666430e1 * I_z) * E;
      out_13_7 = -0.111111111111111105e0 * t7;
      out_18_7 = -0.333333333333333315e0 * t7;
      out_31_7 = -0.589255650988789625e0 * (t12 + I_z * 0.416666666666666163e1) * E;
      out_32_7 = (A * 0.589255650988789403e0 - 0.245523187911995455e1 * I_z) * E;
      out_36_7 = -0.294627825494394724e1 * t7;
      out_2_8 = out_8_2;
      out_7_8 = out_8_7;
      out_8_8 = E * (I_z * 0.283023187911995500e1 + A * 0.922588984322122663e0);
      out_12_8 = out_1_6;
      out_14_8 = -0.333333333333333315e0 * t9;
      out_31_8 = out_32_7;
      out_32_8 = -0.589255650988789292e0 * (t12 + I_z * 0.416666666666666607e1) * E;
      out_36_8 = -0.294627825494394813e1 * t7;
      out_3_9 = out_21_3;
      out_9_9 = t22 * 0.539657486935101893e1;
      out_11_9 = out_3_4;
      out_15_9 = -0.111111111111111105e0 * t22;
      out_16_9 = t22 * 0.333333333333333315e0;
      out_33_9 = -0.491046375823990822e1 * t22;
      out_34_9 = t22 * 0.294627825494394724e1;
      out_35_9 = t22 * 0.294627825494394813e1;
      out_3_11 = out_21_4;
      out_9_11 = out_11_9;
      out_11_11 = out_4_4;
      out_2_12 = out_19_6;
      out_8_12 = out_12_8;
      out_12_12 = out_6_6;
      out_7_13 = out_13_7;
      t55 = A * 0.536656314599949447e0;
      out_13_13 = (I_z * 0.188207694929094416e1 + t55) * E;
      out_14_13 = (t55 - 0.965981366279908937e0 * I_z) * E;
      out_18_13 = t7 * 0.333333333333333315e0;
      out_19_13 = -0.357770876399966298e0 * (t12 + I_z * 0.149999999999999994e0) * E;
      out_20_13 = -0.178885438199983149e0 * (t12 - 0.599999999999999978e0 * I_z) * E;
      out_24_13 = t7 * 0.268328157299974834e0;
      out_37_13 = -0.178885438199983149e0 * (t12 + I_z * 0.959999999999999964e1) * E;
      out_38_13 = -0.357770876399966298e0 * (t12 - 0.239999999999999991e1 * I_z) * E;
      out_42_13 = t7 * 0.214662525839979867e1;
      out_8_14 = out_14_8;
      out_13_14 = out_14_13;
      out_14_14 = E * (A * 0.113831780523325743e1 + I_z * 0.643987577519939292e0);
      out_19_14 = out_20_13;
      out_20_14 = -0.894427190999915744e-1 * (t12 + I_z * 0.239999999999999991e1) * E;
      out_24_14 = -0.536656314599949669e0 * t7;
      out_37_14 = out_38_13;
      out_38_14 = -0.715541752799932596e0 * (t12 + I_z * 0.599999999999999978e0) * E;
      out_42_14 = -0.107331262919989934e1 * t7;
      out_9_15 = out_15_9;
      out_15_15 = t22 * 0.252606452681088278e1;
      out_16_15 = -0.333333333333333315e0 * t22;
      out_21_15 = -0.268328157299974612e0 * t22;
      out_22_15 = -0.268328157299974834e0 * t22;
      out_23_15 = t22 * 0.536656314599949669e0;
      out_39_15 = -0.214662525839979690e1 * t22;
      out_40_15 = -0.214662525839979867e1 * t22;
      out_41_15 = t22 * 0.107331262919989934e1;
      out_9_16 = out_16_9;
      out_15_16 = out_16_15;
      out_16_16 = 0.1e1 * t22;
      out_7_18 = out_18_7;
      out_13_18 = out_18_13;
      out_18_18 = 0.1e1 * t7;
      out_1_19 = out_2_8;
      out_6_19 = out_2_12;
      out_13_19 = out_19_13;
      out_14_19 = out_19_14;
      out_19_19 = E * (A * 0.124165435288315096e1 + I_z * 0.871507322348984204e1);
      out_20_19 = -0.704998038283201178e0 * (t12 - 0.116015589901886855e2 * I_z) * E;
      out_24_19 = -0.268328157299974834e0 * t7;
      out_43_19 = -0.883883476483184660e0 * (t12 + I_z * 0.937499999999999112e1) * E;
      t105 = A * 0.883883476483184327e0;
      out_44_19 = (t105 - 0.828640759202984967e1 * I_z) * E;
      out_48_19 = t7 * 0.662912607362388240e1;
      out_2_20 = out_1_7;
      out_13_20 = out_14_19;
      out_14_20 = out_20_14;
      out_19_20 = -0.704998038283201178e0 * (t12 - 0.116015589901886891e2 * I_z) * E;
      out_20_20 = E * (A * 0.147332619558317557e1 + I_z * 0.850107011786983335e1);
      out_24_20 = t7 * 0.536656314599949669e0;
      out_43_20 = (t105 - t5) * E;
      out_44_20 = -0.883883476483183883e0 * E * (t12 + I_z * 0.937500000000000533e1);
      out_48_20 = t7 * 0.662912607362388417e1;
      out_3_21 = out_3_9;
      out_4_21 = out_3_11;
      out_15_21 = out_21_15;
      out_21_21 = t22 * 0.172161433413596754e2;
      out_22_21 = t22 * 0.268328157299974834e0;
      out_23_21 = -0.536656314599949669e0 * t22;
      out_45_21 = out_27_3;
      out_46_21 = -0.662912607362388240e1 * t22;
      out_47_21 = -0.662912607362388417e1 * t22;
      out_15_22 = out_22_15;
      out_21_22 = out_22_21;
      out_22_22 = t22 * 0.268328157299974890e0;
      out_23_22 = -0.536656314599949780e0 * t22;
      out_15_23 = out_23_15;
      out_21_23 = out_23_21;
      out_22_23 = out_23_22;
      out_23_23 = t22 * 0.107331262919989956e1;
      out_13_24 = out_24_13;
      out_14_24 = out_24_14;
      out_19_24 = out_24_19;
      out_20_24 = out_24_20;
      out_24_24 = t7 * 0.134164078649987384e1;
      out_1_25 = out_26_2;
      out_2_25 = out_25_2;
      out_25_25 = E * (A * 0.182674951080137671e1 + I_z * 0.101313109378699835e2);
      out_26_25 = (A * 0.107245668334682254e1 - 0.883036876567496165e1 * I_z) * E;
      out_30_25 = t7 * 0.454579274029054758e1;
      out_31_25 = -0.942866034318192714e0 * (t12 + I_z * 0.115384615384615266e0) * E;
      out_32_25 = -0.188573206863638515e0 * (t12 - 0.288461538461538280e1 * I_z) * E;
      out_36_25 = -0.565719620590915739e0 * t7;
      out_43_25 = -0.173611111111110983e1 * t7;
      out_1_26 = out_2_25;
      out_2_26 = out_1_25;
      out_25_26 = out_26_25;
      out_26_26 = E * (A * 0.175493145118924510e1 + I_z * 0.110062134602554060e2);
      out_30_26 = out_30_1;
      out_31_26 = out_32_25;
      out_32_26 = -0.377146413727276961e-1 * (t12 + I_z * 0.721153846153845848e2) * E;
      out_36_26 = t7 * 0.282859810295457903e1;
      out_44_26 = -0.833333333333333259e0 * t9;
      out_3_27 = out_45_21;
      out_27_27 = t22 * 0.211375243981253860e2;
      out_28_27 = -0.454579274029054758e1 * t22;
      out_29_27 = out_28_3;
      out_33_27 = -0.282859810295457592e1 * t22;
      out_34_27 = t22 * 0.565719620590915739e0;
      out_35_27 = -0.282859810295457903e1 * t22;
      out_45_27 = -0.173611111111110983e1 * t22;
      out_3_28 = out_29_27;
      out_27_28 = out_28_27;
      out_28_28 = t22 * 0.515165042944955331e1;
      out_29_28 = -0.265165042944955287e1 * t22;
      out_45_28 = -0.208333333333333304e1 * t22;
      out_3_29 = out_29_3;
      out_27_29 = out_3_28;
      out_28_29 = out_29_28;
      out_29_29 = t22 * 0.265165042944955287e1;
      out_1_30 = out_30_26;
      out_2_30 = out_30_2;
      out_25_30 = out_30_25;
      out_26_30 = out_1_30;
      out_30_30 = t7 * 0.780330085889910485e1;
      out_43_30 = t7 * 0.208333333333333304e1;
      out_7_31 = out_31_7;
      out_8_31 = out_31_8;
      out_25_31 = out_31_25;
      out_26_31 = out_31_26;
      out_31_31 = E * (A * 0.153573828682921132e1 + I_z * 0.364349705550918035e1);
      out_32_31 = -0.350050022813946038e0 * (t12 - 0.523972397033988901e1 * I_z) * E;
      out_36_31 = t7 * 0.351199787553486287e1;
      out_37_31 = -0.361660152222892427e-2 * (t12 + I_z * 0.298477157360405386e3) * E;
      out_38_31 = -0.506324213112048713e-1 * E * (t12 - 0.152284263959390898e1 * I_z);
      out_42_31 = -0.151897263933614468e1 * t7;
      out_7_32 = out_8_31;
      out_8_32 = out_32_8;
      out_25_32 = out_26_31;
      out_26_32 = out_32_26;
      out_31_32 = out_32_31;
      out_32_32 = E * (A * 0.133582419071838454e1 + I_z * 0.518054526235397894e1);
      out_36_32 = t7 * 0.117680151989369097e0;
      out_37_32 = -0.506324213112048852e-1 * (t12 - 0.152284263959390809e1 * I_z) * E;
      out_38_32 = -0.708853898356867518e0 * (t12 + I_z * 0.776960530405057005e-2) * E;
      out_42_32 = t7 * 0.108498045666867604e0;
      out_9_33 = out_33_9;
      out_27_33 = out_33_27;
      out_33_33 = t22 * 0.882404231786315840e1;
      out_34_33 = -0.351199787553486287e1 * t22;
      out_35_33 = -0.117680151989369097e0 * t22;
      out_39_33 = -0.108498045666867471e1 * t22;
      out_40_33 = t22 * 0.151897263933614468e1;
      out_41_33 = -0.108498045666867604e0 * t22;
      out_9_34 = out_34_9;
      out_27_34 = out_34_27;
      out_33_34 = out_34_33;
      out_34_34 = t22 * 0.188091087708455107e1;
      out_35_34 = t22 * 0.120204733237545303e1;
      out_9_35 = out_35_9;
      out_27_35 = out_35_27;
      out_33_35 = out_35_33;
      out_34_35 = t22 * 0.120204733237545325e1;
      out_35_35 = t22 * 0.459636505592094835e1;
      out_7_36 = out_36_7;
      out_8_36 = out_36_8;
      out_25_36 = out_36_25;
      out_26_36 = out_36_26;
      out_31_36 = out_36_31;
      out_32_36 = out_36_32;
      out_36_36 = t7 * 0.647727593300549742e1;
      out_13_37 = out_37_13;
      out_14_37 = out_37_14;
      out_31_37 = out_37_31;
      out_32_37 = out_38_31;
      out_37_37 = E * (A * 0.937080700917307774e0 + I_z * 0.301526730134719312e1);
      t188 = A * 0.682795538145751335e0;
      out_38_37 = (t188 - 0.153661423413816989e1 * I_z) * E;
      out_42_37 = -0.627652619063653994e0 * t7;
      out_43_37 = -0.754578661195095646e0 * (t12 + I_z * 0.289557821077396360e0) * E;
      out_44_37 = -0.274392240434580159e0 * (t12 - 0.218978102189781110e1 * I_z) * E;
      out_48_37 = t7 * 0.748342473912491202e0;
      out_13_38 = out_14_37;
      out_14_38 = out_38_14;
      out_31_38 = out_37_32;
      out_32_38 = out_38_32;
      out_37_38 = (t188 - 0.153661423413817011e1 * I_z) * E;
      out_38_38 = E * (A * 0.152417464767846544e1 + I_z * 0.208719459850250866e1);
      out_42_38 = t7 * 0.964814583533031733e0;
      out_43_38 = -0.274392240434580159e0 * (t12 - 0.218978102189781154e1 * I_z) * E;
      out_44_38 = -0.997789965216654834e-1 * (t12 + I_z * 0.165602189781022062e2) * E;
      out_48_38 = -0.205794180325935150e1 * t7;
      out_15_39 = out_39_15;
      out_33_39 = out_39_33;
      out_39_39 = t22 * 0.510246189984970044e1;
      out_40_39 = t22 * 0.627652619063653994e0;
      out_41_39 = -0.964814583533031733e0 * t22;
      out_45_39 = -0.187085618478122928e1 * t22;
      out_46_39 = -0.748342473912491202e0 * t22;
      out_47_39 = t22 * 0.205794180325935150e1;
      out_15_40 = out_40_15;
      out_33_40 = t22 * 0.151897263933614446e1;
      out_39_40 = t22 * 0.627652619063654216e0;
      out_40_40 = t22 * 0.427318695347040212e1;
      out_41_40 = -0.122520989313351425e1 * t22;
      out_15_41 = out_41_15;
      out_33_41 = -0.108498045666867590e0 * t22;
      out_39_41 = out_41_39;
      out_40_41 = out_41_40;
      out_41_41 = t22 * 0.547506119166636607e0;
      out_13_42 = out_42_13;
      out_14_42 = out_42_14;
      out_31_42 = -0.151897263933614446e1 * t7;
      out_32_42 = t7 * 0.108498045666867590e0;
      out_37_42 = -0.627652619063654216e0 * t7;
      out_38_42 = out_42_38;
      out_42_42 = t7 * 0.482069307263703717e1;
      out_19_43 = out_43_19;
      out_20_43 = out_44_19;
      out_25_43 = out_43_25;
      out_30_43 = out_43_30;
      out_37_43 = out_43_37;
      out_38_43 = out_44_37;
      out_43_43 = E * (A * 0.163846213767828042e1 + I_z * 0.102410128561081084e2);
      out_44_43 = -0.609491236048604224e0 * (t12 - 0.126097771662746219e2 * I_z) * E;
      out_48_43 = -0.737746854753637393e1 * t7;
      out_19_44 = out_43_20;
      out_20_44 = out_44_20;
      out_26_44 = out_44_26;
      out_37_44 = out_43_38;
      out_38_44 = out_44_38;
      out_43_44 = -0.609491236048604224e0 * (t12 - 0.126097771662746254e2 * I_z) * E;
      out_44_44 = E * (A * 0.181699580633818281e1 + I_z * 0.993876962384393181e1);
      out_48_44 = -0.457118427036453312e1 * t7;
      out_21_45 = out_3_27;
      out_27_45 = out_45_27;
      out_28_45 = out_45_28;
      out_39_45 = out_45_39;
      out_45_45 = t22 * 0.201797824799520384e2;
      out_46_45 = t22 * 0.737746854753637393e1;
      out_47_45 = t22 * 0.457118427036453312e1;
      out_21_46 = out_46_21;
      out_39_46 = out_46_39;
      out_45_46 = out_46_45;
      out_46_46 = t22 * 0.295098741901454931e1;
      out_47_46 = t22 * 0.182847370814581334e1;
      out_21_47 = out_47_21;
      out_39_47 = out_47_39;
      out_45_47 = out_47_45;
      out_46_47 = out_47_46;
      out_47_47 = t22 * 0.491538641303484169e1;
      out_19_48 = out_48_19;
      out_20_48 = out_48_20;
      out_37_48 = out_48_37;
      out_38_48 = out_48_38;
      out_43_48 = out_48_43;
      out_44_48 = out_48_44;
      out_48_48 = t7 * 0.786637383204938967e1;

      % Store outputs
      out_K = sparse(48, 48);
      out_K(1, 1) = out_1_1;
      out_K(2, 1) = out_2_1;
      out_K(6, 1) = out_6_1;
      out_K(7, 1) = out_7_1;
      out_K(19, 1) = out_19_1;
      out_K(25, 1) = out_25_1;
      out_K(26, 1) = out_26_1;
      out_K(30, 1) = out_30_1;
      out_K(1, 2) = out_1_2;
      out_K(2, 2) = out_2_2;
      out_K(8, 2) = out_8_2;
      out_K(12, 2) = out_12_2;
      out_K(20, 2) = out_20_2;
      out_K(25, 2) = out_25_2;
      out_K(26, 2) = out_26_2;
      out_K(30, 2) = out_30_2;
      out_K(3, 3) = out_3_3;
      out_K(4, 3) = out_4_3;
      out_K(9, 3) = out_9_3;
      out_K(11, 3) = out_11_3;
      out_K(21, 3) = out_21_3;
      out_K(27, 3) = out_27_3;
      out_K(28, 3) = out_28_3;
      out_K(29, 3) = out_29_3;
      out_K(3, 4) = out_3_4;
      out_K(4, 4) = out_4_4;
      out_K(21, 4) = out_21_4;
      out_K(1, 6) = out_1_6;
      out_K(6, 6) = out_6_6;
      out_K(19, 6) = out_19_6;
      out_K(1, 7) = out_1_7;
      out_K(7, 7) = out_7_7;
      out_K(8, 7) = out_8_7;
      out_K(13, 7) = out_13_7;
      out_K(18, 7) = out_18_7;
      out_K(31, 7) = out_31_7;
      out_K(32, 7) = out_32_7;
      out_K(36, 7) = out_36_7;
      out_K(2, 8) = out_2_8;
      out_K(7, 8) = out_7_8;
      out_K(8, 8) = out_8_8;
      out_K(12, 8) = out_12_8;
      out_K(14, 8) = out_14_8;
      out_K(31, 8) = out_31_8;
      out_K(32, 8) = out_32_8;
      out_K(36, 8) = out_36_8;
      out_K(3, 9) = out_3_9;
      out_K(9, 9) = out_9_9;
      out_K(11, 9) = out_11_9;
      out_K(15, 9) = out_15_9;
      out_K(16, 9) = out_16_9;
      out_K(33, 9) = out_33_9;
      out_K(34, 9) = out_34_9;
      out_K(35, 9) = out_35_9;
      out_K(3, 11) = out_3_11;
      out_K(9, 11) = out_9_11;
      out_K(11, 11) = out_11_11;
      out_K(2, 12) = out_2_12;
      out_K(8, 12) = out_8_12;
      out_K(12, 12) = out_12_12;
      out_K(7, 13) = out_7_13;
      out_K(13, 13) = out_13_13;
      out_K(14, 13) = out_14_13;
      out_K(18, 13) = out_18_13;
      out_K(19, 13) = out_19_13;
      out_K(20, 13) = out_20_13;
      out_K(24, 13) = out_24_13;
      out_K(37, 13) = out_37_13;
      out_K(38, 13) = out_38_13;
      out_K(42, 13) = out_42_13;
      out_K(8, 14) = out_8_14;
      out_K(13, 14) = out_13_14;
      out_K(14, 14) = out_14_14;
      out_K(19, 14) = out_19_14;
      out_K(20, 14) = out_20_14;
      out_K(24, 14) = out_24_14;
      out_K(37, 14) = out_37_14;
      out_K(38, 14) = out_38_14;
      out_K(42, 14) = out_42_14;
      out_K(9, 15) = out_9_15;
      out_K(15, 15) = out_15_15;
      out_K(16, 15) = out_16_15;
      out_K(21, 15) = out_21_15;
      out_K(22, 15) = out_22_15;
      out_K(23, 15) = out_23_15;
      out_K(39, 15) = out_39_15;
      out_K(40, 15) = out_40_15;
      out_K(41, 15) = out_41_15;
      out_K(9, 16) = out_9_16;
      out_K(15, 16) = out_15_16;
      out_K(16, 16) = out_16_16;
      out_K(7, 18) = out_7_18;
      out_K(13, 18) = out_13_18;
      out_K(18, 18) = out_18_18;
      out_K(1, 19) = out_1_19;
      out_K(6, 19) = out_6_19;
      out_K(13, 19) = out_13_19;
      out_K(14, 19) = out_14_19;
      out_K(19, 19) = out_19_19;
      out_K(20, 19) = out_20_19;
      out_K(24, 19) = out_24_19;
      out_K(43, 19) = out_43_19;
      out_K(44, 19) = out_44_19;
      out_K(48, 19) = out_48_19;
      out_K(2, 20) = out_2_20;
      out_K(13, 20) = out_13_20;
      out_K(14, 20) = out_14_20;
      out_K(19, 20) = out_19_20;
      out_K(20, 20) = out_20_20;
      out_K(24, 20) = out_24_20;
      out_K(43, 20) = out_43_20;
      out_K(44, 20) = out_44_20;
      out_K(48, 20) = out_48_20;
      out_K(3, 21) = out_3_21;
      out_K(4, 21) = out_4_21;
      out_K(15, 21) = out_15_21;
      out_K(21, 21) = out_21_21;
      out_K(22, 21) = out_22_21;
      out_K(23, 21) = out_23_21;
      out_K(45, 21) = out_45_21;
      out_K(46, 21) = out_46_21;
      out_K(47, 21) = out_47_21;
      out_K(15, 22) = out_15_22;
      out_K(21, 22) = out_21_22;
      out_K(22, 22) = out_22_22;
      out_K(23, 22) = out_23_22;
      out_K(15, 23) = out_15_23;
      out_K(21, 23) = out_21_23;
      out_K(22, 23) = out_22_23;
      out_K(23, 23) = out_23_23;
      out_K(13, 24) = out_13_24;
      out_K(14, 24) = out_14_24;
      out_K(19, 24) = out_19_24;
      out_K(20, 24) = out_20_24;
      out_K(24, 24) = out_24_24;
      out_K(1, 25) = out_1_25;
      out_K(2, 25) = out_2_25;
      out_K(25, 25) = out_25_25;
      out_K(26, 25) = out_26_25;
      out_K(30, 25) = out_30_25;
      out_K(31, 25) = out_31_25;
      out_K(32, 25) = out_32_25;
      out_K(36, 25) = out_36_25;
      out_K(43, 25) = out_43_25;
      out_K(1, 26) = out_1_26;
      out_K(2, 26) = out_2_26;
      out_K(25, 26) = out_25_26;
      out_K(26, 26) = out_26_26;
      out_K(30, 26) = out_30_26;
      out_K(31, 26) = out_31_26;
      out_K(32, 26) = out_32_26;
      out_K(36, 26) = out_36_26;
      out_K(44, 26) = out_44_26;
      out_K(3, 27) = out_3_27;
      out_K(27, 27) = out_27_27;
      out_K(28, 27) = out_28_27;
      out_K(29, 27) = out_29_27;
      out_K(33, 27) = out_33_27;
      out_K(34, 27) = out_34_27;
      out_K(35, 27) = out_35_27;
      out_K(45, 27) = out_45_27;
      out_K(3, 28) = out_3_28;
      out_K(27, 28) = out_27_28;
      out_K(28, 28) = out_28_28;
      out_K(29, 28) = out_29_28;
      out_K(45, 28) = out_45_28;
      out_K(3, 29) = out_3_29;
      out_K(27, 29) = out_27_29;
      out_K(28, 29) = out_28_29;
      out_K(29, 29) = out_29_29;
      out_K(1, 30) = out_1_30;
      out_K(2, 30) = out_2_30;
      out_K(25, 30) = out_25_30;
      out_K(26, 30) = out_26_30;
      out_K(30, 30) = out_30_30;
      out_K(43, 30) = out_43_30;
      out_K(7, 31) = out_7_31;
      out_K(8, 31) = out_8_31;
      out_K(25, 31) = out_25_31;
      out_K(26, 31) = out_26_31;
      out_K(31, 31) = out_31_31;
      out_K(32, 31) = out_32_31;
      out_K(36, 31) = out_36_31;
      out_K(37, 31) = out_37_31;
      out_K(38, 31) = out_38_31;
      out_K(42, 31) = out_42_31;
      out_K(7, 32) = out_7_32;
      out_K(8, 32) = out_8_32;
      out_K(25, 32) = out_25_32;
      out_K(26, 32) = out_26_32;
      out_K(31, 32) = out_31_32;
      out_K(32, 32) = out_32_32;
      out_K(36, 32) = out_36_32;
      out_K(37, 32) = out_37_32;
      out_K(38, 32) = out_38_32;
      out_K(42, 32) = out_42_32;
      out_K(9, 33) = out_9_33;
      out_K(27, 33) = out_27_33;
      out_K(33, 33) = out_33_33;
      out_K(34, 33) = out_34_33;
      out_K(35, 33) = out_35_33;
      out_K(39, 33) = out_39_33;
      out_K(40, 33) = out_40_33;
      out_K(41, 33) = out_41_33;
      out_K(9, 34) = out_9_34;
      out_K(27, 34) = out_27_34;
      out_K(33, 34) = out_33_34;
      out_K(34, 34) = out_34_34;
      out_K(35, 34) = out_35_34;
      out_K(9, 35) = out_9_35;
      out_K(27, 35) = out_27_35;
      out_K(33, 35) = out_33_35;
      out_K(34, 35) = out_34_35;
      out_K(35, 35) = out_35_35;
      out_K(7, 36) = out_7_36;
      out_K(8, 36) = out_8_36;
      out_K(25, 36) = out_25_36;
      out_K(26, 36) = out_26_36;
      out_K(31, 36) = out_31_36;
      out_K(32, 36) = out_32_36;
      out_K(36, 36) = out_36_36;
      out_K(13, 37) = out_13_37;
      out_K(14, 37) = out_14_37;
      out_K(31, 37) = out_31_37;
      out_K(32, 37) = out_32_37;
      out_K(37, 37) = out_37_37;
      out_K(38, 37) = out_38_37;
      out_K(42, 37) = out_42_37;
      out_K(43, 37) = out_43_37;
      out_K(44, 37) = out_44_37;
      out_K(48, 37) = out_48_37;
      out_K(13, 38) = out_13_38;
      out_K(14, 38) = out_14_38;
      out_K(31, 38) = out_31_38;
      out_K(32, 38) = out_32_38;
      out_K(37, 38) = out_37_38;
      out_K(38, 38) = out_38_38;
      out_K(42, 38) = out_42_38;
      out_K(43, 38) = out_43_38;
      out_K(44, 38) = out_44_38;
      out_K(48, 38) = out_48_38;
      out_K(15, 39) = out_15_39;
      out_K(33, 39) = out_33_39;
      out_K(39, 39) = out_39_39;
      out_K(40, 39) = out_40_39;
      out_K(41, 39) = out_41_39;
      out_K(45, 39) = out_45_39;
      out_K(46, 39) = out_46_39;
      out_K(47, 39) = out_47_39;
      out_K(15, 40) = out_15_40;
      out_K(33, 40) = out_33_40;
      out_K(39, 40) = out_39_40;
      out_K(40, 40) = out_40_40;
      out_K(41, 40) = out_41_40;
      out_K(15, 41) = out_15_41;
      out_K(33, 41) = out_33_41;
      out_K(39, 41) = out_39_41;
      out_K(40, 41) = out_40_41;
      out_K(41, 41) = out_41_41;
      out_K(13, 42) = out_13_42;
      out_K(14, 42) = out_14_42;
      out_K(31, 42) = out_31_42;
      out_K(32, 42) = out_32_42;
      out_K(37, 42) = out_37_42;
      out_K(38, 42) = out_38_42;
      out_K(42, 42) = out_42_42;
      out_K(19, 43) = out_19_43;
      out_K(20, 43) = out_20_43;
      out_K(25, 43) = out_25_43;
      out_K(30, 43) = out_30_43;
      out_K(37, 43) = out_37_43;
      out_K(38, 43) = out_38_43;
      out_K(43, 43) = out_43_43;
      out_K(44, 43) = out_44_43;
      out_K(48, 43) = out_48_43;
      out_K(19, 44) = out_19_44;
      out_K(20, 44) = out_20_44;
      out_K(26, 44) = out_26_44;
      out_K(37, 44) = out_37_44;
      out_K(38, 44) = out_38_44;
      out_K(43, 44) = out_43_44;
      out_K(44, 44) = out_44_44;
      out_K(48, 44) = out_48_44;
      out_K(21, 45) = out_21_45;
      out_K(27, 45) = out_27_45;
      out_K(28, 45) = out_28_45;
      out_K(39, 45) = out_39_45;
      out_K(45, 45) = out_45_45;
      out_K(46, 45) = out_46_45;
      out_K(47, 45) = out_47_45;
      out_K(21, 46) = out_21_46;
      out_K(39, 46) = out_39_46;
      out_K(45, 46) = out_45_46;
      out_K(46, 46) = out_46_46;
      out_K(47, 46) = out_47_46;
      out_K(21, 47) = out_21_47;
      out_K(39, 47) = out_39_47;
      out_K(45, 47) = out_45_47;
      out_K(46, 47) = out_46_47;
      out_K(47, 47) = out_47_47;
      out_K(19, 48) = out_19_48;
      out_K(20, 48) = out_20_48;
      out_K(37, 48) = out_37_48;
      out_K(38, 48) = out_38_48;
      out_K(43, 48) = out_43_48;
      out_K(44, 48) = out_44_48;
      out_K(48, 48) = out_48_48;
    end % K
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_K_ff = K_ff( this, ~, ~ )
      % Evaluate the stiffness matrix K_ff.

      % Extract properties
      E = this.m_data.E;
      A = this.m_data.A;
      I_y = this.m_data.I_y;
      I_z = this.m_data.I_z;

      % Extract inputs
      % No inputs

      % Evaluate function
      out_1_1 = E * (A * 0.182674951080137671e1 + I_z * 0.101313109378699835e2);
      out_2_1 = (A * 0.107245668334682254e1 - 0.883036876567496165e1 * I_z) * E;
      t7 = E * I_z;
      out_6_1 = t7 * 0.454579274029054758e1;
      t8 = A * 0.1e1;
      out_7_1 = -0.942866034318192714e0 * (t8 + I_z * 0.115384615384615266e0) * E;
      out_8_1 = -0.188573206863638515e0 * (t8 - 0.288461538461538280e1 * I_z) * E;
      out_12_1 = -0.565719620590915739e0 * t7;
      out_19_1 = -0.173611111111110983e1 * t7;
      out_1_2 = out_2_1;
      out_2_2 = E * (A * 0.175493145118924510e1 + I_z * 0.110062134602554060e2);
      out_6_2 = -0.662912607362388062e1 * t7;
      out_7_2 = out_8_1;
      out_8_2 = -0.377146413727276961e-1 * (t8 + I_z * 0.721153846153845848e2) * E;
      out_12_2 = t7 * 0.282859810295457903e1;
      out_20_2 = -0.833333333333333259e0 * E * A;
      t29 = E * I_y;
      out_3_3 = t29 * 0.211375243981253860e2;
      out_4_3 = -0.454579274029054758e1 * t29;
      out_5_3 = t29 * 0.662912607362388062e1;
      out_9_3 = -0.282859810295457592e1 * t29;
      out_10_3 = t29 * 0.565719620590915739e0;
      out_11_3 = -0.282859810295457903e1 * t29;
      out_21_3 = -0.173611111111110983e1 * t29;
      out_3_4 = out_4_3;
      out_4_4 = t29 * 0.515165042944955331e1;
      out_5_4 = -0.265165042944955287e1 * t29;
      out_21_4 = -0.208333333333333304e1 * t29;
      out_3_5 = out_5_3;
      out_4_5 = out_5_4;
      out_5_5 = t29 * 0.265165042944955287e1;
      out_1_6 = out_6_1;
      out_2_6 = out_6_2;
      out_6_6 = t7 * 0.780330085889910485e1;
      out_19_6 = t7 * 0.208333333333333304e1;
      out_1_7 = out_7_1;
      out_2_7 = out_7_2;
      out_7_7 = E * (A * 0.153573828682921132e1 + I_z * 0.364349705550918035e1);
      out_8_7 = -0.350050022813946038e0 * (t8 - 0.523972397033988901e1 * I_z) * E;
      out_12_7 = t7 * 0.351199787553486287e1;
      out_13_7 = -0.361660152222892427e-2 * (t8 + I_z * 0.298477157360405386e3) * E;
      out_14_7 = -0.506324213112048713e-1 * E * (t8 - 0.152284263959390898e1 * I_z);
      out_18_7 = -0.151897263933614468e1 * t7;
      out_1_8 = out_2_7;
      out_2_8 = out_8_2;
      out_7_8 = out_8_7;
      out_8_8 = E * (A * 0.133582419071838454e1 + I_z * 0.518054526235397894e1);
      out_12_8 = t7 * 0.117680151989369097e0;
      out_13_8 = -0.506324213112048852e-1 * (t8 - 0.152284263959390809e1 * I_z) * E;
      out_14_8 = -0.708853898356867518e0 * (t8 + I_z * 0.776960530405057005e-2) * E;
      out_18_8 = t7 * 0.108498045666867604e0;
      out_3_9 = out_9_3;
      out_9_9 = t29 * 0.882404231786315840e1;
      out_10_9 = -0.351199787553486287e1 * t29;
      out_11_9 = -0.117680151989369097e0 * t29;
      out_15_9 = -0.108498045666867471e1 * t29;
      out_16_9 = t29 * 0.151897263933614468e1;
      out_17_9 = -0.108498045666867604e0 * t29;
      out_3_10 = out_10_3;
      out_9_10 = out_10_9;
      out_10_10 = t29 * 0.188091087708455107e1;
      out_11_10 = t29 * 0.120204733237545303e1;
      out_3_11 = out_11_3;
      out_9_11 = out_11_9;
      out_10_11 = t29 * 0.120204733237545325e1;
      out_11_11 = t29 * 0.459636505592094835e1;
      out_1_12 = out_12_1;
      out_2_12 = out_12_2;
      out_7_12 = out_12_7;
      out_8_12 = out_12_8;
      out_12_12 = t7 * 0.647727593300549742e1;
      out_7_13 = out_13_7;
      out_8_13 = out_14_7;
      out_13_13 = E * (A * 0.937080700917307774e0 + I_z * 0.301526730134719312e1);
      t70 = A * 0.682795538145751335e0;
      out_14_13 = (t70 - 0.153661423413816989e1 * I_z) * E;
      out_18_13 = -0.627652619063653994e0 * t7;
      out_19_13 = -0.754578661195095646e0 * (t8 + I_z * 0.289557821077396360e0) * E;
      out_20_13 = -0.274392240434580159e0 * (t8 - 0.218978102189781110e1 * I_z) * E;
      out_24_13 = t7 * 0.748342473912491202e0;
      out_7_14 = out_13_8;
      out_8_14 = out_14_8;
      out_13_14 = (t70 - 0.153661423413817011e1 * I_z) * E;
      out_14_14 = E * (A * 0.152417464767846544e1 + I_z * 0.208719459850250866e1);
      out_18_14 = t7 * 0.964814583533031733e0;
      out_19_14 = -0.274392240434580159e0 * (t8 - 0.218978102189781154e1 * I_z) * E;
      out_20_14 = -0.997789965216654834e-1 * (t8 + I_z * 0.165602189781022062e2) * E;
      out_24_14 = -0.205794180325935150e1 * t7;
      out_9_15 = out_15_9;
      out_15_15 = t29 * 0.510246189984970044e1;
      out_16_15 = t29 * 0.627652619063653994e0;
      out_17_15 = -0.964814583533031733e0 * t29;
      out_21_15 = -0.187085618478122928e1 * t29;
      out_22_15 = -0.748342473912491202e0 * t29;
      out_23_15 = t29 * 0.205794180325935150e1;
      out_9_16 = t29 * 0.151897263933614446e1;
      out_15_16 = t29 * 0.627652619063654216e0;
      out_16_16 = t29 * 0.427318695347040212e1;
      out_17_16 = -0.122520989313351425e1 * t29;
      out_9_17 = -0.108498045666867590e0 * t29;
      out_15_17 = out_17_15;
      out_16_17 = out_17_16;
      out_17_17 = t29 * 0.547506119166636607e0;
      out_7_18 = -0.151897263933614446e1 * t7;
      out_8_18 = t7 * 0.108498045666867590e0;
      out_13_18 = -0.627652619063654216e0 * t7;
      out_14_18 = out_18_14;
      out_18_18 = t7 * 0.482069307263703717e1;
      out_1_19 = out_19_1;
      out_6_19 = out_19_6;
      out_13_19 = out_19_13;
      out_14_19 = out_20_13;
      out_19_19 = E * (A * 0.163846213767828042e1 + I_z * 0.102410128561081084e2);
      out_20_19 = -0.609491236048604224e0 * (t8 - 0.126097771662746219e2 * I_z) * E;
      out_24_19 = -0.737746854753637393e1 * t7;
      out_2_20 = out_20_2;
      out_13_20 = out_19_14;
      out_14_20 = out_20_14;
      out_19_20 = -0.609491236048604224e0 * (t8 - 0.126097771662746254e2 * I_z) * E;
      out_20_20 = E * (A * 0.181699580633818281e1 + I_z * 0.993876962384393181e1);
      out_24_20 = -0.457118427036453312e1 * t7;
      out_3_21 = out_21_3;
      out_4_21 = out_21_4;
      out_15_21 = out_21_15;
      out_21_21 = t29 * 0.201797824799520384e2;
      out_22_21 = t29 * 0.737746854753637393e1;
      out_23_21 = t29 * 0.457118427036453312e1;
      out_15_22 = out_22_15;
      out_21_22 = out_22_21;
      out_22_22 = t29 * 0.295098741901454931e1;
      out_23_22 = t29 * 0.182847370814581334e1;
      out_15_23 = out_23_15;
      out_21_23 = out_23_21;
      out_22_23 = out_23_22;
      out_23_23 = t29 * 0.491538641303484169e1;
      out_13_24 = out_24_13;
      out_14_24 = out_24_14;
      out_19_24 = out_24_19;
      out_20_24 = out_24_20;
      out_24_24 = t7 * 0.786637383204938967e1;

      % Store outputs
      out_K_ff = sparse(24, 24);
      out_K_ff(1, 1) = out_1_1;
      out_K_ff(2, 1) = out_2_1;
      out_K_ff(6, 1) = out_6_1;
      out_K_ff(7, 1) = out_7_1;
      out_K_ff(8, 1) = out_8_1;
      out_K_ff(12, 1) = out_12_1;
      out_K_ff(19, 1) = out_19_1;
      out_K_ff(1, 2) = out_1_2;
      out_K_ff(2, 2) = out_2_2;
      out_K_ff(6, 2) = out_6_2;
      out_K_ff(7, 2) = out_7_2;
      out_K_ff(8, 2) = out_8_2;
      out_K_ff(12, 2) = out_12_2;
      out_K_ff(20, 2) = out_20_2;
      out_K_ff(3, 3) = out_3_3;
      out_K_ff(4, 3) = out_4_3;
      out_K_ff(5, 3) = out_5_3;
      out_K_ff(9, 3) = out_9_3;
      out_K_ff(10, 3) = out_10_3;
      out_K_ff(11, 3) = out_11_3;
      out_K_ff(21, 3) = out_21_3;
      out_K_ff(3, 4) = out_3_4;
      out_K_ff(4, 4) = out_4_4;
      out_K_ff(5, 4) = out_5_4;
      out_K_ff(21, 4) = out_21_4;
      out_K_ff(3, 5) = out_3_5;
      out_K_ff(4, 5) = out_4_5;
      out_K_ff(5, 5) = out_5_5;
      out_K_ff(1, 6) = out_1_6;
      out_K_ff(2, 6) = out_2_6;
      out_K_ff(6, 6) = out_6_6;
      out_K_ff(19, 6) = out_19_6;
      out_K_ff(1, 7) = out_1_7;
      out_K_ff(2, 7) = out_2_7;
      out_K_ff(7, 7) = out_7_7;
      out_K_ff(8, 7) = out_8_7;
      out_K_ff(12, 7) = out_12_7;
      out_K_ff(13, 7) = out_13_7;
      out_K_ff(14, 7) = out_14_7;
      out_K_ff(18, 7) = out_18_7;
      out_K_ff(1, 8) = out_1_8;
      out_K_ff(2, 8) = out_2_8;
      out_K_ff(7, 8) = out_7_8;
      out_K_ff(8, 8) = out_8_8;
      out_K_ff(12, 8) = out_12_8;
      out_K_ff(13, 8) = out_13_8;
      out_K_ff(14, 8) = out_14_8;
      out_K_ff(18, 8) = out_18_8;
      out_K_ff(3, 9) = out_3_9;
      out_K_ff(9, 9) = out_9_9;
      out_K_ff(10, 9) = out_10_9;
      out_K_ff(11, 9) = out_11_9;
      out_K_ff(15, 9) = out_15_9;
      out_K_ff(16, 9) = out_16_9;
      out_K_ff(17, 9) = out_17_9;
      out_K_ff(3, 10) = out_3_10;
      out_K_ff(9, 10) = out_9_10;
      out_K_ff(10, 10) = out_10_10;
      out_K_ff(11, 10) = out_11_10;
      out_K_ff(3, 11) = out_3_11;
      out_K_ff(9, 11) = out_9_11;
      out_K_ff(10, 11) = out_10_11;
      out_K_ff(11, 11) = out_11_11;
      out_K_ff(1, 12) = out_1_12;
      out_K_ff(2, 12) = out_2_12;
      out_K_ff(7, 12) = out_7_12;
      out_K_ff(8, 12) = out_8_12;
      out_K_ff(12, 12) = out_12_12;
      out_K_ff(7, 13) = out_7_13;
      out_K_ff(8, 13) = out_8_13;
      out_K_ff(13, 13) = out_13_13;
      out_K_ff(14, 13) = out_14_13;
      out_K_ff(18, 13) = out_18_13;
      out_K_ff(19, 13) = out_19_13;
      out_K_ff(20, 13) = out_20_13;
      out_K_ff(24, 13) = out_24_13;
      out_K_ff(7, 14) = out_7_14;
      out_K_ff(8, 14) = out_8_14;
      out_K_ff(13, 14) = out_13_14;
      out_K_ff(14, 14) = out_14_14;
      out_K_ff(18, 14) = out_18_14;
      out_K_ff(19, 14) = out_19_14;
      out_K_ff(20, 14) = out_20_14;
      out_K_ff(24, 14) = out_24_14;
      out_K_ff(9, 15) = out_9_15;
      out_K_ff(15, 15) = out_15_15;
      out_K_ff(16, 15) = out_16_15;
      out_K_ff(17, 15) = out_17_15;
      out_K_ff(21, 15) = out_21_15;
      out_K_ff(22, 15) = out_22_15;
      out_K_ff(23, 15) = out_23_15;
      out_K_ff(9, 16) = out_9_16;
      out_K_ff(15, 16) = out_15_16;
      out_K_ff(16, 16) = out_16_16;
      out_K_ff(17, 16) = out_17_16;
      out_K_ff(9, 17) = out_9_17;
      out_K_ff(15, 17) = out_15_17;
      out_K_ff(16, 17) = out_16_17;
      out_K_ff(17, 17) = out_17_17;
      out_K_ff(7, 18) = out_7_18;
      out_K_ff(8, 18) = out_8_18;
      out_K_ff(13, 18) = out_13_18;
      out_K_ff(14, 18) = out_14_18;
      out_K_ff(18, 18) = out_18_18;
      out_K_ff(1, 19) = out_1_19;
      out_K_ff(6, 19) = out_6_19;
      out_K_ff(13, 19) = out_13_19;
      out_K_ff(14, 19) = out_14_19;
      out_K_ff(19, 19) = out_19_19;
      out_K_ff(20, 19) = out_20_19;
      out_K_ff(24, 19) = out_24_19;
      out_K_ff(2, 20) = out_2_20;
      out_K_ff(13, 20) = out_13_20;
      out_K_ff(14, 20) = out_14_20;
      out_K_ff(19, 20) = out_19_20;
      out_K_ff(20, 20) = out_20_20;
      out_K_ff(24, 20) = out_24_20;
      out_K_ff(3, 21) = out_3_21;
      out_K_ff(4, 21) = out_4_21;
      out_K_ff(15, 21) = out_15_21;
      out_K_ff(21, 21) = out_21_21;
      out_K_ff(22, 21) = out_22_21;
      out_K_ff(23, 21) = out_23_21;
      out_K_ff(15, 22) = out_15_22;
      out_K_ff(21, 22) = out_21_22;
      out_K_ff(22, 22) = out_22_22;
      out_K_ff(23, 22) = out_23_22;
      out_K_ff(15, 23) = out_15_23;
      out_K_ff(21, 23) = out_21_23;
      out_K_ff(22, 23) = out_22_23;
      out_K_ff(23, 23) = out_23_23;
      out_K_ff(13, 24) = out_13_24;
      out_K_ff(14, 24) = out_14_24;
      out_K_ff(19, 24) = out_19_24;
      out_K_ff(20, 24) = out_20_24;
      out_K_ff(24, 24) = out_24_24;
    end % K_ff
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_K_fs = K_fs( this, ~, ~ )
      % Evaluate the stiffness matrix K_fs.

      % Extract properties
      E = this.m_data.E;
      A = this.m_data.A;
      I_y = this.m_data.I_y;
      I_z = this.m_data.I_z;

      % Extract inputs
      % No inputs

      % Evaluate function
      t1 = A * 0.1e1;
      out_1_1 = -0.883883476483183883e0 * E * (t1 + I_z * 0.937500000000000355e1);
      out_2_1 = -0.883883476483183883e0 * (t1 - 0.937500000000000355e1 * I_z) * E;
      t10 = E * I_z;
      out_6_1 = -0.662912607362388062e1 * t10;
      out_1_2 = out_2_1;
      out_2_2 = out_1_1;
      out_6_2 = t10 * 0.662912607362388062e1;
      t12 = E * I_y;
      out_3_3 = -0.165728151840596993e2 * t12;
      out_4_3 = t12 * 0.662912607362388062e1;
      out_5_3 = -0.662912607362388062e1 * t12;
      out_7_7 = -0.589255650988789625e0 * (t1 + I_z * 0.416666666666666163e1) * E;
      out_8_7 = (A * 0.589255650988789403e0 - 0.245523187911995455e1 * I_z) * E;
      out_12_7 = -0.294627825494394724e1 * t10;
      out_7_8 = out_8_7;
      out_8_8 = -0.589255650988789292e0 * (t1 + I_z * 0.416666666666666607e1) * E;
      out_12_8 = -0.294627825494394813e1 * t10;
      out_9_9 = -0.491046375823990822e1 * t12;
      out_10_9 = t12 * 0.294627825494394724e1;
      out_11_9 = t12 * 0.294627825494394813e1;
      out_13_13 = -0.178885438199983149e0 * (t1 + I_z * 0.959999999999999964e1) * E;
      out_14_13 = -0.357770876399966298e0 * (t1 - 0.239999999999999991e1 * I_z) * E;
      out_18_13 = t10 * 0.214662525839979867e1;
      out_13_14 = out_14_13;
      out_14_14 = -0.715541752799932596e0 * (t1 + I_z * 0.599999999999999978e0) * E;
      out_18_14 = -0.107331262919989934e1 * t10;
      out_15_15 = -0.214662525839979690e1 * t12;
      out_16_15 = -0.214662525839979867e1 * t12;
      out_17_15 = t12 * 0.107331262919989934e1;
      out_19_19 = -0.883883476483184660e0 * (t1 + I_z * 0.937499999999999112e1) * E;
      t48 = A * 0.883883476483184327e0;
      out_20_19 = (t48 - 0.828640759202984967e1 * I_z) * E;
      out_24_19 = t10 * 0.662912607362388240e1;
      out_19_20 = (t48 - 0.828640759202985144e1 * I_z) * E;
      out_20_20 = -0.883883476483183883e0 * E * (t1 + I_z * 0.937500000000000533e1);
      out_24_20 = t10 * 0.662912607362388417e1;
      out_21_21 = out_3_3;
      out_22_21 = -0.662912607362388240e1 * t12;
      out_23_21 = -0.662912607362388417e1 * t12;

      % Store outputs
      out_K_fs = sparse(24, 24);
      out_K_fs(1, 1) = out_1_1;
      out_K_fs(2, 1) = out_2_1;
      out_K_fs(6, 1) = out_6_1;
      out_K_fs(1, 2) = out_1_2;
      out_K_fs(2, 2) = out_2_2;
      out_K_fs(6, 2) = out_6_2;
      out_K_fs(3, 3) = out_3_3;
      out_K_fs(4, 3) = out_4_3;
      out_K_fs(5, 3) = out_5_3;
      out_K_fs(7, 7) = out_7_7;
      out_K_fs(8, 7) = out_8_7;
      out_K_fs(12, 7) = out_12_7;
      out_K_fs(7, 8) = out_7_8;
      out_K_fs(8, 8) = out_8_8;
      out_K_fs(12, 8) = out_12_8;
      out_K_fs(9, 9) = out_9_9;
      out_K_fs(10, 9) = out_10_9;
      out_K_fs(11, 9) = out_11_9;
      out_K_fs(13, 13) = out_13_13;
      out_K_fs(14, 13) = out_14_13;
      out_K_fs(18, 13) = out_18_13;
      out_K_fs(13, 14) = out_13_14;
      out_K_fs(14, 14) = out_14_14;
      out_K_fs(18, 14) = out_18_14;
      out_K_fs(15, 15) = out_15_15;
      out_K_fs(16, 15) = out_16_15;
      out_K_fs(17, 15) = out_17_15;
      out_K_fs(19, 19) = out_19_19;
      out_K_fs(20, 19) = out_20_19;
      out_K_fs(24, 19) = out_24_19;
      out_K_fs(19, 20) = out_19_20;
      out_K_fs(20, 20) = out_20_20;
      out_K_fs(24, 20) = out_24_20;
      out_K_fs(21, 21) = out_21_21;
      out_K_fs(22, 21) = out_22_21;
      out_K_fs(23, 21) = out_23_21;
    end % K_fs
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_K_sf = K_sf( this, ~, ~ )
      % Evaluate the stiffness matrix K_sf.

      % Extract properties
      E = this.m_data.E;
      A = this.m_data.A;
      I_y = this.m_data.I_y;
      I_z = this.m_data.I_z;

      % Extract inputs
      % No inputs

      % Evaluate function
      t1 = A * 0.1e1;
      out_1_1 = -0.883883476483183883e0 * E * (t1 + I_z * 0.937500000000000355e1);
      out_2_1 = -0.883883476483183883e0 * (t1 - 0.937500000000000355e1 * I_z) * E;
      out_1_2 = out_2_1;
      out_2_2 = out_1_1;
      t10 = E * I_y;
      out_3_3 = -0.165728151840596993e2 * t10;
      out_3_4 = t10 * 0.662912607362388062e1;
      out_3_5 = -0.662912607362388062e1 * t10;
      t13 = E * I_z;
      out_1_6 = -0.662912607362388062e1 * t13;
      out_2_6 = t13 * 0.662912607362388062e1;
      out_7_7 = -0.589255650988789625e0 * (t1 + I_z * 0.416666666666666163e1) * E;
      out_8_7 = (A * 0.589255650988789403e0 - 0.245523187911995455e1 * I_z) * E;
      out_7_8 = out_8_7;
      out_8_8 = -0.589255650988789292e0 * (t1 + I_z * 0.416666666666666607e1) * E;
      out_9_9 = -0.491046375823990822e1 * t10;
      out_9_10 = t10 * 0.294627825494394724e1;
      out_9_11 = t10 * 0.294627825494394813e1;
      out_7_12 = -0.294627825494394724e1 * t13;
      out_8_12 = -0.294627825494394813e1 * t13;
      out_13_13 = -0.178885438199983149e0 * (t1 + I_z * 0.959999999999999964e1) * E;
      out_14_13 = -0.357770876399966298e0 * (t1 - 0.239999999999999991e1 * I_z) * E;
      out_13_14 = out_14_13;
      out_14_14 = -0.715541752799932596e0 * (t1 + I_z * 0.599999999999999978e0) * E;
      out_15_15 = -0.214662525839979690e1 * t10;
      out_15_16 = -0.214662525839979867e1 * t10;
      out_15_17 = t10 * 0.107331262919989934e1;
      out_13_18 = t13 * 0.214662525839979867e1;
      out_14_18 = -0.107331262919989934e1 * t13;
      out_19_19 = -0.883883476483184660e0 * (t1 + I_z * 0.937499999999999112e1) * E;
      t48 = A * 0.883883476483184327e0;
      out_20_19 = (t48 - 0.828640759202984967e1 * I_z) * E;
      out_19_20 = (t48 - 0.828640759202985144e1 * I_z) * E;
      out_20_20 = -0.883883476483183883e0 * E * (t1 + I_z * 0.937500000000000533e1);
      out_21_21 = out_3_3;
      out_21_22 = -0.662912607362388240e1 * t10;
      out_21_23 = -0.662912607362388417e1 * t10;
      out_19_24 = t13 * 0.662912607362388240e1;
      out_20_24 = t13 * 0.662912607362388417e1;

      % Store outputs
      out_K_sf = sparse(24, 24);
      out_K_sf(1, 1) = out_1_1;
      out_K_sf(2, 1) = out_2_1;
      out_K_sf(1, 2) = out_1_2;
      out_K_sf(2, 2) = out_2_2;
      out_K_sf(3, 3) = out_3_3;
      out_K_sf(3, 4) = out_3_4;
      out_K_sf(3, 5) = out_3_5;
      out_K_sf(1, 6) = out_1_6;
      out_K_sf(2, 6) = out_2_6;
      out_K_sf(7, 7) = out_7_7;
      out_K_sf(8, 7) = out_8_7;
      out_K_sf(7, 8) = out_7_8;
      out_K_sf(8, 8) = out_8_8;
      out_K_sf(9, 9) = out_9_9;
      out_K_sf(9, 10) = out_9_10;
      out_K_sf(9, 11) = out_9_11;
      out_K_sf(7, 12) = out_7_12;
      out_K_sf(8, 12) = out_8_12;
      out_K_sf(13, 13) = out_13_13;
      out_K_sf(14, 13) = out_14_13;
      out_K_sf(13, 14) = out_13_14;
      out_K_sf(14, 14) = out_14_14;
      out_K_sf(15, 15) = out_15_15;
      out_K_sf(15, 16) = out_15_16;
      out_K_sf(15, 17) = out_15_17;
      out_K_sf(13, 18) = out_13_18;
      out_K_sf(14, 18) = out_14_18;
      out_K_sf(19, 19) = out_19_19;
      out_K_sf(20, 19) = out_20_19;
      out_K_sf(19, 20) = out_19_20;
      out_K_sf(20, 20) = out_20_20;
      out_K_sf(21, 21) = out_21_21;
      out_K_sf(21, 22) = out_21_22;
      out_K_sf(21, 23) = out_21_23;
      out_K_sf(19, 24) = out_19_24;
      out_K_sf(20, 24) = out_20_24;
    end % K_sf
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_K_ss = K_ss( this, ~, ~ )
      % Evaluate the stiffness matrix K_ss.

      % Extract properties
      E = this.m_data.E;
      A = this.m_data.A;
      I_y = this.m_data.I_y;
      I_z = this.m_data.I_z;

      % Extract inputs
      % No inputs

      % Evaluate function
      out_1_1 = E * (A * 0.138388347648318399e1 + I_z * 0.866140759202985144e1);
      out_2_1 = (A * 0.883883476483183994e0 - 0.828640759202985144e1 * I_z) * E;
      t7 = E * I_z;
      t8 = 0.75e0 * t7;
      out_6_1 = -t8;
      t9 = E * A;
      out_7_1 = -0.5e0 * t9;
      out_19_1 = -0.375e0 * t7;
      out_1_2 = out_2_1;
      out_2_2 = out_1_1;
      out_8_2 = out_19_1;
      out_12_2 = t8;
      out_20_2 = out_7_1;
      t12 = E * I_y;
      out_3_3 = t12 * 0.173228151840596993e2;
      out_4_3 = 0.75e0 * t12;
      out_9_3 = -0.375e0 * t12;
      out_11_3 = -out_4_3;
      out_21_3 = out_9_3;
      out_3_4 = out_4_3;
      out_4_4 = 0.15e1 * t12;
      out_21_4 = out_11_3;
      out_1_6 = out_6_1;
      out_6_6 = 0.15e1 * t7;
      out_19_6 = out_12_2;
      out_1_7 = out_20_2;
      out_7_7 = E * (A * 0.108925565098878963e1 + I_z * 0.256634299023106482e1);
      t17 = A * 0.1e1;
      out_8_7 = -0.589255650988789403e0 * (t17 - 0.416666666666666430e1 * I_z) * E;
      out_13_7 = -0.111111111111111105e0 * t7;
      out_18_7 = -0.333333333333333315e0 * t7;
      out_2_8 = out_8_2;
      out_7_8 = out_8_7;
      out_8_8 = E * (I_z * 0.283023187911995500e1 + A * 0.922588984322122663e0);
      out_12_8 = out_1_6;
      out_14_8 = -0.333333333333333315e0 * t9;
      out_3_9 = out_21_3;
      out_9_9 = t12 * 0.539657486935101893e1;
      out_11_9 = out_3_4;
      out_15_9 = -0.111111111111111105e0 * t12;
      out_16_9 = t12 * 0.333333333333333315e0;
      out_3_11 = out_21_4;
      out_9_11 = out_11_9;
      out_11_11 = out_4_4;
      out_2_12 = out_19_6;
      out_8_12 = out_12_8;
      out_12_12 = out_6_6;
      out_7_13 = out_13_7;
      t30 = A * 0.536656314599949447e0;
      out_13_13 = (I_z * 0.188207694929094416e1 + t30) * E;
      out_14_13 = (t30 - 0.965981366279908937e0 * I_z) * E;
      out_18_13 = t7 * 0.333333333333333315e0;
      out_19_13 = -0.357770876399966298e0 * (t17 + I_z * 0.149999999999999994e0) * E;
      out_20_13 = -0.178885438199983149e0 * (t17 - 0.599999999999999978e0 * I_z) * E;
      out_24_13 = t7 * 0.268328157299974834e0;
      out_8_14 = out_14_8;
      out_13_14 = out_14_13;
      out_14_14 = E * (A * 0.113831780523325743e1 + I_z * 0.643987577519939292e0);
      out_19_14 = out_20_13;
      out_20_14 = -0.894427190999915744e-1 * (t17 + I_z * 0.239999999999999991e1) * E;
      out_24_14 = -0.536656314599949669e0 * t7;
      out_9_15 = out_15_9;
      out_15_15 = t12 * 0.252606452681088278e1;
      out_16_15 = -0.333333333333333315e0 * t12;
      out_21_15 = -0.268328157299974612e0 * t12;
      out_22_15 = -0.268328157299974834e0 * t12;
      out_23_15 = t12 * 0.536656314599949669e0;
      out_9_16 = out_16_9;
      out_15_16 = out_16_15;
      out_16_16 = 0.1e1 * t12;
      out_7_18 = out_18_7;
      out_13_18 = out_18_13;
      out_18_18 = 0.1e1 * t7;
      out_1_19 = out_2_8;
      out_6_19 = out_2_12;
      out_13_19 = out_19_13;
      out_14_19 = out_19_14;
      out_19_19 = E * (A * 0.124165435288315096e1 + I_z * 0.871507322348984204e1);
      out_20_19 = -0.704998038283201178e0 * (t17 - 0.116015589901886855e2 * I_z) * E;
      out_24_19 = -0.268328157299974834e0 * t7;
      out_2_20 = out_1_7;
      out_13_20 = out_14_19;
      out_14_20 = out_20_14;
      out_19_20 = -0.704998038283201178e0 * (t17 - 0.116015589901886891e2 * I_z) * E;
      out_20_20 = E * (A * 0.147332619558317557e1 + I_z * 0.850107011786983335e1);
      out_24_20 = t7 * 0.536656314599949669e0;
      out_3_21 = out_3_9;
      out_4_21 = out_3_11;
      out_15_21 = out_21_15;
      out_21_21 = t12 * 0.172161433413596754e2;
      out_22_21 = t12 * 0.268328157299974834e0;
      out_23_21 = -0.536656314599949669e0 * t12;
      out_15_22 = out_22_15;
      out_21_22 = out_22_21;
      out_22_22 = t12 * 0.268328157299974890e0;
      out_23_22 = -0.536656314599949780e0 * t12;
      out_15_23 = out_23_15;
      out_21_23 = out_23_21;
      out_22_23 = out_23_22;
      out_23_23 = t12 * 0.107331262919989956e1;
      out_13_24 = out_24_13;
      out_14_24 = out_24_14;
      out_19_24 = out_24_19;
      out_20_24 = out_24_20;
      out_24_24 = t7 * 0.134164078649987384e1;

      % Store outputs
      out_K_ss = sparse(24, 24);
      out_K_ss(1, 1) = out_1_1;
      out_K_ss(2, 1) = out_2_1;
      out_K_ss(6, 1) = out_6_1;
      out_K_ss(7, 1) = out_7_1;
      out_K_ss(19, 1) = out_19_1;
      out_K_ss(1, 2) = out_1_2;
      out_K_ss(2, 2) = out_2_2;
      out_K_ss(8, 2) = out_8_2;
      out_K_ss(12, 2) = out_12_2;
      out_K_ss(20, 2) = out_20_2;
      out_K_ss(3, 3) = out_3_3;
      out_K_ss(4, 3) = out_4_3;
      out_K_ss(9, 3) = out_9_3;
      out_K_ss(11, 3) = out_11_3;
      out_K_ss(21, 3) = out_21_3;
      out_K_ss(3, 4) = out_3_4;
      out_K_ss(4, 4) = out_4_4;
      out_K_ss(21, 4) = out_21_4;
      out_K_ss(1, 6) = out_1_6;
      out_K_ss(6, 6) = out_6_6;
      out_K_ss(19, 6) = out_19_6;
      out_K_ss(1, 7) = out_1_7;
      out_K_ss(7, 7) = out_7_7;
      out_K_ss(8, 7) = out_8_7;
      out_K_ss(13, 7) = out_13_7;
      out_K_ss(18, 7) = out_18_7;
      out_K_ss(2, 8) = out_2_8;
      out_K_ss(7, 8) = out_7_8;
      out_K_ss(8, 8) = out_8_8;
      out_K_ss(12, 8) = out_12_8;
      out_K_ss(14, 8) = out_14_8;
      out_K_ss(3, 9) = out_3_9;
      out_K_ss(9, 9) = out_9_9;
      out_K_ss(11, 9) = out_11_9;
      out_K_ss(15, 9) = out_15_9;
      out_K_ss(16, 9) = out_16_9;
      out_K_ss(3, 11) = out_3_11;
      out_K_ss(9, 11) = out_9_11;
      out_K_ss(11, 11) = out_11_11;
      out_K_ss(2, 12) = out_2_12;
      out_K_ss(8, 12) = out_8_12;
      out_K_ss(12, 12) = out_12_12;
      out_K_ss(7, 13) = out_7_13;
      out_K_ss(13, 13) = out_13_13;
      out_K_ss(14, 13) = out_14_13;
      out_K_ss(18, 13) = out_18_13;
      out_K_ss(19, 13) = out_19_13;
      out_K_ss(20, 13) = out_20_13;
      out_K_ss(24, 13) = out_24_13;
      out_K_ss(8, 14) = out_8_14;
      out_K_ss(13, 14) = out_13_14;
      out_K_ss(14, 14) = out_14_14;
      out_K_ss(19, 14) = out_19_14;
      out_K_ss(20, 14) = out_20_14;
      out_K_ss(24, 14) = out_24_14;
      out_K_ss(9, 15) = out_9_15;
      out_K_ss(15, 15) = out_15_15;
      out_K_ss(16, 15) = out_16_15;
      out_K_ss(21, 15) = out_21_15;
      out_K_ss(22, 15) = out_22_15;
      out_K_ss(23, 15) = out_23_15;
      out_K_ss(9, 16) = out_9_16;
      out_K_ss(15, 16) = out_15_16;
      out_K_ss(16, 16) = out_16_16;
      out_K_ss(7, 18) = out_7_18;
      out_K_ss(13, 18) = out_13_18;
      out_K_ss(18, 18) = out_18_18;
      out_K_ss(1, 19) = out_1_19;
      out_K_ss(6, 19) = out_6_19;
      out_K_ss(13, 19) = out_13_19;
      out_K_ss(14, 19) = out_14_19;
      out_K_ss(19, 19) = out_19_19;
      out_K_ss(20, 19) = out_20_19;
      out_K_ss(24, 19) = out_24_19;
      out_K_ss(2, 20) = out_2_20;
      out_K_ss(13, 20) = out_13_20;
      out_K_ss(14, 20) = out_14_20;
      out_K_ss(19, 20) = out_19_20;
      out_K_ss(20, 20) = out_20_20;
      out_K_ss(24, 20) = out_24_20;
      out_K_ss(3, 21) = out_3_21;
      out_K_ss(4, 21) = out_4_21;
      out_K_ss(15, 21) = out_15_21;
      out_K_ss(21, 21) = out_21_21;
      out_K_ss(22, 21) = out_22_21;
      out_K_ss(23, 21) = out_23_21;
      out_K_ss(15, 22) = out_15_22;
      out_K_ss(21, 22) = out_21_22;
      out_K_ss(22, 22) = out_22_22;
      out_K_ss(23, 22) = out_23_22;
      out_K_ss(15, 23) = out_15_23;
      out_K_ss(21, 23) = out_21_23;
      out_K_ss(22, 23) = out_22_23;
      out_K_ss(23, 23) = out_23_23;
      out_K_ss(13, 24) = out_13_24;
      out_K_ss(14, 24) = out_14_24;
      out_K_ss(19, 24) = out_19_24;
      out_K_ss(20, 24) = out_20_24;
      out_K_ss(24, 24) = out_24_24;
    end % K_ss
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_d = d( this, ~, in_2 )
      % Evaluate the deformation vector d.

      % Extract properties
      % No properties

      % Extract inputs
      V_67 = in_2(67);
      V_88 = in_2(88);
      V_149 = in_2(149);
      V_164 = in_2(164);
      V_171 = in_2(171);
      V_175 = in_2(175);
      V_179 = in_2(179);
      V_187 = in_2(187);
      V_188 = in_2(188);
      V_189 = in_2(189);
      V_190 = in_2(190);
      V_191 = in_2(191);
      V_192 = in_2(192);
      V_194 = in_2(194);
      V_195 = in_2(195);
      V_197 = in_2(197);
      V_199 = in_2(199);
      V_201 = in_2(201);
      V_203 = in_2(203);

      % Evaluate function
      out_1 = 0.1e-2;
      out_2 = -0.1e-2;
      out_7 = 0.5e-2;
      out_8 = -0.5e-2;
      out_13 = 0.14e-1;
      out_14 = -0.14e-1;
      out_19 = 0.7e-2;
      out_20 = -0.7e-2;
      out_25 = -0.339011601590253897e0 * V_194;
      out_26 = V_189 / V_171;
      out_30 = V_203 * 0.128150896406816317e0;
      out_31 = -V_191 / V_149;
      out_32 = V_192 / V_67;
      out_36 = -0.154385888503594082e0 * V_199;
      out_37 = V_188 / V_175;
      out_38 = V_187 / V_179;
      out_42 = -0.207439051798619378e0 * V_201;
      out_43 = -V_190 / V_164;
      out_44 = -V_195 / V_88;
      out_48 = V_197 * 0.127123376202358113e0;

      % Store outputs
      out_d = sparse(48, 1);
      out_d(1) = out_1;
      out_d(2) = out_2;
      out_d(7) = out_7;
      out_d(8) = out_8;
      out_d(13) = out_13;
      out_d(14) = out_14;
      out_d(19) = out_19;
      out_d(20) = out_20;
      out_d(25) = out_25;
      out_d(26) = out_26;
      out_d(30) = out_30;
      out_d(31) = out_31;
      out_d(32) = out_32;
      out_d(36) = out_36;
      out_d(37) = out_37;
      out_d(38) = out_38;
      out_d(42) = out_42;
      out_d(43) = out_43;
      out_d(44) = out_44;
      out_d(48) = out_48;
    end % d
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_d_f = d_f( this, ~, in_2 )
      % Evaluate the deformation vector d_f.

      % Extract properties
      % No properties

      % Extract inputs
      V_67 = in_2(67);
      V_88 = in_2(88);
      V_149 = in_2(149);
      V_164 = in_2(164);
      V_171 = in_2(171);
      V_175 = in_2(175);
      V_179 = in_2(179);
      V_187 = in_2(187);
      V_188 = in_2(188);
      V_189 = in_2(189);
      V_190 = in_2(190);
      V_191 = in_2(191);
      V_192 = in_2(192);
      V_194 = in_2(194);
      V_195 = in_2(195);
      V_197 = in_2(197);
      V_199 = in_2(199);
      V_201 = in_2(201);
      V_203 = in_2(203);

      % Evaluate function
      out_1 = -0.339011601590253897e0 * V_194;
      out_2 = V_189 / V_171;
      out_6 = V_203 * 0.128150896406816317e0;
      out_7 = -V_191 / V_149;
      out_8 = V_192 / V_67;
      out_12 = -0.154385888503594082e0 * V_199;
      out_13 = V_188 / V_175;
      out_14 = V_187 / V_179;
      out_18 = -0.207439051798619378e0 * V_201;
      out_19 = -V_190 / V_164;
      out_20 = -V_195 / V_88;
      out_24 = V_197 * 0.127123376202358113e0;

      % Store outputs
      out_d_f = zeros(24, 1);
      out_d_f(1) = out_1;
      out_d_f(2) = out_2;
      out_d_f(6) = out_6;
      out_d_f(7) = out_7;
      out_d_f(8) = out_8;
      out_d_f(12) = out_12;
      out_d_f(13) = out_13;
      out_d_f(14) = out_14;
      out_d_f(18) = out_18;
      out_d_f(19) = out_19;
      out_d_f(20) = out_20;
      out_d_f(24) = out_24;
    end % d_f
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_d_s = d_s( ~, ~, ~ )
      % Evaluate the deformation vector d_s.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_d_s = sparse(24, 1);
      out_d_s(1) = .1e-2;
      out_d_s(2) = -.1e-2;
      out_d_s(7) = .5e-2;
      out_d_s(8) = -.5e-2;
      out_d_s(13) = .14e-1;
      out_d_s(14) = -.14e-1;
      out_d_s(19) = .7e-2;
      out_d_s(20) = -.7e-2;
    end % d_s
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_f = f( this, ~, in_2 )
      % Evaluate the force vector f.

      % Extract properties
      E = this.m_data.E;
      A = this.m_data.A;
      I_z = this.m_data.I_z;

      % Extract inputs
      V_67 = in_2(67);
      V_88 = in_2(88);
      V_149 = in_2(149);
      V_164 = in_2(164);
      V_171 = in_2(171);
      V_175 = in_2(175);
      V_179 = in_2(179);
      V_187 = in_2(187);
      V_188 = in_2(188);
      V_189 = in_2(189);
      V_190 = in_2(190);
      V_191 = in_2(191);
      V_192 = in_2(192);
      V_194 = in_2(194);
      V_195 = in_2(195);
      V_197 = in_2(197);
      V_199 = in_2(199);
      V_201 = in_2(201);
      V_203 = in_2(203);

      % Evaluate function
      t1 = A * 0.1e1;
      t4 = E * (t1 + I_z * 0.937500000000000355e1);
      t9 = (t1 - 0.937500000000000355e1 * I_z) * E;
      t11 = V_189 / V_171;
      t14 = E * I_z;
      t15 = V_203 * t14;
      t21 = 0.1e-2 * E * (A * 0.138388347648318399e1 + I_z * 0.866140759202985144e1);
      t23 = 0.828640759202985144e1 * I_z;
      t26 = 0.1e-2 * (A * 0.883883476483183994e0 - t23) * E;
      t27 = E * A;
      out_1 = V_194 * t4 * 0.299646752981725661e0 - 0.883883476483183883e0 * t11 * t9 - 0.849528448728698926e0 * t15 + t21 - t26 - 0.25e-2 * t27 - 0.2625e-2 * t14;
      out_2 = V_194 * t9 * 0.299646752981725661e0 - 0.883883476483183883e0 * t11 * t4 + t15 * 0.849528448728698926e0 + t26 - t21 + 0.1875e-2 * t14 + 0.35e-2 * t27;
      out_6 = 0.450e-2 * t14;
      t41 = V_191 / V_149;
      t47 = (A * 0.589255650988789403e0 - 0.245523187911995455e1 * I_z) * E;
      t49 = V_192 / V_67;
      t51 = V_199 * t14;
      t53 = 0.5e-3 * t27;
      t61 = (t1 - 0.416666666666666430e1 * I_z) * E;
      out_7 = t41 * (t1 + I_z * 0.416666666666666163e1) * E * 0.589255650988789625e0 + t49 * t47 + t51 * 0.454863786168340001e0 - t53 + 0.5e-2 * E * (A * 0.108925565098878963e1 + I_z * 0.256634299023106482e1) + t61 * 0.294627825494394712e-2 - 0.155555555555555547e-2 * t14;
      t71 = 0.375e-3 * t14;
      out_8 = -t41 * t47 - 0.589255650988789292e0 * t49 * (t1 + I_z * 0.416666666666666607e1) * E + t51 * 0.454863786168340112e0 + t71 - 0.294627825494394712e-2 * t61 - 0.5e-2 * E * (I_z * 0.283023187911995500e1 + A * 0.922588984322122663e0) + t27 * 0.466666666666666619e-2;
      out_12 = 0.300e-2 * t14;
      t83 = V_188 / V_175;
      t88 = (t1 - 0.239999999999999991e1 * I_z) * E;
      t90 = V_187 / V_179;
      t93 = V_201 * t14;
      t97 = A * 0.536656314599949447e0;
      t104 = 0.14e-1 * (t97 - 0.965981366279908937e0 * I_z) * E;
      t107 = (t1 + I_z * 0.149999999999999994e0) * E;
      t111 = (t1 - 0.599999999999999978e0 * I_z) * E;
      out_13 = -0.178885438199983149e0 * t83 * (t1 + I_z * 0.959999999999999964e1) * E - 0.357770876399966298e0 * t90 * t88 - 0.445293908169420549e0 * t93 - 0.555555555555555555e-3 * t14 + 0.14e-1 * (I_z * 0.188207694929094416e1 + t97) * E - t104 - 0.250439613479976411e-2 * t107 + t111 * 0.125219806739988206e-2;
      t130 = (t1 + I_z * 0.239999999999999991e1) * E;
      out_14 = -0.357770876399966298e0 * t83 * t88 - 0.715541752799932596e0 * t90 * (t1 + I_z * 0.599999999999999978e0) * E + t93 * 0.222646954084710275e0 + t27 * 0.166666666666666656e-2 + t104 - 0.14e-1 * E * (A * 0.113831780523325743e1 + I_z * 0.643987577519939292e0) - 0.125219806739988206e-2 * t111 + t130 * 0.626099033699941028e-3;
      out_18 = t14 * 0.299999999999999963e-2;
      t136 = V_190 / V_164;
      t139 = A * 0.883883476483184327e0;
      t143 = V_195 / V_88;
      t145 = V_197 * t14;
      out_19 = t136 * (t1 + I_z * 0.937499999999999112e1) * E * 0.883883476483184660e0 - t143 * (t139 - t23) * E + t145 * 0.842716887750149968e0 - t71 - 0.500879226959952822e-2 * t107 + t111 * 0.250439613479976411e-2 + 0.7e-2 * E * (A * 0.124165435288315096e1 + I_z * 0.871507322348984204e1) + (t1 - 0.116015589901886891e2 * I_z) * E * 0.493498626798240855e-2;
      out_20 = -t136 * (t139 - 0.828640759202984967e1 * I_z) * E + t143 * E * (t1 + I_z * 0.937500000000000533e1) * 0.883883476483183883e0 + t145 * 0.842716887750150190e0 + t53 - 0.250439613479976411e-2 * t111 + t130 * 0.125219806739988206e-2 - 0.493498626798240855e-2 * (t1 - 0.116015589901886855e2 * I_z) * E - 0.7e-2 * E * (A * 0.147332619558317557e1 + I_z * 0.850107011786983335e1);
      out_24 = t14 * 0.563489130329947185e-2;

      % Store outputs
      out_f = sparse(48, 1);
      out_f(1) = out_1;
      out_f(2) = out_2;
      out_f(6) = out_6;
      out_f(7) = out_7;
      out_f(8) = out_8;
      out_f(12) = out_12;
      out_f(13) = out_13;
      out_f(14) = out_14;
      out_f(18) = out_18;
      out_f(19) = out_19;
      out_f(20) = out_20;
      out_f(24) = out_24;
    end % f
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_f_f = f_f( ~, ~, ~ )
      % Evaluate the force vector f_f.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_f_f = sparse(24, 1);
    end % f_f
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_f_s = f_s( this, ~, in_2 )
      % Evaluate the force vector f_s.

      % Extract properties
      E = this.m_data.E;
      A = this.m_data.A;
      I_z = this.m_data.I_z;

      % Extract inputs
      V_67 = in_2(67);
      V_88 = in_2(88);
      V_149 = in_2(149);
      V_164 = in_2(164);
      V_171 = in_2(171);
      V_175 = in_2(175);
      V_179 = in_2(179);
      V_187 = in_2(187);
      V_188 = in_2(188);
      V_189 = in_2(189);
      V_190 = in_2(190);
      V_191 = in_2(191);
      V_192 = in_2(192);
      V_194 = in_2(194);
      V_195 = in_2(195);
      V_197 = in_2(197);
      V_199 = in_2(199);
      V_201 = in_2(201);
      V_203 = in_2(203);

      % Evaluate function
      t1 = A * 0.1e1;
      t4 = E * (t1 + I_z * 0.937500000000000355e1);
      t9 = (t1 - 0.937500000000000355e1 * I_z) * E;
      t11 = V_189 / V_171;
      t14 = E * I_z;
      t15 = V_203 * t14;
      t21 = 0.1e-2 * E * (A * 0.138388347648318399e1 + I_z * 0.866140759202985144e1);
      t23 = 0.828640759202985144e1 * I_z;
      t26 = 0.1e-2 * (A * 0.883883476483183994e0 - t23) * E;
      t27 = E * A;
      out_1 = V_194 * t4 * 0.299646752981725661e0 - 0.883883476483183883e0 * t11 * t9 - 0.849528448728698926e0 * t15 + t21 - t26 - 0.25e-2 * t27 - 0.2625e-2 * t14;
      out_2 = V_194 * t9 * 0.299646752981725661e0 - 0.883883476483183883e0 * t11 * t4 + t15 * 0.849528448728698926e0 + t26 - t21 + 0.1875e-2 * t14 + 0.35e-2 * t27;
      out_6 = 0.450e-2 * t14;
      t41 = V_191 / V_149;
      t47 = (A * 0.589255650988789403e0 - 0.245523187911995455e1 * I_z) * E;
      t49 = V_192 / V_67;
      t51 = V_199 * t14;
      t53 = 0.5e-3 * t27;
      t61 = (t1 - 0.416666666666666430e1 * I_z) * E;
      out_7 = t41 * (t1 + I_z * 0.416666666666666163e1) * E * 0.589255650988789625e0 + t49 * t47 + t51 * 0.454863786168340001e0 - t53 + 0.5e-2 * E * (A * 0.108925565098878963e1 + I_z * 0.256634299023106482e1) + t61 * 0.294627825494394712e-2 - 0.155555555555555547e-2 * t14;
      t71 = 0.375e-3 * t14;
      out_8 = -t41 * t47 - 0.589255650988789292e0 * t49 * (t1 + I_z * 0.416666666666666607e1) * E + t51 * 0.454863786168340112e0 + t71 - 0.294627825494394712e-2 * t61 - 0.5e-2 * E * (I_z * 0.283023187911995500e1 + A * 0.922588984322122663e0) + t27 * 0.466666666666666619e-2;
      out_12 = 0.300e-2 * t14;
      t83 = V_188 / V_175;
      t88 = (t1 - 0.239999999999999991e1 * I_z) * E;
      t90 = V_187 / V_179;
      t93 = V_201 * t14;
      t97 = A * 0.536656314599949447e0;
      t104 = 0.14e-1 * (t97 - 0.965981366279908937e0 * I_z) * E;
      t107 = (t1 + I_z * 0.149999999999999994e0) * E;
      t111 = (t1 - 0.599999999999999978e0 * I_z) * E;
      out_13 = -0.178885438199983149e0 * t83 * (t1 + I_z * 0.959999999999999964e1) * E - 0.357770876399966298e0 * t90 * t88 - 0.445293908169420549e0 * t93 - 0.555555555555555555e-3 * t14 + 0.14e-1 * (I_z * 0.188207694929094416e1 + t97) * E - t104 - 0.250439613479976411e-2 * t107 + t111 * 0.125219806739988206e-2;
      t130 = (t1 + I_z * 0.239999999999999991e1) * E;
      out_14 = -0.357770876399966298e0 * t83 * t88 - 0.715541752799932596e0 * t90 * (t1 + I_z * 0.599999999999999978e0) * E + t93 * 0.222646954084710275e0 + t27 * 0.166666666666666656e-2 + t104 - 0.14e-1 * E * (A * 0.113831780523325743e1 + I_z * 0.643987577519939292e0) - 0.125219806739988206e-2 * t111 + t130 * 0.626099033699941028e-3;
      out_18 = t14 * 0.299999999999999963e-2;
      t136 = V_190 / V_164;
      t139 = A * 0.883883476483184327e0;
      t143 = V_195 / V_88;
      t145 = V_197 * t14;
      out_19 = t136 * (t1 + I_z * 0.937499999999999112e1) * E * 0.883883476483184660e0 - t143 * (t139 - t23) * E + t145 * 0.842716887750149968e0 - t71 - 0.500879226959952822e-2 * t107 + t111 * 0.250439613479976411e-2 + 0.7e-2 * E * (A * 0.124165435288315096e1 + I_z * 0.871507322348984204e1) + (t1 - 0.116015589901886891e2 * I_z) * E * 0.493498626798240855e-2;
      out_20 = -t136 * (t139 - 0.828640759202984967e1 * I_z) * E + t143 * E * (t1 + I_z * 0.937500000000000533e1) * 0.883883476483183883e0 + t145 * 0.842716887750150190e0 + t53 - 0.250439613479976411e-2 * t111 + t130 * 0.125219806739988206e-2 - 0.493498626798240855e-2 * (t1 - 0.116015589901886855e2 * I_z) * E - 0.7e-2 * E * (A * 0.147332619558317557e1 + I_z * 0.850107011786983335e1);
      out_24 = t14 * 0.563489130329947185e-2;

      % Store outputs
      out_f_s = zeros(24, 1);
      out_f_s(1) = out_1;
      out_f_s(2) = out_2;
      out_f_s(6) = out_6;
      out_f_s(7) = out_7;
      out_f_s(8) = out_8;
      out_f_s(12) = out_12;
      out_f_s(13) = out_13;
      out_f_s(14) = out_14;
      out_f_s(18) = out_18;
      out_f_s(19) = out_19;
      out_f_s(20) = out_20;
      out_f_s(24) = out_24;
    end % f_s
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_f_r = f_r( ~, ~, ~ )
      % Evaluate the force vector f_r.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_f_r = sparse(24, 1);
    end % f_r
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_perm = perm( ~ )
      % Evaluate the permutation vector.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_perm = zeros(48, 1);
      out_perm(1) = 25;
      out_perm(2) = 26;
      out_perm(3) = 27;
      out_perm(4) = 28;
      out_perm(5) = 29;
      out_perm(6) = 30;
      out_perm(7) = 31;
      out_perm(8) = 32;
      out_perm(9) = 33;
      out_perm(10) = 34;
      out_perm(11) = 35;
      out_perm(12) = 36;
      out_perm(13) = 37;
      out_perm(14) = 38;
      out_perm(15) = 39;
      out_perm(16) = 40;
      out_perm(17) = 41;
      out_perm(18) = 42;
      out_perm(19) = 43;
      out_perm(20) = 44;
      out_perm(21) = 45;
      out_perm(22) = 46;
      out_perm(23) = 47;
      out_perm(24) = 48;
      out_perm(25) = 1;
      out_perm(26) = 2;
      out_perm(27) = 3;
      out_perm(28) = 4;
      out_perm(29) = 5;
      out_perm(30) = 6;
      out_perm(31) = 7;
      out_perm(32) = 8;
      out_perm(33) = 9;
      out_perm(34) = 10;
      out_perm(35) = 11;
      out_perm(36) = 12;
      out_perm(37) = 13;
      out_perm(38) = 14;
      out_perm(39) = 15;
      out_perm(40) = 16;
      out_perm(41) = 17;
      out_perm(42) = 18;
      out_perm(43) = 19;
      out_perm(44) = 20;
      out_perm(45) = 21;
      out_perm(46) = 22;
      out_perm(47) = 23;
      out_perm(48) = 24;
    end % perm
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_unperm = unperm( ~ )
      % Evaluate the unpermutation vector.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_unperm = zeros(48, 1);
      out_unperm(1) = 25;
      out_unperm(2) = 26;
      out_unperm(3) = 27;
      out_unperm(4) = 28;
      out_unperm(5) = 29;
      out_unperm(6) = 30;
      out_unperm(7) = 31;
      out_unperm(8) = 32;
      out_unperm(9) = 33;
      out_unperm(10) = 34;
      out_unperm(11) = 35;
      out_unperm(12) = 36;
      out_unperm(13) = 37;
      out_unperm(14) = 38;
      out_unperm(15) = 39;
      out_unperm(16) = 40;
      out_unperm(17) = 41;
      out_unperm(18) = 42;
      out_unperm(19) = 43;
      out_unperm(20) = 44;
      out_unperm(21) = 45;
      out_unperm(22) = 46;
      out_unperm(23) = 47;
      out_unperm(24) = 48;
      out_unperm(25) = 1;
      out_unperm(26) = 2;
      out_unperm(27) = 3;
      out_unperm(28) = 4;
      out_unperm(29) = 5;
      out_unperm(30) = 6;
      out_unperm(31) = 7;
      out_unperm(32) = 8;
      out_unperm(33) = 9;
      out_unperm(34) = 10;
      out_unperm(35) = 11;
      out_unperm(36) = 12;
      out_unperm(37) = 13;
      out_unperm(38) = 14;
      out_unperm(39) = 15;
      out_unperm(40) = 16;
      out_unperm(41) = 17;
      out_unperm(42) = 18;
      out_unperm(43) = 19;
      out_unperm(44) = 20;
      out_unperm(45) = 21;
      out_unperm(46) = 22;
      out_unperm(47) = 23;
      out_unperm(48) = 24;
    end % unperm
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_v = v( this, ~ )
      % Evaluate the veiling vector.

      % Extract properties
      E = this.m_data.E;
      A = this.m_data.A;
      I_z = this.m_data.I_z;

      % Extract inputs
      % No inputs

      % Evaluate function
      V_1 = E * (A * 0.175493145118924510e1 + I_z * 0.110062134602554060e2);
      V_2 = (A * 0.107245668334682254e1 - 0.883036876567496165e1 * I_z) * E;
      t7 = A * 0.1e1;
      V_3 = (t7 - 0.288461538461538280e1 * I_z) * E * 0.1e1;
      V_4 = (t7 + I_z * 0.721153846153845848e2) * E * 0.1e1;
      V_5 = V_2;
      V_6 = E * (A * 0.182674951080137671e1 + I_z * 0.101313109378699835e2);
      V_7 = (t7 + I_z * 0.115384615384615266e0) * E * 0.1e1;
      V_8 = V_3;
      V_9 = V_8;
      V_10 = V_7;
      V_11 = E * (A * 0.153573828682921132e1 + I_z * 0.364349705550918035e1);
      V_12 = (t7 - 0.523972397033988901e1 * I_z) * E * 0.1e1;
      V_13 = (t7 + I_z * 0.298477157360405386e3) * E * 0.1e1;
      V_14 = E * (t7 - 0.152284263959390898e1 * I_z) * 0.1e1;
      V_15 = V_4;
      V_16 = V_9;
      V_17 = V_12;
      V_18 = E * (A * 0.133582419071838454e1 + I_z * 0.518054526235397894e1);
      V_19 = (t7 - 0.152284263959390809e1 * I_z) * E * 0.1e1;
      V_20 = (t7 + I_z * 0.776960530405057005e-2) * E * 0.1e1;
      V_21 = V_13;
      V_22 = V_14;
      V_23 = E * (A * 0.937080700917307774e0 + I_z * 0.301526730134719312e1);
      t44 = A * 0.682795538145751335e0;
      V_24 = (t44 - 0.153661423413816989e1 * I_z) * E;
      V_25 = (t7 + I_z * 0.289557821077396360e0) * E * 0.1e1;
      V_26 = (t7 - 0.218978102189781110e1 * I_z) * E * 0.1e1;
      V_27 = V_19;
      V_28 = V_20;
      V_29 = (t44 - 0.153661423413817011e1 * I_z) * E;
      V_30 = E * (A * 0.152417464767846544e1 + I_z * 0.208719459850250866e1);
      V_31 = (t7 - 0.218978102189781154e1 * I_z) * E * 0.1e1;
      V_32 = (t7 + I_z * 0.165602189781022062e2) * E * 0.1e1;
      V_33 = V_25;
      V_34 = V_26;
      V_35 = E * (A * 0.163846213767828042e1 + I_z * 0.102410128561081084e2);
      V_36 = (t7 - 0.126097771662746219e2 * I_z) * E * 0.1e1;
      V_37 = V_31;
      V_38 = V_32;
      V_39 = (t7 - 0.126097771662746254e2 * I_z) * E * 0.1e1;
      V_40 = E * (A * 0.181699580633818281e1 + I_z * 0.993876962384393181e1);
      t76 = E * I_z;
      V_41 = -V_1 + t76 * 0.563163118975266652e1;
      t78 = t76 * 0.386178025490121035e1;
      V_42 = V_2 + t78;
      V_43 = V_5 + t78;
      V_44 = -V_6 + t76 * 0.264813980792656123e1;
      V_45 = -V_35 + t76 * 0.556210487876806714e0;
      V_46 = -V_11 + t76 * 0.478619535466437762e0;
      V_47 = -0.350050022813946038e0 * V_12 + t76 * 0.341871096761741586e-1;
      V_48 = -0.506324213112048713e-1 * V_14 + t76 * 0.304007521810031656e0;
      V_49 = V_13 * 0.361660152222892427e-2 + t76 * 0.197769727505973852e0;
      V_50 = -0.350050022813946038e0 * V_17 + t76 * 0.341871096761741655e-1;
      V_51 = -V_18 + t76 * 0.244193640544101455e-2;
      V_52 = V_20 * 0.708853898356867518e0 + t76 * 0.217148229864308553e-1;
      V_53 = -0.506324213112048852e-1 * V_19 + t76 * 0.141264091075695777e-1;
      V_54 = -0.506324213112048852e-1 * V_27 + t76 * 0.304007521810031600e0;
      V_55 = V_28 * 0.708853898356867518e0 + t76 * 0.217148229864308519e-1;
      V_56 = -V_30 + t76 * 0.193098205293706943e0;
      V_57 = V_29 + t76 * 0.125618534750244010e0;
      V_58 = V_21 * 0.361660152222892427e-2 + t76 * 0.197769727505973769e0;
      V_59 = -0.506324213112048713e-1 * V_22 + t76 * 0.141264091075695691e-1;
      V_60 = V_24 + t76 * 0.125618534750243954e0;
      V_61 = -V_23 + t76 * 0.817201602096532947e-1;
      V_62 = V_46 + t76 * 0.190421547658820778e1;
      t108 = t76 * 0.638065211446864761e-1;
      V_63 = -V_47 + t108;
      t110 = t76 * 0.306734825907253594e0;
      V_64 = -0.942866034318192714e0 * V_10 + t110;
      V_65 = V_9 * 0.188573206863638515e0 + t76 * 0.153367412953626814e1;
      V_66 = -V_50 + t108;
      V_67 = V_51 + t76 * 0.213803122106844771e-2;
      t115 = t76 * 0.102780816539363388e-1;
      V_68 = -0.188573206863638515e0 * V_16 + t115;
      t117 = t76 * 0.513904082696816991e-1;
      V_69 = V_15 * 0.377146413727276961e-1 + t117;
      V_70 = -0.942866034318192714e0 * V_7 + t110;
      V_71 = -0.188573206863638515e0 * V_8 + t115;
      V_72 = V_44 + t76 * 0.494094573755528843e-1;
      t121 = t76 * 0.247047286877764449e0;
      V_73 = V_43 + t121;
      V_74 = V_3 * 0.188573206863638515e0 + t76 * 0.153367412953626836e1;
      V_75 = V_4 * 0.377146413727276961e-1 + t117;
      V_76 = V_42 + t121;
      V_77 = V_41 + t76 * 0.123523643438882225e1;
      V_78 = V_56 + t76 * 0.538383320704578505e0;
      t128 = t76 * 0.193003806459713512e1;
      V_79 = V_31 * 0.274392240434580159e0 + t128;
      V_80 = V_32 * 0.997789965216654834e-1 + t76 * 0.119587899090907412e1;
      V_81 = V_57 + t76 * 0.195775752983483070e0;
      V_82 = V_34 * 0.274392240434580159e0 + t128;
      V_83 = V_45 + t76 * 0.691894935734433947e1;
      t135 = t76 * 0.428707926925733851e1;
      V_84 = V_36 * 0.609491236048604224e0 + t135;
      V_85 = -0.754578661195095646e0 * V_33 + t76 * 0.701832023489867174e0;
      V_86 = V_38 * 0.997789965216654834e-1 + t76 * 0.119587899090907390e1;
      V_87 = V_39 * 0.609491236048604224e0 + t135;
      V_88 = -V_40 + t76 * 0.265633519074496638e1;
      t143 = t76 * 0.434865087603299505e0;
      V_89 = -0.274392240434580159e0 * V_37 + t143;
      V_90 = V_60 + t76 * 0.195775752983483042e0;
      V_91 = -0.754578661195095646e0 * V_25 + t76 * 0.701832023489867063e0;
      V_92 = -0.274392240434580159e0 * V_26 + t143;
      V_93 = V_61 + t76 * 0.711911829030847237e-1;
      t149 = 0.1e1 / V_88;
      V_94 = A * E * t149 * 0.1e1;
      V_95 = t149 * (V_78 * V_88 - V_80 * V_86);
      V_96 = t149 * (V_79 * V_88 - V_80 * V_87);
      V_97 = t149 * (V_80 * V_89 - V_81 * V_88);
      V_98 = t149 * (V_82 * V_88 - V_84 * V_86);
      V_99 = t149 * (V_83 * V_88 - V_84 * V_87);
      V_100 = t76 * 0.176985093485145595e1 + V_94 * V_84 * 0.833333333333333259e0;
      V_101 = t149 * (V_84 * V_89 - V_85 * V_88);
      V_102 = t149 * (V_86 * V_92 - V_88 * V_90);
      V_103 = t149 * (V_87 * V_92 - V_88 * V_91);
      V_104 = t149 * (V_88 * V_93 - V_89 * V_92);
      t183 = E * A;
      V_105 = t183 * V_86 * t149 * 0.1e1;
      V_106 = t149 * (I_z * V_88 * 0.176985093485145573e1 + V_87 * A * 0.833333333333333259e0) * E;
      V_107 = -V_77 + V_94 * E * A * 0.694444444444444309e0;
      V_108 = t183 * V_89 * t149 * 0.1e1;
      t196 = 0.1e1 / E;
      t197 = 0.1e1 / I_z;
      t198 = t197 * t196;
      V_109 = V_71 * t198 * 0.1e1;
      V_110 = V_72 * t198 * 0.1e1;
      V_111 = V_73 * t198 * 0.1e1;
      V_112 = V_70 * t198 * 0.1e1;
      V_113 = t76 * 0.294975155808575895e1 - 0.339011601590253897e0 * V_110 * V_99;
      V_114 = -V_100 + V_111 * V_99 * 0.339011601590253897e0;
      V_115 = V_55 + V_109 * V_96 * 0.339011601590253897e0;
      V_116 = V_94 * V_80 * 0.833333333333333259e0 - 0.339011601590253897e0 * V_111 * V_96;
      V_117 = V_54 - 0.339011601590253897e0 * V_112 * V_96;
      V_118 = V_59 - 0.339011601590253897e0 * V_109 * V_103;
      V_119 = V_94 * V_92 * 0.833333333333333259e0 + V_111 * V_103 * 0.339011601590253897e0;
      V_120 = V_58 + V_112 * V_103 * 0.339011601590253897e0;
      V_121 = V_75 - 0.339011601590253897e0 * V_109 * V_106;
      V_122 = V_76 - 0.339011601590253897e0 * V_110 * V_106;
      V_123 = V_107 + V_111 * V_106 * 0.339011601590253897e0;
      V_124 = V_74 - 0.339011601590253897e0 * V_112 * V_106;
      t237 = 0.1e1 / V_67;
      V_125 = t237 * (-V_98 * V_67 + V_52 * V_109 * V_99 * 0.339011601590253897e0);
      V_126 = t237 * (V_113 * V_67 + V_68 * V_109 * V_99 * 0.339011601590253897e0);
      V_127 = t237 * (V_114 * V_67 - 0.339011601590253897e0 * V_69 * V_109 * V_99);
      V_128 = t237 * (V_101 * V_67 + V_53 * V_109 * V_99 * 0.339011601590253897e0);
      V_129 = t237 * (-0.339011601590253897e0 * V_112 * V_67 + V_66 * V_109 * 0.339011601590253897e0) * V_99;
      V_130 = t237 * (V_115 * V_52 - V_67 * V_95);
      V_131 = t237 * (V_110 * V_96 * V_67 * 0.339011601590253897e0 - V_68 * V_115);
      V_132 = t237 * (V_115 * V_69 + V_116 * V_67);
      V_133 = t237 * (V_115 * V_53 + V_67 * V_97);
      V_134 = t237 * (V_115 * V_66 + V_117 * V_67);
      V_135 = t237 * (V_102 * V_67 + V_118 * V_52);
      V_136 = t237 * (V_110 * V_103 * V_67 * 0.339011601590253897e0 + V_68 * V_118);
      V_137 = t237 * (V_118 * V_69 + V_119 * V_67);
      V_138 = t237 * (-V_104 * V_67 + V_118 * V_53);
      V_139 = t237 * (V_118 * V_66 + V_120 * V_67);
      V_140 = t237 * (V_105 * V_67 * 0.833333333333333259e0 + V_52 * V_121);
      V_141 = t237 * (-V_121 * V_68 + V_122 * V_67);
      V_142 = t237 * (V_121 * V_69 + V_123 * V_67);
      V_143 = t237 * (V_108 * V_67 * 0.833333333333333259e0 + V_53 * V_121);
      V_144 = t237 * (V_121 * V_66 - V_124 * V_67);
      V_145 = t237 * (V_48 * V_67 + V_52 * V_63);
      V_146 = t237 * (V_63 * V_68 - V_64 * V_67);
      V_147 = t237 * (V_63 * V_69 - V_65 * V_67);
      V_148 = t237 * (V_49 * V_67 + V_53 * V_63);
      V_149 = t237 * (V_62 * V_67 - V_63 * V_66);
      t328 = 0.1e1 / V_149;
      V_150 = t328 * (V_131 * V_149 - V_134 * V_146);
      V_151 = t328 * (V_132 * V_149 + V_134 * V_147);
      V_152 = t328 * (V_133 * V_149 + V_134 * V_148);
      V_153 = t328 * (V_130 * V_149 + V_134 * V_145);
      V_154 = t328 * (V_136 * V_149 + V_139 * V_146);
      V_155 = t328 * (V_137 * V_149 + V_139 * V_147);
      V_156 = t328 * (V_138 * V_149 + V_139 * V_148);
      V_157 = t328 * (V_135 * V_149 + V_139 * V_145);
      V_158 = t328 * (V_141 * V_149 - V_144 * V_146);
      V_159 = t328 * (V_142 * V_149 + V_144 * V_147);
      V_160 = t328 * (V_143 * V_149 + V_144 * V_148);
      V_161 = t328 * (V_140 * V_149 + V_144 * V_145);
      V_162 = t328 * (V_126 * V_149 + V_129 * V_146);
      V_163 = t328 * (V_127 * V_149 - V_129 * V_147);
      V_164 = t328 * (V_128 * V_149 + V_129 * V_148);
      V_165 = t328 * (V_125 * V_149 + V_129 * V_145);
      t377 = 0.1e1 / V_164;
      V_166 = t377 * (V_155 * V_164 + V_156 * V_163);
      V_167 = t377 * (V_154 * V_164 - V_156 * V_162);
      V_168 = t377 * (V_156 * V_165 - V_157 * V_164);
      V_169 = t377 * (V_159 * V_164 + V_160 * V_163);
      V_170 = t377 * (V_158 * V_164 + V_160 * V_162);
      V_171 = t377 * (V_160 * V_165 - V_161 * V_164);
      V_172 = t377 * (V_151 * V_164 + V_152 * V_163);
      V_173 = t377 * (V_150 * V_164 + V_152 * V_162);
      V_174 = t377 * (V_152 * V_165 - V_153 * V_164);
      t405 = 0.1e1 / V_171;
      V_175 = t405 * (V_167 * V_171 + V_168 * V_170);
      V_176 = t405 * (V_166 * V_171 - V_168 * V_169);
      V_177 = t405 * (V_170 * V_174 - V_171 * V_173);
      V_178 = t405 * (V_169 * V_174 - V_171 * V_172);
      t418 = 0.1e1 / V_175;
      V_179 = t418 * (V_175 * V_178 + V_176 * V_177);
      V_180 = t183 * 0.123743686707645777e-1 + t76 * 0.208166817117216851e-16;
      t421 = V_88 * E;
      t424 = V_88 * t76;
      V_181 = t149 * (A * t421 * 0.123743686707645829e-1 - 0.353970186970292700e-2 * t424 + V_87 * V_180);
      V_182 = t183 * 0.589255650988789424e-2 - 0.101458389445861427e-2 * t76 - 0.339011601590253897e0 * V_109 * V_181;
      t435 = V_67 * t76;
      V_183 = t237 * (E * V_67 * A * 0.589255650988789511e-2 - 0.142041745224206449e-1 * t435 + V_112 * V_181 * V_67 * 0.339011601590253897e0 + V_66 * V_182);
      t442 = V_149 * V_67;
      t446 = V_67 * V_88;
      t447 = V_149 * t446;
      t453 = V_88 * V_149;
      t459 = t328 * t237;
      V_184 = t459 * t149 * (A * t442 * t421 * 0.250439613479976411e-2 - 0.301940166990884301e-1 * t447 * t76 + t442 * V_89 * V_180 + t453 * V_53 * V_182 + t446 * V_148 * V_183);
      t461 = V_164 * V_149;
      t465 = V_164 * t442;
      V_185 = t377 * t459 * t149 * (A * t461 * V_67 * t421 * 0.500879226959952822e-2 + t465 * t424 * 0.900950498279251034e-2 - t465 * V_86 * V_180 - V_164 * t453 * V_52 * V_182 - V_164 * t446 * V_145 * V_183 + t447 * V_165 * V_184);
      t481 = V_171 * t461;
      t495 = V_171 * t442;
      V_186 = t405 * t377 * t328 * t237 * (t481 * t435 * 0.884925467425728106e-2 - 0.339011601590253897e0 * t481 * V_110 * V_181 * V_67 - t481 * V_68 * V_182 - V_146 * V_183 * V_67 * V_164 * V_171 + t495 * V_162 * V_184 - t465 * V_170 * V_185);
      t503 = V_171 * V_175;
      t504 = t503 * t461;
      t517 = V_164 * V_171;
      t518 = V_175 * t517;
      t525 = V_171 * V_149;
      V_187 = t418 * t405 * t377 * t328 * t237 * (t504 * t435 * 0.530955280455436968e-2 - 0.833333333333333259e0 * t504 * V_94 * V_180 * V_67 - 0.339011601590253897e0 * t504 * V_111 * V_181 * V_67 - t518 * V_69 * V_182 * V_149 - t518 * V_147 * V_183 * V_67 - V_175 * t525 * V_163 * V_184 * V_67 + V_175 * t461 * V_169 * V_185 * V_67 - t481 * V_176 * V_186 * V_67);
      t543 = 0.1e1 / V_179;
      V_188 = t543 * (V_177 * V_187 + V_179 * V_186);
      t548 = V_179 * V_175;
      V_189 = t543 * t418 * (V_168 * V_179 * V_188 - V_174 * V_175 * V_187 + V_185 * t548);
      t553 = V_175 * V_187;
      t565 = t543 * t418;
      V_190 = t565 * t405 * (-V_156 * V_171 * V_179 * V_188 + V_160 * V_175 * V_179 * V_189 + V_152 * V_171 * t553 - V_179 * V_184 * t503);
      t574 = V_171 * V_179 * V_188;
      t577 = V_189 * t548;
      t584 = t543 * t418 * t405;
      V_191 = t584 * t377 * (V_129 * V_171 * V_190 * t548 - V_134 * V_164 * V_187 * t503 + V_139 * V_164 * t574 - V_144 * V_164 * t577 + V_183 * t517 * t548);
      t587 = V_179 * t503;
      t599 = V_175 * V_164;
      t600 = V_179 * t599;
      t604 = V_179 * t517;
      V_192 = t584 * t377 * t328 * (t587 * V_182 * V_149 * V_164 + t587 * V_63 * V_191 * V_164 + t548 * t525 * V_109 * V_99 * V_190 * 0.339011601590253897e0 - t600 * V_121 * V_189 * V_149 + t604 * V_118 * V_188 * V_149 - t518 * V_115 * V_187 * V_149);
      V_193 = t584 * t377 * (-V_179 * V_190 * V_99 * t503 + V_103 * V_164 * t574 - V_106 * V_164 * t577 + V_181 * t517 * t548 + V_96 * t517 * t553);
      V_194 = t197 * t196 * V_193 * 0.1e1;
      V_195 = t584 * t377 * (-t587 * V_180 * V_164 - t587 * V_84 * V_190 + t600 * V_189 * t183 * 0.833333333333333259e0 - t604 * V_92 * V_188 + t518 * V_80 * V_187);
      V_196 = t565 * t377 * t149 * (t548 * V_88 * V_164 * 0.693889390390722838e-17 - 0.457118427036453312e1 * t548 * V_195 * V_164 - 0.737746854753637393e1 * t548 * V_190 * V_88 - 0.748342473912491202e0 * V_188 * V_88 * V_164 * V_179 + t599 * V_187 * V_88 * 0.205794180325935150e1) * t76;
      V_197 = t197 * t196 * V_196 * 0.1e1;
      t666 = V_149 * V_192;
      t669 = V_67 * V_191;
      V_198 = t405 * t459 * (t495 * 0.520417042793042128e-17 + t525 * V_194 * V_67 * 0.191785514627557135e0 + V_171 * t666 * 0.117680151989369097e0 - 0.351199787553486287e1 * V_171 * t669 + V_189 * V_67 * V_149 * 0.282859810295457903e1) * t76;
      V_199 = t197 * t196 * V_198 * 0.1e1;
      V_200 = t565 * t459 * (t548 * t442 * 0.450791304263957748e-1 + t548 * t666 * 0.108498045666867604e0 + t548 * t669 * 0.151897263933614468e1 - 0.627652619063653994e0 * V_188 * V_67 * V_149 * V_179 + V_187 * V_67 * V_149 * V_175 * 0.964814583533031733e0) * t76;
      V_201 = t197 * t196 * V_200 * 0.1e1;
      V_202 = t405 * t377 * (t517 * 0.132582521472477607e-1 + V_194 * V_164 * V_171 * 0.154107647738324771e1 + V_190 * V_171 * 0.208333333333333304e1 + V_189 * V_164 * 0.662912607362388062e1) * t76;
      V_203 = t197 * t196 * V_202 * 0.1e1;

      % Store outputs
      out_v = zeros(203, 1);
      out_v(1) = V_1;
      out_v(2) = V_2;
      out_v(3) = V_3;
      out_v(4) = V_4;
      out_v(5) = V_5;
      out_v(6) = V_6;
      out_v(7) = V_7;
      out_v(8) = V_8;
      out_v(9) = V_9;
      out_v(10) = V_10;
      out_v(11) = V_11;
      out_v(12) = V_12;
      out_v(13) = V_13;
      out_v(14) = V_14;
      out_v(15) = V_15;
      out_v(16) = V_16;
      out_v(17) = V_17;
      out_v(18) = V_18;
      out_v(19) = V_19;
      out_v(20) = V_20;
      out_v(21) = V_21;
      out_v(22) = V_22;
      out_v(23) = V_23;
      out_v(24) = V_24;
      out_v(25) = V_25;
      out_v(26) = V_26;
      out_v(27) = V_27;
      out_v(28) = V_28;
      out_v(29) = V_29;
      out_v(30) = V_30;
      out_v(31) = V_31;
      out_v(32) = V_32;
      out_v(33) = V_33;
      out_v(34) = V_34;
      out_v(35) = V_35;
      out_v(36) = V_36;
      out_v(37) = V_37;
      out_v(38) = V_38;
      out_v(39) = V_39;
      out_v(40) = V_40;
      out_v(41) = V_41;
      out_v(42) = V_42;
      out_v(43) = V_43;
      out_v(44) = V_44;
      out_v(45) = V_45;
      out_v(46) = V_46;
      out_v(47) = V_47;
      out_v(48) = V_48;
      out_v(49) = V_49;
      out_v(50) = V_50;
      out_v(51) = V_51;
      out_v(52) = V_52;
      out_v(53) = V_53;
      out_v(54) = V_54;
      out_v(55) = V_55;
      out_v(56) = V_56;
      out_v(57) = V_57;
      out_v(58) = V_58;
      out_v(59) = V_59;
      out_v(60) = V_60;
      out_v(61) = V_61;
      out_v(62) = V_62;
      out_v(63) = V_63;
      out_v(64) = V_64;
      out_v(65) = V_65;
      out_v(66) = V_66;
      out_v(67) = V_67;
      out_v(68) = V_68;
      out_v(69) = V_69;
      out_v(70) = V_70;
      out_v(71) = V_71;
      out_v(72) = V_72;
      out_v(73) = V_73;
      out_v(74) = V_74;
      out_v(75) = V_75;
      out_v(76) = V_76;
      out_v(77) = V_77;
      out_v(78) = V_78;
      out_v(79) = V_79;
      out_v(80) = V_80;
      out_v(81) = V_81;
      out_v(82) = V_82;
      out_v(83) = V_83;
      out_v(84) = V_84;
      out_v(85) = V_85;
      out_v(86) = V_86;
      out_v(87) = V_87;
      out_v(88) = V_88;
      out_v(89) = V_89;
      out_v(90) = V_90;
      out_v(91) = V_91;
      out_v(92) = V_92;
      out_v(93) = V_93;
      out_v(94) = V_94;
      out_v(95) = V_95;
      out_v(96) = V_96;
      out_v(97) = V_97;
      out_v(98) = V_98;
      out_v(99) = V_99;
      out_v(100) = V_100;
      out_v(101) = V_101;
      out_v(102) = V_102;
      out_v(103) = V_103;
      out_v(104) = V_104;
      out_v(105) = V_105;
      out_v(106) = V_106;
      out_v(107) = V_107;
      out_v(108) = V_108;
      out_v(109) = V_109;
      out_v(110) = V_110;
      out_v(111) = V_111;
      out_v(112) = V_112;
      out_v(113) = V_113;
      out_v(114) = V_114;
      out_v(115) = V_115;
      out_v(116) = V_116;
      out_v(117) = V_117;
      out_v(118) = V_118;
      out_v(119) = V_119;
      out_v(120) = V_120;
      out_v(121) = V_121;
      out_v(122) = V_122;
      out_v(123) = V_123;
      out_v(124) = V_124;
      out_v(125) = V_125;
      out_v(126) = V_126;
      out_v(127) = V_127;
      out_v(128) = V_128;
      out_v(129) = V_129;
      out_v(130) = V_130;
      out_v(131) = V_131;
      out_v(132) = V_132;
      out_v(133) = V_133;
      out_v(134) = V_134;
      out_v(135) = V_135;
      out_v(136) = V_136;
      out_v(137) = V_137;
      out_v(138) = V_138;
      out_v(139) = V_139;
      out_v(140) = V_140;
      out_v(141) = V_141;
      out_v(142) = V_142;
      out_v(143) = V_143;
      out_v(144) = V_144;
      out_v(145) = V_145;
      out_v(146) = V_146;
      out_v(147) = V_147;
      out_v(148) = V_148;
      out_v(149) = V_149;
      out_v(150) = V_150;
      out_v(151) = V_151;
      out_v(152) = V_152;
      out_v(153) = V_153;
      out_v(154) = V_154;
      out_v(155) = V_155;
      out_v(156) = V_156;
      out_v(157) = V_157;
      out_v(158) = V_158;
      out_v(159) = V_159;
      out_v(160) = V_160;
      out_v(161) = V_161;
      out_v(162) = V_162;
      out_v(163) = V_163;
      out_v(164) = V_164;
      out_v(165) = V_165;
      out_v(166) = V_166;
      out_v(167) = V_167;
      out_v(168) = V_168;
      out_v(169) = V_169;
      out_v(170) = V_170;
      out_v(171) = V_171;
      out_v(172) = V_172;
      out_v(173) = V_173;
      out_v(174) = V_174;
      out_v(175) = V_175;
      out_v(176) = V_176;
      out_v(177) = V_177;
      out_v(178) = V_178;
      out_v(179) = V_179;
      out_v(180) = V_180;
      out_v(181) = V_181;
      out_v(182) = V_182;
      out_v(183) = V_183;
      out_v(184) = V_184;
      out_v(185) = V_185;
      out_v(186) = V_186;
      out_v(187) = V_187;
      out_v(188) = V_188;
      out_v(189) = V_189;
      out_v(190) = V_190;
      out_v(191) = V_191;
      out_v(192) = V_192;
      out_v(193) = V_193;
      out_v(194) = V_194;
      out_v(195) = V_195;
      out_v(196) = V_196;
      out_v(197) = V_197;
      out_v(198) = V_198;
      out_v(199) = V_199;
      out_v(200) = V_200;
      out_v(201) = V_201;
      out_v(202) = V_202;
      out_v(203) = V_203;
    end % v
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
  end
end % Test_15

% That's All Folks!
