% +--------------------------------------------------------------------------+
% | 'TrussMe' module version 0.0 - BSD 3-Clause License - Copyright (c) 2023 |
% | Current version authors:                                                 |
% |   Davide Stocco and Matteo Larcher.                                      |
% +--------------------------------------------------------------------------+

% Matlab generated code for system: Test_15
% This file has been automatically generated by TrussMe.
% DISCLAIMER: If you need to edit it, do it wisely!

classdef Test_15 < TrussMe.System
  %
  % Test_15 class
  %
  methods
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function this = Test_15( varargin )
      % Class constructor.

      % User data
      if (nargin == 0)
        data.A = 1.0;
        data.I_x = 2.0;
        data.I_y = 1.0;
        data.I_z = 1.0;
      elseif (nargin == 1 && isstruct(varargin{1}))
        data = varargin{1};
      elseif (nargin == 4)
        data.A = varargin{1};
        data.I_x = varargin{2};
        data.I_y = varargin{3};
        data.I_z = varargin{4};
      else
        error('wrong number of input arguments.');
      end

      % Call superclass constructor
      this = this@TrussMe.System(data);
    end % Test_15
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_K = K( this, ~, ~ )
      % Evaluate the stiffness matrix K.

      % Extract properties
      A = this.m_data.A;
      I_x = this.m_data.I_x;
      I_y = this.m_data.I_y;
      I_z = this.m_data.I_z;

      % Extract inputs
      % No inputs

      % Evaluate function
      out_1_1 = A * 0.138388347648318404e4 + I_z * 0.866140759202985464e4;
      t3 = A * 0.883883476483184154e3;
      t4 = 0.828640759202985464e4 * I_z;
      out_2_1 = t3 - t4;
      t5 = 0.750e3 * I_z;
      out_6_1 = -t5;
      out_7_1 = -0.500e3 * A;
      out_19_1 = -0.375e3 * I_z;
      out_25_1 = -0.883883476483184154e3 * A - t4;
      out_26_1 = -out_2_1;
      out_30_1 = -0.662912607362388189e4 * I_z;
      out_1_2 = out_2_1;
      out_2_2 = out_1_1;
      out_8_2 = out_19_1;
      out_12_2 = t5;
      out_20_2 = out_7_1;
      out_25_2 = out_26_1;
      out_26_2 = out_25_1;
      out_30_2 = I_z * 0.662912607362388189e4;
      out_3_3 = I_y * 0.173228151840597056e5;
      out_4_3 = 0.750e3 * I_y;
      out_9_3 = -0.375e3 * I_y;
      out_11_3 = -out_4_3;
      out_21_3 = out_9_3;
      out_27_3 = -0.165728151840597056e5 * I_y;
      out_28_3 = I_y * 0.662912607362388189e4;
      out_29_3 = -0.662912607362388189e4 * I_y;
      out_3_4 = out_4_3;
      out_4_4 = 0.1500e4 * I_y;
      out_21_4 = out_11_3;
      out_1_6 = out_6_1;
      out_6_6 = 0.1500e4 * I_z;
      out_19_6 = out_12_2;
      out_1_7 = out_20_2;
      out_7_7 = A * 0.108925565098878951e4 + I_z * 0.256634299023106723e4;
      out_8_7 = -0.589255650988789398e3 * A + I_z * 0.245523187911995728e4;
      out_13_7 = -0.111111111111111029e3 * I_z;
      out_18_7 = -0.333333333333333314e3 * I_z;
      out_31_7 = -0.589255650988789625e3 * A - 0.245523187911995637e4 * I_z;
      out_32_7 = -out_8_7;
      out_36_7 = -0.294627825494394665e4 * I_z;
      out_2_8 = out_8_2;
      out_7_8 = out_8_7;
      out_8_8 = I_z * 0.283023187911995774e4 + A * 0.922588984322122542e3;
      out_12_8 = out_1_6;
      out_14_8 = -0.333333333333333314e3 * A;
      out_31_8 = out_32_7;
      out_32_8 = -0.589255650988789284e3 * A - 0.245523187911995774e4 * I_z;
      out_36_8 = -0.294627825494394756e4 * I_z;
      out_3_9 = out_21_3;
      out_9_9 = I_y * 0.539657486935102497e4;
      out_11_9 = out_3_4;
      out_15_9 = -0.111111111111111029e3 * I_y;
      out_16_9 = I_y * 0.333333333333333314e3;
      out_33_9 = -0.491046375823991366e4 * I_y;
      out_34_9 = I_y * 0.294627825494394665e4;
      out_35_9 = I_y * 0.294627825494394756e4;
      out_3_11 = out_21_4;
      out_9_11 = out_11_9;
      out_11_11 = out_4_4;
      out_2_12 = out_19_6;
      out_8_12 = out_12_8;
      out_12_12 = out_6_6;
      out_7_13 = out_13_7;
      t31 = A * 0.536656314599949610e3;
      out_13_13 = I_z * 0.188207694929094487e4 + t31;
      out_14_13 = t31 - 0.965981366279909366e3 * I_z;
      out_18_13 = I_z * 0.333333333333333314e3;
      t33 = 0.357770876399966369e3 * A;
      out_19_13 = -t33 - 0.536656314599949624e2 * I_z;
      t35 = 0.178885438199983184e3 * A;
      out_20_13 = -t35 + I_z * 0.107331262919989925e3;
      out_24_13 = I_z * 0.268328157299974805e3;
      out_37_13 = -t35 - 0.171730020671983880e4 * I_z;
      out_38_13 = -t33 + I_z * 0.858650103359919399e3;
      out_42_13 = I_z * 0.214662525839979844e4;
      out_8_14 = out_14_8;
      out_13_14 = out_14_13;
      out_14_14 = A * 0.113831780523325779e4 + I_z * 0.643987577519939578e3;
      out_19_14 = out_20_13;
      out_20_14 = -0.894427190999915922e2 * A - 0.214662525839979850e3 * I_z;
      out_24_14 = -0.536656314599949610e3 * I_z;
      out_37_14 = out_38_13;
      out_38_14 = -0.715541752799932738e3 * A - 0.429325051679959699e3 * I_z;
      out_42_14 = -0.107331262919989922e4 * I_z;
      out_9_15 = out_15_9;
      out_15_15 = I_y * 0.252606452681088331e4;
      out_16_15 = -0.333333333333333314e3 * I_y;
      out_21_15 = -0.268328157299974691e3 * I_y;
      out_22_15 = -0.268328157299974805e3 * I_y;
      out_23_15 = I_y * 0.536656314599949610e3;
      out_39_15 = -0.214662525839979753e4 * I_y;
      out_40_15 = -0.214662525839979844e4 * I_y;
      out_41_15 = I_y * 0.107331262919989922e4;
      out_9_16 = out_16_9;
      out_15_16 = out_16_15;
      out_16_16 = 0.1000e4 * I_y;
      out_17_17 = I_x * 0.284217094304040074e-13;
      out_7_18 = out_18_7;
      out_13_18 = out_18_13;
      out_18_18 = 0.1000e4 * I_z;
      out_1_19 = out_2_8;
      out_6_19 = out_2_12;
      out_13_19 = out_19_13;
      out_14_19 = out_19_14;
      out_19_19 = A * 0.124165435288315075e4 + I_z * 0.871507322348984235e4;
      out_20_19 = -0.704998038283200913e3 * A + I_z * 0.817907632910986104e4;
      out_24_19 = -0.268328157299974805e3 * I_z;
      out_43_19 = -0.883883476483184495e3 * A - 0.828640759202984736e4 * I_z;
      out_44_19 = t3 - 0.828640759202985100e4 * I_z;
      out_48_19 = I_z * 0.662912607362388280e4;
      out_2_20 = out_1_7;
      out_13_20 = out_14_19;
      out_14_20 = out_20_14;
      out_19_20 = out_20_19;
      out_20_20 = A * 0.147332619558317538e4 + I_z * 0.850107011786983276e4;
      out_24_20 = I_z * 0.536656314599949610e3;
      out_43_20 = out_44_19;
      out_44_20 = -0.883883476483183813e3 * A - 0.828640759202985282e4 * I_z;
      out_48_20 = I_z * 0.662912607362388462e4;
      out_3_21 = out_3_9;
      out_4_21 = out_3_11;
      out_15_21 = out_21_15;
      out_21_21 = I_y * 0.172161433413596715e5;
      out_22_21 = I_y * 0.268328157299974805e3;
      out_23_21 = -0.536656314599949610e3 * I_y;
      out_45_21 = -0.165728151840596984e5 * I_y;
      out_46_21 = -0.662912607362388280e4 * I_y;
      out_47_21 = -0.662912607362388462e4 * I_y;
      out_15_22 = out_22_15;
      out_21_22 = out_22_21;
      out_22_22 = I_y * 0.268328157299974862e3;
      out_23_22 = -0.536656314599949724e3 * I_y;
      out_15_23 = out_23_15;
      out_21_23 = out_23_21;
      out_22_23 = out_23_22;
      out_23_23 = I_y * 0.107331262919989945e4;
      out_13_24 = out_24_13;
      out_14_24 = out_24_14;
      out_19_24 = out_24_19;
      out_20_24 = out_24_20;
      out_24_24 = I_z * 0.134164078649987368e4;
      out_1_25 = out_26_2;
      out_2_25 = out_25_2;
      out_25_25 = A * 0.182674951080137680e4 + I_z * 0.101313109378699883e5;
      out_26_25 = A * 0.107245668334682273e4 - 0.883036876567496620e4 * I_z;
      out_30_25 = I_z * 0.454579274029054977e4;
      out_31_25 = -0.942866034318192760e3 * A - 0.108792234729022312e3 * I_z;
      out_32_25 = -0.188573206863638518e3 * A + I_z * 0.543961173645111558e3;
      out_36_25 = -0.565719620590915724e3 * I_z;
      out_43_25 = -0.173611111111111131e4 * I_z;
      out_1_26 = out_2_25;
      out_2_26 = out_1_25;
      out_25_26 = out_26_25;
      out_26_26 = A * 0.175493145118924508e4 + I_z * 0.110062134602554124e5;
      out_30_26 = out_30_1;
      out_31_26 = out_32_25;
      out_32_26 = -0.377146413727276979e2 * A - 0.271980586822555824e4 * I_z;
      out_36_26 = I_z * 0.282859810295457919e4;
      out_44_26 = -0.833333333333333258e3 * A;
      out_3_27 = out_27_3;
      out_27_27 = I_y * 0.211375243981253952e5;
      out_28_27 = -0.454579274029054977e4 * I_y;
      out_29_27 = out_28_3;
      out_33_27 = -0.282859810295458010e4 * I_y;
      out_34_27 = I_y * 0.565719620590915724e3;
      out_35_27 = -0.282859810295457919e4 * I_y;
      out_45_27 = -0.173611111111111131e4 * I_y;
      out_3_28 = I_y * 0.662912607362388098e4;
      out_27_28 = -0.454579274029054795e4 * I_y;
      out_28_28 = I_y * 0.515165042944955349e4;
      out_29_28 = -0.265165042944955349e4 * I_y;
      out_45_28 = -0.208333333333333258e4 * I_y;
      out_3_29 = -0.662912607362388098e4 * I_y;
      out_27_29 = out_3_28;
      out_28_29 = out_29_28;
      out_29_29 = I_y * 0.265165042944955349e4;
      out_1_30 = -0.662912607362388098e4 * I_z;
      out_2_30 = I_z * 0.662912607362388098e4;
      out_25_30 = I_z * 0.454579274029054795e4;
      out_26_30 = out_1_30;
      out_30_30 = I_z * 0.780330085889910515e4;
      out_43_30 = I_z * 0.208333333333333258e4;
      out_7_31 = out_31_7;
      out_8_31 = out_31_8;
      out_25_31 = out_31_25;
      out_26_31 = out_31_26;
      out_31_31 = A * 0.153573828682921135e4 + I_z * 0.364349705550918361e4;
      t96 = I_z * 0.183416549535625973e4;
      out_32_31 = -0.350050022813945986e3 * A + t96;
      out_36_31 = I_z * 0.351199787553486249e4;
      out_37_31 = -0.361660152222892384e1 * A - 0.107947294166020492e4 * I_z;
      out_38_31 = -0.506324213112048795e2 * A + I_z * 0.771052101185861432e2;
      out_42_31 = -0.151897263933614522e4 * I_z;
      out_7_32 = out_8_31;
      out_8_32 = out_32_8;
      out_25_32 = out_26_31;
      out_26_32 = out_32_26;
      out_31_32 = -0.350050022813946043e3 * A + t96;
      out_32_32 = A * 0.133582419071838467e4 + I_z * 0.518054526235398589e4;
      out_36_32 = I_z * 0.117680151989368369e3;
      out_37_32 = -0.506324213112048724e2 * A + I_z * 0.771052101185861574e2;
      out_38_32 = -0.708853898356867603e3 * A - 0.550751500847044451e1 * I_z;
      out_42_32 = I_z * 0.108498045666867625e3;
      out_9_33 = out_33_9;
      out_27_33 = out_33_27;
      out_33_33 = I_y * 0.882404231786316814e4;
      out_34_33 = -0.351199787553486249e4 * I_y;
      out_35_33 = -0.117680151989368369e3 * I_y;
      out_39_33 = -0.108498045666867529e4 * I_y;
      out_40_33 = I_y * 0.151897263933614522e4;
      out_41_33 = -0.108498045666867625e3 * I_y;
      out_9_34 = I_y * 0.294627825494394619e4;
      out_27_34 = I_y * 0.565719620590915611e3;
      out_33_34 = -0.351199787553486203e4 * I_y;
      out_34_34 = I_y * 0.188091087708455143e4;
      out_35_34 = I_y * 0.120204733237545315e4;
      out_9_35 = I_y * 0.294627825494394710e4;
      out_27_35 = -0.282859810295457874e4 * I_y;
      out_33_35 = out_35_33;
      out_34_35 = I_y * 0.120204733237545338e4;
      out_35_35 = I_y * 0.459636505592094818e4;
      out_7_36 = -0.294627825494394619e4 * I_z;
      out_8_36 = -0.294627825494394710e4 * I_z;
      out_25_36 = -0.565719620590915611e3 * I_z;
      out_26_36 = I_z * 0.282859810295457874e4;
      out_31_36 = I_z * 0.351199787553486203e4;
      out_32_36 = out_36_32;
      out_36_36 = I_z * 0.647727593300549779e4;
      out_13_37 = out_37_13;
      out_14_37 = out_37_14;
      out_31_37 = out_37_31;
      out_32_37 = out_38_31;
      out_37_37 = A * 0.937080700917307695e3 + I_z * 0.301526730134719401e4;
      t120 = A * 0.682795538145751379e3;
      out_38_37 = t120 - 0.153661423413817010e4 * I_z;
      out_42_37 = -0.627652619063653219e3 * I_z;
      out_43_37 = -0.754578661195095606e3 * A - 0.218494152967150626e3 * I_z;
      t125 = 0.274392240434580174e3 * A;
      out_44_37 = -t125 + I_z * 0.600858920659664477e3;
      out_48_37 = I_z * 0.748342473912491187e3;
      out_13_38 = out_14_37;
      out_14_38 = out_38_14;
      out_31_38 = out_37_32;
      out_32_38 = out_38_32;
      out_37_38 = t120 - 0.153661423413816988e4 * I_z;
      out_38_38 = A * 0.152417464767846582e4 + I_z * 0.208719459850250814e4;
      out_42_38 = I_z * 0.964814583533031623e3;
      out_43_38 = -t125 + I_z * 0.600858920659664363e3;
      out_44_38 = -0.997789965216654764e2 * A - 0.165236203181407791e4 * I_z;
      out_48_38 = -0.205794180325935167e4 * I_z;
      out_15_39 = out_39_15;
      out_33_39 = out_39_33;
      out_39_39 = I_y * 0.510246189984970079e4;
      out_40_39 = I_y * 0.627652619063653219e3;
      out_41_39 = -0.964814583533031623e3 * I_y;
      out_45_39 = -0.187085618478122797e4 * I_y;
      out_46_39 = -0.748342473912491187e3 * I_y;
      out_47_39 = I_y * 0.205794180325935167e4;
      out_15_40 = out_40_15;
      out_33_40 = I_y * 0.151897263933614499e4;
      out_39_40 = I_y * 0.627652619063653447e3;
      out_40_40 = I_y * 0.427318695347040193e4;
      out_41_40 = -0.122520989313351402e4 * I_y;
      out_15_41 = out_41_15;
      out_33_41 = -0.108498045666867611e3 * I_y;
      out_39_41 = out_41_39;
      out_40_41 = out_41_40;
      out_41_41 = I_y * 0.547506119166636495e3;
      out_13_42 = out_42_13;
      out_14_42 = out_42_14;
      out_31_42 = -0.151897263933614499e4 * I_z;
      out_32_42 = I_z * 0.108498045666867611e3;
      out_37_42 = -0.627652619063653447e3 * I_z;
      out_38_42 = out_42_38;
      out_42_42 = I_z * 0.482069307263703740e4;
      out_19_43 = out_43_19;
      out_20_43 = out_43_20;
      out_25_43 = out_43_25;
      out_30_43 = I_z * 0.208333333333333212e4;
      out_37_43 = out_43_37;
      out_38_43 = out_44_37;
      out_43_43 = A * 0.163846213767828021e4 + I_z * 0.102410128561081092e5;
      out_44_43 = -0.609491236048603923e3 * A + I_z * 0.768554867137018664e4;
      out_48_43 = -0.737746854753637399e4 * I_z;
      out_19_44 = out_20_43;
      out_20_44 = out_44_20;
      out_26_44 = out_44_26;
      out_37_44 = out_43_38;
      out_38_44 = out_44_38;
      out_43_44 = out_44_43;
      out_44_44 = A * 0.181699580633818255e4 + I_z * 0.993876962384393119e4;
      out_48_44 = -0.457118427036453249e4 * I_z;
      out_21_45 = out_45_21;
      out_27_45 = out_45_27;
      out_28_45 = -0.208333333333333212e4 * I_y;
      out_39_45 = out_45_39;
      out_45_45 = I_y * 0.201797824799520386e5;
      out_46_45 = I_y * 0.737746854753637399e4;
      out_47_45 = I_y * 0.457118427036453249e4;
      out_21_46 = out_46_21;
      out_39_46 = out_46_39;
      out_45_46 = out_46_45;
      out_46_46 = I_y * 0.295098741901454923e4;
      out_47_46 = I_y * 0.182847370814581291e4;
      out_21_47 = out_47_21;
      out_39_47 = out_47_39;
      out_45_47 = out_47_45;
      out_46_47 = out_47_46;
      out_47_47 = I_y * 0.491538641303484110e4;
      out_19_48 = out_48_19;
      out_20_48 = out_48_20;
      out_37_48 = out_48_37;
      out_38_48 = out_48_38;
      out_43_48 = out_48_43;
      out_44_48 = out_48_44;
      out_48_48 = I_z * 0.786637383204938851e4;

      % Store outputs
      out_K = sparse(48, 48);
      out_K(1, 1) = out_1_1;
      out_K(2, 1) = out_2_1;
      out_K(6, 1) = out_6_1;
      out_K(7, 1) = out_7_1;
      out_K(19, 1) = out_19_1;
      out_K(25, 1) = out_25_1;
      out_K(26, 1) = out_26_1;
      out_K(30, 1) = out_30_1;
      out_K(1, 2) = out_1_2;
      out_K(2, 2) = out_2_2;
      out_K(8, 2) = out_8_2;
      out_K(12, 2) = out_12_2;
      out_K(20, 2) = out_20_2;
      out_K(25, 2) = out_25_2;
      out_K(26, 2) = out_26_2;
      out_K(30, 2) = out_30_2;
      out_K(3, 3) = out_3_3;
      out_K(4, 3) = out_4_3;
      out_K(9, 3) = out_9_3;
      out_K(11, 3) = out_11_3;
      out_K(21, 3) = out_21_3;
      out_K(27, 3) = out_27_3;
      out_K(28, 3) = out_28_3;
      out_K(29, 3) = out_29_3;
      out_K(3, 4) = out_3_4;
      out_K(4, 4) = out_4_4;
      out_K(21, 4) = out_21_4;
      out_K(1, 6) = out_1_6;
      out_K(6, 6) = out_6_6;
      out_K(19, 6) = out_19_6;
      out_K(1, 7) = out_1_7;
      out_K(7, 7) = out_7_7;
      out_K(8, 7) = out_8_7;
      out_K(13, 7) = out_13_7;
      out_K(18, 7) = out_18_7;
      out_K(31, 7) = out_31_7;
      out_K(32, 7) = out_32_7;
      out_K(36, 7) = out_36_7;
      out_K(2, 8) = out_2_8;
      out_K(7, 8) = out_7_8;
      out_K(8, 8) = out_8_8;
      out_K(12, 8) = out_12_8;
      out_K(14, 8) = out_14_8;
      out_K(31, 8) = out_31_8;
      out_K(32, 8) = out_32_8;
      out_K(36, 8) = out_36_8;
      out_K(3, 9) = out_3_9;
      out_K(9, 9) = out_9_9;
      out_K(11, 9) = out_11_9;
      out_K(15, 9) = out_15_9;
      out_K(16, 9) = out_16_9;
      out_K(33, 9) = out_33_9;
      out_K(34, 9) = out_34_9;
      out_K(35, 9) = out_35_9;
      out_K(3, 11) = out_3_11;
      out_K(9, 11) = out_9_11;
      out_K(11, 11) = out_11_11;
      out_K(2, 12) = out_2_12;
      out_K(8, 12) = out_8_12;
      out_K(12, 12) = out_12_12;
      out_K(7, 13) = out_7_13;
      out_K(13, 13) = out_13_13;
      out_K(14, 13) = out_14_13;
      out_K(18, 13) = out_18_13;
      out_K(19, 13) = out_19_13;
      out_K(20, 13) = out_20_13;
      out_K(24, 13) = out_24_13;
      out_K(37, 13) = out_37_13;
      out_K(38, 13) = out_38_13;
      out_K(42, 13) = out_42_13;
      out_K(8, 14) = out_8_14;
      out_K(13, 14) = out_13_14;
      out_K(14, 14) = out_14_14;
      out_K(19, 14) = out_19_14;
      out_K(20, 14) = out_20_14;
      out_K(24, 14) = out_24_14;
      out_K(37, 14) = out_37_14;
      out_K(38, 14) = out_38_14;
      out_K(42, 14) = out_42_14;
      out_K(9, 15) = out_9_15;
      out_K(15, 15) = out_15_15;
      out_K(16, 15) = out_16_15;
      out_K(21, 15) = out_21_15;
      out_K(22, 15) = out_22_15;
      out_K(23, 15) = out_23_15;
      out_K(39, 15) = out_39_15;
      out_K(40, 15) = out_40_15;
      out_K(41, 15) = out_41_15;
      out_K(9, 16) = out_9_16;
      out_K(15, 16) = out_15_16;
      out_K(16, 16) = out_16_16;
      out_K(17, 17) = out_17_17;
      out_K(7, 18) = out_7_18;
      out_K(13, 18) = out_13_18;
      out_K(18, 18) = out_18_18;
      out_K(1, 19) = out_1_19;
      out_K(6, 19) = out_6_19;
      out_K(13, 19) = out_13_19;
      out_K(14, 19) = out_14_19;
      out_K(19, 19) = out_19_19;
      out_K(20, 19) = out_20_19;
      out_K(24, 19) = out_24_19;
      out_K(43, 19) = out_43_19;
      out_K(44, 19) = out_44_19;
      out_K(48, 19) = out_48_19;
      out_K(2, 20) = out_2_20;
      out_K(13, 20) = out_13_20;
      out_K(14, 20) = out_14_20;
      out_K(19, 20) = out_19_20;
      out_K(20, 20) = out_20_20;
      out_K(24, 20) = out_24_20;
      out_K(43, 20) = out_43_20;
      out_K(44, 20) = out_44_20;
      out_K(48, 20) = out_48_20;
      out_K(3, 21) = out_3_21;
      out_K(4, 21) = out_4_21;
      out_K(15, 21) = out_15_21;
      out_K(21, 21) = out_21_21;
      out_K(22, 21) = out_22_21;
      out_K(23, 21) = out_23_21;
      out_K(45, 21) = out_45_21;
      out_K(46, 21) = out_46_21;
      out_K(47, 21) = out_47_21;
      out_K(15, 22) = out_15_22;
      out_K(21, 22) = out_21_22;
      out_K(22, 22) = out_22_22;
      out_K(23, 22) = out_23_22;
      out_K(15, 23) = out_15_23;
      out_K(21, 23) = out_21_23;
      out_K(22, 23) = out_22_23;
      out_K(23, 23) = out_23_23;
      out_K(13, 24) = out_13_24;
      out_K(14, 24) = out_14_24;
      out_K(19, 24) = out_19_24;
      out_K(20, 24) = out_20_24;
      out_K(24, 24) = out_24_24;
      out_K(1, 25) = out_1_25;
      out_K(2, 25) = out_2_25;
      out_K(25, 25) = out_25_25;
      out_K(26, 25) = out_26_25;
      out_K(30, 25) = out_30_25;
      out_K(31, 25) = out_31_25;
      out_K(32, 25) = out_32_25;
      out_K(36, 25) = out_36_25;
      out_K(43, 25) = out_43_25;
      out_K(1, 26) = out_1_26;
      out_K(2, 26) = out_2_26;
      out_K(25, 26) = out_25_26;
      out_K(26, 26) = out_26_26;
      out_K(30, 26) = out_30_26;
      out_K(31, 26) = out_31_26;
      out_K(32, 26) = out_32_26;
      out_K(36, 26) = out_36_26;
      out_K(44, 26) = out_44_26;
      out_K(3, 27) = out_3_27;
      out_K(27, 27) = out_27_27;
      out_K(28, 27) = out_28_27;
      out_K(29, 27) = out_29_27;
      out_K(33, 27) = out_33_27;
      out_K(34, 27) = out_34_27;
      out_K(35, 27) = out_35_27;
      out_K(45, 27) = out_45_27;
      out_K(3, 28) = out_3_28;
      out_K(27, 28) = out_27_28;
      out_K(28, 28) = out_28_28;
      out_K(29, 28) = out_29_28;
      out_K(45, 28) = out_45_28;
      out_K(3, 29) = out_3_29;
      out_K(27, 29) = out_27_29;
      out_K(28, 29) = out_28_29;
      out_K(29, 29) = out_29_29;
      out_K(1, 30) = out_1_30;
      out_K(2, 30) = out_2_30;
      out_K(25, 30) = out_25_30;
      out_K(26, 30) = out_26_30;
      out_K(30, 30) = out_30_30;
      out_K(43, 30) = out_43_30;
      out_K(7, 31) = out_7_31;
      out_K(8, 31) = out_8_31;
      out_K(25, 31) = out_25_31;
      out_K(26, 31) = out_26_31;
      out_K(31, 31) = out_31_31;
      out_K(32, 31) = out_32_31;
      out_K(36, 31) = out_36_31;
      out_K(37, 31) = out_37_31;
      out_K(38, 31) = out_38_31;
      out_K(42, 31) = out_42_31;
      out_K(7, 32) = out_7_32;
      out_K(8, 32) = out_8_32;
      out_K(25, 32) = out_25_32;
      out_K(26, 32) = out_26_32;
      out_K(31, 32) = out_31_32;
      out_K(32, 32) = out_32_32;
      out_K(36, 32) = out_36_32;
      out_K(37, 32) = out_37_32;
      out_K(38, 32) = out_38_32;
      out_K(42, 32) = out_42_32;
      out_K(9, 33) = out_9_33;
      out_K(27, 33) = out_27_33;
      out_K(33, 33) = out_33_33;
      out_K(34, 33) = out_34_33;
      out_K(35, 33) = out_35_33;
      out_K(39, 33) = out_39_33;
      out_K(40, 33) = out_40_33;
      out_K(41, 33) = out_41_33;
      out_K(9, 34) = out_9_34;
      out_K(27, 34) = out_27_34;
      out_K(33, 34) = out_33_34;
      out_K(34, 34) = out_34_34;
      out_K(35, 34) = out_35_34;
      out_K(9, 35) = out_9_35;
      out_K(27, 35) = out_27_35;
      out_K(33, 35) = out_33_35;
      out_K(34, 35) = out_34_35;
      out_K(35, 35) = out_35_35;
      out_K(7, 36) = out_7_36;
      out_K(8, 36) = out_8_36;
      out_K(25, 36) = out_25_36;
      out_K(26, 36) = out_26_36;
      out_K(31, 36) = out_31_36;
      out_K(32, 36) = out_32_36;
      out_K(36, 36) = out_36_36;
      out_K(13, 37) = out_13_37;
      out_K(14, 37) = out_14_37;
      out_K(31, 37) = out_31_37;
      out_K(32, 37) = out_32_37;
      out_K(37, 37) = out_37_37;
      out_K(38, 37) = out_38_37;
      out_K(42, 37) = out_42_37;
      out_K(43, 37) = out_43_37;
      out_K(44, 37) = out_44_37;
      out_K(48, 37) = out_48_37;
      out_K(13, 38) = out_13_38;
      out_K(14, 38) = out_14_38;
      out_K(31, 38) = out_31_38;
      out_K(32, 38) = out_32_38;
      out_K(37, 38) = out_37_38;
      out_K(38, 38) = out_38_38;
      out_K(42, 38) = out_42_38;
      out_K(43, 38) = out_43_38;
      out_K(44, 38) = out_44_38;
      out_K(48, 38) = out_48_38;
      out_K(15, 39) = out_15_39;
      out_K(33, 39) = out_33_39;
      out_K(39, 39) = out_39_39;
      out_K(40, 39) = out_40_39;
      out_K(41, 39) = out_41_39;
      out_K(45, 39) = out_45_39;
      out_K(46, 39) = out_46_39;
      out_K(47, 39) = out_47_39;
      out_K(15, 40) = out_15_40;
      out_K(33, 40) = out_33_40;
      out_K(39, 40) = out_39_40;
      out_K(40, 40) = out_40_40;
      out_K(41, 40) = out_41_40;
      out_K(15, 41) = out_15_41;
      out_K(33, 41) = out_33_41;
      out_K(39, 41) = out_39_41;
      out_K(40, 41) = out_40_41;
      out_K(41, 41) = out_41_41;
      out_K(13, 42) = out_13_42;
      out_K(14, 42) = out_14_42;
      out_K(31, 42) = out_31_42;
      out_K(32, 42) = out_32_42;
      out_K(37, 42) = out_37_42;
      out_K(38, 42) = out_38_42;
      out_K(42, 42) = out_42_42;
      out_K(19, 43) = out_19_43;
      out_K(20, 43) = out_20_43;
      out_K(25, 43) = out_25_43;
      out_K(30, 43) = out_30_43;
      out_K(37, 43) = out_37_43;
      out_K(38, 43) = out_38_43;
      out_K(43, 43) = out_43_43;
      out_K(44, 43) = out_44_43;
      out_K(48, 43) = out_48_43;
      out_K(19, 44) = out_19_44;
      out_K(20, 44) = out_20_44;
      out_K(26, 44) = out_26_44;
      out_K(37, 44) = out_37_44;
      out_K(38, 44) = out_38_44;
      out_K(43, 44) = out_43_44;
      out_K(44, 44) = out_44_44;
      out_K(48, 44) = out_48_44;
      out_K(21, 45) = out_21_45;
      out_K(27, 45) = out_27_45;
      out_K(28, 45) = out_28_45;
      out_K(39, 45) = out_39_45;
      out_K(45, 45) = out_45_45;
      out_K(46, 45) = out_46_45;
      out_K(47, 45) = out_47_45;
      out_K(21, 46) = out_21_46;
      out_K(39, 46) = out_39_46;
      out_K(45, 46) = out_45_46;
      out_K(46, 46) = out_46_46;
      out_K(47, 46) = out_47_46;
      out_K(21, 47) = out_21_47;
      out_K(39, 47) = out_39_47;
      out_K(45, 47) = out_45_47;
      out_K(46, 47) = out_46_47;
      out_K(47, 47) = out_47_47;
      out_K(19, 48) = out_19_48;
      out_K(20, 48) = out_20_48;
      out_K(37, 48) = out_37_48;
      out_K(38, 48) = out_38_48;
      out_K(43, 48) = out_43_48;
      out_K(44, 48) = out_44_48;
      out_K(48, 48) = out_48_48;
    end % K
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_K_ff = K_ff( this, ~, ~ )
      % Evaluate the stiffness matrix K_ff.

      % Extract properties
      A = this.m_data.A;
      I_y = this.m_data.I_y;
      I_z = this.m_data.I_z;

      % Extract inputs
      % No inputs

      % Evaluate function
      out_1_1 = A * 0.182674951080137680e4 + I_z * 0.101313109378699883e5;
      out_2_1 = A * 0.107245668334682273e4 - 0.883036876567496620e4 * I_z;
      out_6_1 = I_z * 0.454579274029054977e4;
      out_7_1 = -0.942866034318192760e3 * A - 0.108792234729022312e3 * I_z;
      out_8_1 = -0.188573206863638518e3 * A + I_z * 0.543961173645111558e3;
      out_12_1 = -0.565719620590915724e3 * I_z;
      out_19_1 = -0.173611111111111131e4 * I_z;
      out_1_2 = out_2_1;
      out_2_2 = A * 0.175493145118924508e4 + I_z * 0.110062134602554124e5;
      out_6_2 = -0.662912607362388189e4 * I_z;
      out_7_2 = out_8_1;
      out_8_2 = -0.377146413727276979e2 * A - 0.271980586822555824e4 * I_z;
      out_12_2 = I_z * 0.282859810295457919e4;
      out_20_2 = -0.833333333333333258e3 * A;
      out_3_3 = I_y * 0.211375243981253952e5;
      out_4_3 = -0.454579274029054977e4 * I_y;
      out_5_3 = I_y * 0.662912607362388189e4;
      out_9_3 = -0.282859810295458010e4 * I_y;
      out_10_3 = I_y * 0.565719620590915724e3;
      out_11_3 = -0.282859810295457919e4 * I_y;
      out_21_3 = -0.173611111111111131e4 * I_y;
      out_3_4 = -0.454579274029054795e4 * I_y;
      out_4_4 = I_y * 0.515165042944955349e4;
      out_5_4 = -0.265165042944955349e4 * I_y;
      out_21_4 = -0.208333333333333258e4 * I_y;
      out_3_5 = I_y * 0.662912607362388098e4;
      out_4_5 = out_5_4;
      out_5_5 = I_y * 0.265165042944955349e4;
      out_1_6 = I_z * 0.454579274029054795e4;
      out_2_6 = -0.662912607362388098e4 * I_z;
      out_6_6 = I_z * 0.780330085889910515e4;
      out_19_6 = I_z * 0.208333333333333258e4;
      out_1_7 = out_7_1;
      out_2_7 = out_7_2;
      out_7_7 = A * 0.153573828682921135e4 + I_z * 0.364349705550918361e4;
      t28 = I_z * 0.183416549535625973e4;
      out_8_7 = -0.350050022813945986e3 * A + t28;
      out_12_7 = I_z * 0.351199787553486249e4;
      out_13_7 = -0.361660152222892384e1 * A - 0.107947294166020492e4 * I_z;
      out_14_7 = -0.506324213112048795e2 * A + I_z * 0.771052101185861432e2;
      out_18_7 = -0.151897263933614522e4 * I_z;
      out_1_8 = out_2_7;
      out_2_8 = out_8_2;
      out_7_8 = -0.350050022813946043e3 * A + t28;
      out_8_8 = A * 0.133582419071838467e4 + I_z * 0.518054526235398589e4;
      out_12_8 = I_z * 0.117680151989368369e3;
      out_13_8 = -0.506324213112048724e2 * A + I_z * 0.771052101185861574e2;
      out_14_8 = -0.708853898356867603e3 * A - 0.550751500847044451e1 * I_z;
      out_18_8 = I_z * 0.108498045666867625e3;
      out_3_9 = out_9_3;
      out_9_9 = I_y * 0.882404231786316814e4;
      out_10_9 = -0.351199787553486249e4 * I_y;
      out_11_9 = -0.117680151989368369e3 * I_y;
      out_15_9 = -0.108498045666867529e4 * I_y;
      out_16_9 = I_y * 0.151897263933614522e4;
      out_17_9 = -0.108498045666867625e3 * I_y;
      out_3_10 = I_y * 0.565719620590915611e3;
      out_9_10 = -0.351199787553486203e4 * I_y;
      out_10_10 = I_y * 0.188091087708455143e4;
      out_11_10 = I_y * 0.120204733237545315e4;
      out_3_11 = -0.282859810295457874e4 * I_y;
      out_9_11 = out_11_9;
      out_10_11 = I_y * 0.120204733237545338e4;
      out_11_11 = I_y * 0.459636505592094818e4;
      out_1_12 = -0.565719620590915611e3 * I_z;
      out_2_12 = I_z * 0.282859810295457874e4;
      out_7_12 = I_z * 0.351199787553486203e4;
      out_8_12 = out_12_8;
      out_12_12 = I_z * 0.647727593300549779e4;
      out_7_13 = out_13_7;
      out_8_13 = out_14_7;
      out_13_13 = A * 0.937080700917307695e3 + I_z * 0.301526730134719401e4;
      t50 = A * 0.682795538145751379e3;
      out_14_13 = t50 - 0.153661423413817010e4 * I_z;
      out_18_13 = -0.627652619063653219e3 * I_z;
      out_19_13 = -0.754578661195095606e3 * A - 0.218494152967150626e3 * I_z;
      t55 = 0.274392240434580174e3 * A;
      out_20_13 = -t55 + I_z * 0.600858920659664477e3;
      out_24_13 = I_z * 0.748342473912491187e3;
      out_7_14 = out_13_8;
      out_8_14 = out_14_8;
      out_13_14 = t50 - 0.153661423413816988e4 * I_z;
      out_14_14 = A * 0.152417464767846582e4 + I_z * 0.208719459850250814e4;
      out_18_14 = I_z * 0.964814583533031623e3;
      out_19_14 = -t55 + I_z * 0.600858920659664363e3;
      out_20_14 = -0.997789965216654764e2 * A - 0.165236203181407791e4 * I_z;
      out_24_14 = -0.205794180325935167e4 * I_z;
      out_9_15 = out_15_9;
      out_15_15 = I_y * 0.510246189984970079e4;
      out_16_15 = I_y * 0.627652619063653219e3;
      out_17_15 = -0.964814583533031623e3 * I_y;
      out_21_15 = -0.187085618478122797e4 * I_y;
      out_22_15 = -0.748342473912491187e3 * I_y;
      out_23_15 = I_y * 0.205794180325935167e4;
      out_9_16 = I_y * 0.151897263933614499e4;
      out_15_16 = I_y * 0.627652619063653447e3;
      out_16_16 = I_y * 0.427318695347040193e4;
      out_17_16 = -0.122520989313351402e4 * I_y;
      out_9_17 = -0.108498045666867611e3 * I_y;
      out_15_17 = out_17_15;
      out_16_17 = out_17_16;
      out_17_17 = I_y * 0.547506119166636495e3;
      out_7_18 = -0.151897263933614499e4 * I_z;
      out_8_18 = I_z * 0.108498045666867611e3;
      out_13_18 = -0.627652619063653447e3 * I_z;
      out_14_18 = out_18_14;
      out_18_18 = I_z * 0.482069307263703740e4;
      out_1_19 = out_19_1;
      out_6_19 = I_z * 0.208333333333333212e4;
      out_13_19 = out_19_13;
      out_14_19 = out_20_13;
      out_19_19 = A * 0.163846213767828021e4 + I_z * 0.102410128561081092e5;
      out_20_19 = -0.609491236048603923e3 * A + I_z * 0.768554867137018664e4;
      out_24_19 = -0.737746854753637399e4 * I_z;
      out_2_20 = out_20_2;
      out_13_20 = out_19_14;
      out_14_20 = out_20_14;
      out_19_20 = out_20_19;
      out_20_20 = A * 0.181699580633818255e4 + I_z * 0.993876962384393119e4;
      out_24_20 = -0.457118427036453249e4 * I_z;
      out_3_21 = out_21_3;
      out_4_21 = -0.208333333333333212e4 * I_y;
      out_15_21 = out_21_15;
      out_21_21 = I_y * 0.201797824799520386e5;
      out_22_21 = I_y * 0.737746854753637399e4;
      out_23_21 = I_y * 0.457118427036453249e4;
      out_15_22 = out_22_15;
      out_21_22 = out_22_21;
      out_22_22 = I_y * 0.295098741901454923e4;
      out_23_22 = I_y * 0.182847370814581291e4;
      out_15_23 = out_23_15;
      out_21_23 = out_23_21;
      out_22_23 = out_23_22;
      out_23_23 = I_y * 0.491538641303484110e4;
      out_13_24 = out_24_13;
      out_14_24 = out_24_14;
      out_19_24 = out_24_19;
      out_20_24 = out_24_20;
      out_24_24 = I_z * 0.786637383204938851e4;

      % Store outputs
      out_K_ff = sparse(24, 24);
      out_K_ff(1, 1) = out_1_1;
      out_K_ff(2, 1) = out_2_1;
      out_K_ff(6, 1) = out_6_1;
      out_K_ff(7, 1) = out_7_1;
      out_K_ff(8, 1) = out_8_1;
      out_K_ff(12, 1) = out_12_1;
      out_K_ff(19, 1) = out_19_1;
      out_K_ff(1, 2) = out_1_2;
      out_K_ff(2, 2) = out_2_2;
      out_K_ff(6, 2) = out_6_2;
      out_K_ff(7, 2) = out_7_2;
      out_K_ff(8, 2) = out_8_2;
      out_K_ff(12, 2) = out_12_2;
      out_K_ff(20, 2) = out_20_2;
      out_K_ff(3, 3) = out_3_3;
      out_K_ff(4, 3) = out_4_3;
      out_K_ff(5, 3) = out_5_3;
      out_K_ff(9, 3) = out_9_3;
      out_K_ff(10, 3) = out_10_3;
      out_K_ff(11, 3) = out_11_3;
      out_K_ff(21, 3) = out_21_3;
      out_K_ff(3, 4) = out_3_4;
      out_K_ff(4, 4) = out_4_4;
      out_K_ff(5, 4) = out_5_4;
      out_K_ff(21, 4) = out_21_4;
      out_K_ff(3, 5) = out_3_5;
      out_K_ff(4, 5) = out_4_5;
      out_K_ff(5, 5) = out_5_5;
      out_K_ff(1, 6) = out_1_6;
      out_K_ff(2, 6) = out_2_6;
      out_K_ff(6, 6) = out_6_6;
      out_K_ff(19, 6) = out_19_6;
      out_K_ff(1, 7) = out_1_7;
      out_K_ff(2, 7) = out_2_7;
      out_K_ff(7, 7) = out_7_7;
      out_K_ff(8, 7) = out_8_7;
      out_K_ff(12, 7) = out_12_7;
      out_K_ff(13, 7) = out_13_7;
      out_K_ff(14, 7) = out_14_7;
      out_K_ff(18, 7) = out_18_7;
      out_K_ff(1, 8) = out_1_8;
      out_K_ff(2, 8) = out_2_8;
      out_K_ff(7, 8) = out_7_8;
      out_K_ff(8, 8) = out_8_8;
      out_K_ff(12, 8) = out_12_8;
      out_K_ff(13, 8) = out_13_8;
      out_K_ff(14, 8) = out_14_8;
      out_K_ff(18, 8) = out_18_8;
      out_K_ff(3, 9) = out_3_9;
      out_K_ff(9, 9) = out_9_9;
      out_K_ff(10, 9) = out_10_9;
      out_K_ff(11, 9) = out_11_9;
      out_K_ff(15, 9) = out_15_9;
      out_K_ff(16, 9) = out_16_9;
      out_K_ff(17, 9) = out_17_9;
      out_K_ff(3, 10) = out_3_10;
      out_K_ff(9, 10) = out_9_10;
      out_K_ff(10, 10) = out_10_10;
      out_K_ff(11, 10) = out_11_10;
      out_K_ff(3, 11) = out_3_11;
      out_K_ff(9, 11) = out_9_11;
      out_K_ff(10, 11) = out_10_11;
      out_K_ff(11, 11) = out_11_11;
      out_K_ff(1, 12) = out_1_12;
      out_K_ff(2, 12) = out_2_12;
      out_K_ff(7, 12) = out_7_12;
      out_K_ff(8, 12) = out_8_12;
      out_K_ff(12, 12) = out_12_12;
      out_K_ff(7, 13) = out_7_13;
      out_K_ff(8, 13) = out_8_13;
      out_K_ff(13, 13) = out_13_13;
      out_K_ff(14, 13) = out_14_13;
      out_K_ff(18, 13) = out_18_13;
      out_K_ff(19, 13) = out_19_13;
      out_K_ff(20, 13) = out_20_13;
      out_K_ff(24, 13) = out_24_13;
      out_K_ff(7, 14) = out_7_14;
      out_K_ff(8, 14) = out_8_14;
      out_K_ff(13, 14) = out_13_14;
      out_K_ff(14, 14) = out_14_14;
      out_K_ff(18, 14) = out_18_14;
      out_K_ff(19, 14) = out_19_14;
      out_K_ff(20, 14) = out_20_14;
      out_K_ff(24, 14) = out_24_14;
      out_K_ff(9, 15) = out_9_15;
      out_K_ff(15, 15) = out_15_15;
      out_K_ff(16, 15) = out_16_15;
      out_K_ff(17, 15) = out_17_15;
      out_K_ff(21, 15) = out_21_15;
      out_K_ff(22, 15) = out_22_15;
      out_K_ff(23, 15) = out_23_15;
      out_K_ff(9, 16) = out_9_16;
      out_K_ff(15, 16) = out_15_16;
      out_K_ff(16, 16) = out_16_16;
      out_K_ff(17, 16) = out_17_16;
      out_K_ff(9, 17) = out_9_17;
      out_K_ff(15, 17) = out_15_17;
      out_K_ff(16, 17) = out_16_17;
      out_K_ff(17, 17) = out_17_17;
      out_K_ff(7, 18) = out_7_18;
      out_K_ff(8, 18) = out_8_18;
      out_K_ff(13, 18) = out_13_18;
      out_K_ff(14, 18) = out_14_18;
      out_K_ff(18, 18) = out_18_18;
      out_K_ff(1, 19) = out_1_19;
      out_K_ff(6, 19) = out_6_19;
      out_K_ff(13, 19) = out_13_19;
      out_K_ff(14, 19) = out_14_19;
      out_K_ff(19, 19) = out_19_19;
      out_K_ff(20, 19) = out_20_19;
      out_K_ff(24, 19) = out_24_19;
      out_K_ff(2, 20) = out_2_20;
      out_K_ff(13, 20) = out_13_20;
      out_K_ff(14, 20) = out_14_20;
      out_K_ff(19, 20) = out_19_20;
      out_K_ff(20, 20) = out_20_20;
      out_K_ff(24, 20) = out_24_20;
      out_K_ff(3, 21) = out_3_21;
      out_K_ff(4, 21) = out_4_21;
      out_K_ff(15, 21) = out_15_21;
      out_K_ff(21, 21) = out_21_21;
      out_K_ff(22, 21) = out_22_21;
      out_K_ff(23, 21) = out_23_21;
      out_K_ff(15, 22) = out_15_22;
      out_K_ff(21, 22) = out_21_22;
      out_K_ff(22, 22) = out_22_22;
      out_K_ff(23, 22) = out_23_22;
      out_K_ff(15, 23) = out_15_23;
      out_K_ff(21, 23) = out_21_23;
      out_K_ff(22, 23) = out_22_23;
      out_K_ff(23, 23) = out_23_23;
      out_K_ff(13, 24) = out_13_24;
      out_K_ff(14, 24) = out_14_24;
      out_K_ff(19, 24) = out_19_24;
      out_K_ff(20, 24) = out_20_24;
      out_K_ff(24, 24) = out_24_24;
    end % K_ff
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_K_fs = K_fs( this, ~, ~ )
      % Evaluate the stiffness matrix K_fs.

      % Extract properties
      A = this.m_data.A;
      I_y = this.m_data.I_y;
      I_z = this.m_data.I_z;

      % Extract inputs
      % No inputs

      % Evaluate function
      t1 = 0.883883476483184154e3 * A;
      out_1_1 = -t1 - 0.828640759202985464e4 * I_z;
      out_2_1 = -t1 + I_z * 0.828640759202985464e4;
      out_6_1 = -0.662912607362388189e4 * I_z;
      out_1_2 = out_2_1;
      out_2_2 = out_1_1;
      out_6_2 = I_z * 0.662912607362388189e4;
      out_3_3 = -0.165728151840597056e5 * I_y;
      out_4_3 = I_y * 0.662912607362388189e4;
      out_5_3 = -0.662912607362388189e4 * I_y;
      out_7_7 = -0.589255650988789625e3 * A - 0.245523187911995637e4 * I_z;
      out_8_7 = A * 0.589255650988789398e3 - 0.245523187911995728e4 * I_z;
      out_12_7 = -0.294627825494394665e4 * I_z;
      out_7_8 = out_8_7;
      out_8_8 = -0.589255650988789284e3 * A - 0.245523187911995774e4 * I_z;
      out_12_8 = -0.294627825494394756e4 * I_z;
      out_9_9 = -0.491046375823991366e4 * I_y;
      out_10_9 = I_y * 0.294627825494394665e4;
      out_11_9 = I_y * 0.294627825494394756e4;
      out_13_13 = -0.178885438199983184e3 * A - 0.171730020671983880e4 * I_z;
      out_14_13 = -0.357770876399966369e3 * A + I_z * 0.858650103359919399e3;
      out_18_13 = I_z * 0.214662525839979844e4;
      out_13_14 = out_14_13;
      out_14_14 = -0.715541752799932738e3 * A - 0.429325051679959699e3 * I_z;
      out_18_14 = -0.107331262919989922e4 * I_z;
      out_15_15 = -0.214662525839979753e4 * I_y;
      out_16_15 = -0.214662525839979844e4 * I_y;
      out_17_15 = I_y * 0.107331262919989922e4;
      out_19_19 = -0.883883476483184495e3 * A - 0.828640759202984736e4 * I_z;
      out_20_19 = A * 0.883883476483184154e3 - 0.828640759202985100e4 * I_z;
      out_24_19 = I_z * 0.662912607362388280e4;
      out_19_20 = out_20_19;
      out_20_20 = -0.883883476483183813e3 * A - 0.828640759202985282e4 * I_z;
      out_24_20 = I_z * 0.662912607362388462e4;
      out_21_21 = -0.165728151840596984e5 * I_y;
      out_22_21 = -0.662912607362388280e4 * I_y;
      out_23_21 = -0.662912607362388462e4 * I_y;

      % Store outputs
      out_K_fs = sparse(24, 24);
      out_K_fs(1, 1) = out_1_1;
      out_K_fs(2, 1) = out_2_1;
      out_K_fs(6, 1) = out_6_1;
      out_K_fs(1, 2) = out_1_2;
      out_K_fs(2, 2) = out_2_2;
      out_K_fs(6, 2) = out_6_2;
      out_K_fs(3, 3) = out_3_3;
      out_K_fs(4, 3) = out_4_3;
      out_K_fs(5, 3) = out_5_3;
      out_K_fs(7, 7) = out_7_7;
      out_K_fs(8, 7) = out_8_7;
      out_K_fs(12, 7) = out_12_7;
      out_K_fs(7, 8) = out_7_8;
      out_K_fs(8, 8) = out_8_8;
      out_K_fs(12, 8) = out_12_8;
      out_K_fs(9, 9) = out_9_9;
      out_K_fs(10, 9) = out_10_9;
      out_K_fs(11, 9) = out_11_9;
      out_K_fs(13, 13) = out_13_13;
      out_K_fs(14, 13) = out_14_13;
      out_K_fs(18, 13) = out_18_13;
      out_K_fs(13, 14) = out_13_14;
      out_K_fs(14, 14) = out_14_14;
      out_K_fs(18, 14) = out_18_14;
      out_K_fs(15, 15) = out_15_15;
      out_K_fs(16, 15) = out_16_15;
      out_K_fs(17, 15) = out_17_15;
      out_K_fs(19, 19) = out_19_19;
      out_K_fs(20, 19) = out_20_19;
      out_K_fs(24, 19) = out_24_19;
      out_K_fs(19, 20) = out_19_20;
      out_K_fs(20, 20) = out_20_20;
      out_K_fs(24, 20) = out_24_20;
      out_K_fs(21, 21) = out_21_21;
      out_K_fs(22, 21) = out_22_21;
      out_K_fs(23, 21) = out_23_21;
    end % K_fs
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_K_sf = K_sf( this, ~, ~ )
      % Evaluate the stiffness matrix K_sf.

      % Extract properties
      A = this.m_data.A;
      I_y = this.m_data.I_y;
      I_z = this.m_data.I_z;

      % Extract inputs
      % No inputs

      % Evaluate function
      t1 = 0.883883476483184154e3 * A;
      out_1_1 = -t1 - 0.828640759202985464e4 * I_z;
      out_2_1 = -t1 + I_z * 0.828640759202985464e4;
      out_1_2 = out_2_1;
      out_2_2 = out_1_1;
      out_3_3 = -0.165728151840597056e5 * I_y;
      out_3_4 = I_y * 0.662912607362388098e4;
      out_3_5 = -0.662912607362388098e4 * I_y;
      out_1_6 = -0.662912607362388098e4 * I_z;
      out_2_6 = I_z * 0.662912607362388098e4;
      out_7_7 = -0.589255650988789625e3 * A - 0.245523187911995637e4 * I_z;
      out_8_7 = A * 0.589255650988789398e3 - 0.245523187911995728e4 * I_z;
      out_7_8 = out_8_7;
      out_8_8 = -0.589255650988789284e3 * A - 0.245523187911995774e4 * I_z;
      out_9_9 = -0.491046375823991366e4 * I_y;
      out_9_10 = I_y * 0.294627825494394619e4;
      out_9_11 = I_y * 0.294627825494394710e4;
      out_7_12 = -0.294627825494394619e4 * I_z;
      out_8_12 = -0.294627825494394710e4 * I_z;
      out_13_13 = -0.178885438199983184e3 * A - 0.171730020671983880e4 * I_z;
      out_14_13 = -0.357770876399966369e3 * A + I_z * 0.858650103359919399e3;
      out_13_14 = out_14_13;
      out_14_14 = -0.715541752799932738e3 * A - 0.429325051679959699e3 * I_z;
      out_15_15 = -0.214662525839979753e4 * I_y;
      out_15_16 = -0.214662525839979844e4 * I_y;
      out_15_17 = I_y * 0.107331262919989922e4;
      out_13_18 = I_z * 0.214662525839979844e4;
      out_14_18 = -0.107331262919989922e4 * I_z;
      out_19_19 = -0.883883476483184495e3 * A - 0.828640759202984736e4 * I_z;
      out_20_19 = A * 0.883883476483184154e3 - 0.828640759202985100e4 * I_z;
      out_19_20 = out_20_19;
      out_20_20 = -0.883883476483183813e3 * A - 0.828640759202985282e4 * I_z;
      out_21_21 = -0.165728151840596984e5 * I_y;
      out_21_22 = -0.662912607362388280e4 * I_y;
      out_21_23 = -0.662912607362388462e4 * I_y;
      out_19_24 = I_z * 0.662912607362388280e4;
      out_20_24 = I_z * 0.662912607362388462e4;

      % Store outputs
      out_K_sf = sparse(24, 24);
      out_K_sf(1, 1) = out_1_1;
      out_K_sf(2, 1) = out_2_1;
      out_K_sf(1, 2) = out_1_2;
      out_K_sf(2, 2) = out_2_2;
      out_K_sf(3, 3) = out_3_3;
      out_K_sf(3, 4) = out_3_4;
      out_K_sf(3, 5) = out_3_5;
      out_K_sf(1, 6) = out_1_6;
      out_K_sf(2, 6) = out_2_6;
      out_K_sf(7, 7) = out_7_7;
      out_K_sf(8, 7) = out_8_7;
      out_K_sf(7, 8) = out_7_8;
      out_K_sf(8, 8) = out_8_8;
      out_K_sf(9, 9) = out_9_9;
      out_K_sf(9, 10) = out_9_10;
      out_K_sf(9, 11) = out_9_11;
      out_K_sf(7, 12) = out_7_12;
      out_K_sf(8, 12) = out_8_12;
      out_K_sf(13, 13) = out_13_13;
      out_K_sf(14, 13) = out_14_13;
      out_K_sf(13, 14) = out_13_14;
      out_K_sf(14, 14) = out_14_14;
      out_K_sf(15, 15) = out_15_15;
      out_K_sf(15, 16) = out_15_16;
      out_K_sf(15, 17) = out_15_17;
      out_K_sf(13, 18) = out_13_18;
      out_K_sf(14, 18) = out_14_18;
      out_K_sf(19, 19) = out_19_19;
      out_K_sf(20, 19) = out_20_19;
      out_K_sf(19, 20) = out_19_20;
      out_K_sf(20, 20) = out_20_20;
      out_K_sf(21, 21) = out_21_21;
      out_K_sf(21, 22) = out_21_22;
      out_K_sf(21, 23) = out_21_23;
      out_K_sf(19, 24) = out_19_24;
      out_K_sf(20, 24) = out_20_24;
    end % K_sf
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_K_ss = K_ss( this, ~, ~ )
      % Evaluate the stiffness matrix K_ss.

      % Extract properties
      A = this.m_data.A;
      I_x = this.m_data.I_x;
      I_y = this.m_data.I_y;
      I_z = this.m_data.I_z;

      % Extract inputs
      % No inputs

      % Evaluate function
      out_1_1 = A * 0.138388347648318404e4 + I_z * 0.866140759202985464e4;
      out_2_1 = A * 0.883883476483184154e3 - 0.828640759202985464e4 * I_z;
      t5 = 0.750e3 * I_z;
      out_6_1 = -t5;
      out_7_1 = -0.500e3 * A;
      out_19_1 = -0.375e3 * I_z;
      out_1_2 = out_2_1;
      out_2_2 = out_1_1;
      out_8_2 = out_19_1;
      out_12_2 = t5;
      out_20_2 = out_7_1;
      out_3_3 = I_y * 0.173228151840597056e5;
      out_4_3 = 0.750e3 * I_y;
      out_9_3 = -0.375e3 * I_y;
      out_11_3 = -out_4_3;
      out_21_3 = out_9_3;
      out_3_4 = out_4_3;
      out_4_4 = 0.1500e4 * I_y;
      out_21_4 = out_11_3;
      out_1_6 = out_6_1;
      out_6_6 = 0.1500e4 * I_z;
      out_19_6 = out_12_2;
      out_1_7 = out_20_2;
      out_7_7 = A * 0.108925565098878951e4 + I_z * 0.256634299023106723e4;
      out_8_7 = -0.589255650988789398e3 * A + I_z * 0.245523187911995728e4;
      out_13_7 = -0.111111111111111029e3 * I_z;
      out_18_7 = -0.333333333333333314e3 * I_z;
      out_2_8 = out_8_2;
      out_7_8 = out_8_7;
      out_8_8 = I_z * 0.283023187911995774e4 + A * 0.922588984322122542e3;
      out_12_8 = out_1_6;
      out_14_8 = -0.333333333333333314e3 * A;
      out_3_9 = out_21_3;
      out_9_9 = I_y * 0.539657486935102497e4;
      out_11_9 = out_3_4;
      out_15_9 = -0.111111111111111029e3 * I_y;
      out_16_9 = I_y * 0.333333333333333314e3;
      out_3_11 = out_21_4;
      out_9_11 = out_11_9;
      out_11_11 = out_4_4;
      out_2_12 = out_19_6;
      out_8_12 = out_12_8;
      out_12_12 = out_6_6;
      out_7_13 = out_13_7;
      t20 = A * 0.536656314599949610e3;
      out_13_13 = I_z * 0.188207694929094487e4 + t20;
      out_14_13 = t20 - 0.965981366279909366e3 * I_z;
      out_18_13 = I_z * 0.333333333333333314e3;
      out_19_13 = -0.357770876399966369e3 * A - 0.536656314599949624e2 * I_z;
      out_20_13 = -0.178885438199983184e3 * A + I_z * 0.107331262919989925e3;
      out_24_13 = I_z * 0.268328157299974805e3;
      out_8_14 = out_14_8;
      out_13_14 = out_14_13;
      out_14_14 = A * 0.113831780523325779e4 + I_z * 0.643987577519939578e3;
      out_19_14 = out_20_13;
      out_20_14 = -0.894427190999915922e2 * A - 0.214662525839979850e3 * I_z;
      out_24_14 = -0.536656314599949610e3 * I_z;
      out_9_15 = out_15_9;
      out_15_15 = I_y * 0.252606452681088331e4;
      out_16_15 = -0.333333333333333314e3 * I_y;
      out_21_15 = -0.268328157299974691e3 * I_y;
      out_22_15 = -0.268328157299974805e3 * I_y;
      out_23_15 = I_y * 0.536656314599949610e3;
      out_9_16 = out_16_9;
      out_15_16 = out_16_15;
      out_16_16 = 0.1000e4 * I_y;
      out_17_17 = I_x * 0.284217094304040074e-13;
      out_7_18 = out_18_7;
      out_13_18 = out_18_13;
      out_18_18 = 0.1000e4 * I_z;
      out_1_19 = out_2_8;
      out_6_19 = out_2_12;
      out_13_19 = out_19_13;
      out_14_19 = out_19_14;
      out_19_19 = A * 0.124165435288315075e4 + I_z * 0.871507322348984235e4;
      out_20_19 = -0.704998038283200913e3 * A + I_z * 0.817907632910986104e4;
      out_24_19 = -0.268328157299974805e3 * I_z;
      out_2_20 = out_1_7;
      out_13_20 = out_14_19;
      out_14_20 = out_20_14;
      out_19_20 = out_20_19;
      out_20_20 = A * 0.147332619558317538e4 + I_z * 0.850107011786983276e4;
      out_24_20 = I_z * 0.536656314599949610e3;
      out_3_21 = out_3_9;
      out_4_21 = out_3_11;
      out_15_21 = out_21_15;
      out_21_21 = I_y * 0.172161433413596715e5;
      out_22_21 = I_y * 0.268328157299974805e3;
      out_23_21 = -0.536656314599949610e3 * I_y;
      out_15_22 = out_22_15;
      out_21_22 = out_22_21;
      out_22_22 = I_y * 0.268328157299974862e3;
      out_23_22 = -0.536656314599949724e3 * I_y;
      out_15_23 = out_23_15;
      out_21_23 = out_23_21;
      out_22_23 = out_23_22;
      out_23_23 = I_y * 0.107331262919989945e4;
      out_13_24 = out_24_13;
      out_14_24 = out_24_14;
      out_19_24 = out_24_19;
      out_20_24 = out_24_20;
      out_24_24 = I_z * 0.134164078649987368e4;

      % Store outputs
      out_K_ss = sparse(24, 24);
      out_K_ss(1, 1) = out_1_1;
      out_K_ss(2, 1) = out_2_1;
      out_K_ss(6, 1) = out_6_1;
      out_K_ss(7, 1) = out_7_1;
      out_K_ss(19, 1) = out_19_1;
      out_K_ss(1, 2) = out_1_2;
      out_K_ss(2, 2) = out_2_2;
      out_K_ss(8, 2) = out_8_2;
      out_K_ss(12, 2) = out_12_2;
      out_K_ss(20, 2) = out_20_2;
      out_K_ss(3, 3) = out_3_3;
      out_K_ss(4, 3) = out_4_3;
      out_K_ss(9, 3) = out_9_3;
      out_K_ss(11, 3) = out_11_3;
      out_K_ss(21, 3) = out_21_3;
      out_K_ss(3, 4) = out_3_4;
      out_K_ss(4, 4) = out_4_4;
      out_K_ss(21, 4) = out_21_4;
      out_K_ss(1, 6) = out_1_6;
      out_K_ss(6, 6) = out_6_6;
      out_K_ss(19, 6) = out_19_6;
      out_K_ss(1, 7) = out_1_7;
      out_K_ss(7, 7) = out_7_7;
      out_K_ss(8, 7) = out_8_7;
      out_K_ss(13, 7) = out_13_7;
      out_K_ss(18, 7) = out_18_7;
      out_K_ss(2, 8) = out_2_8;
      out_K_ss(7, 8) = out_7_8;
      out_K_ss(8, 8) = out_8_8;
      out_K_ss(12, 8) = out_12_8;
      out_K_ss(14, 8) = out_14_8;
      out_K_ss(3, 9) = out_3_9;
      out_K_ss(9, 9) = out_9_9;
      out_K_ss(11, 9) = out_11_9;
      out_K_ss(15, 9) = out_15_9;
      out_K_ss(16, 9) = out_16_9;
      out_K_ss(3, 11) = out_3_11;
      out_K_ss(9, 11) = out_9_11;
      out_K_ss(11, 11) = out_11_11;
      out_K_ss(2, 12) = out_2_12;
      out_K_ss(8, 12) = out_8_12;
      out_K_ss(12, 12) = out_12_12;
      out_K_ss(7, 13) = out_7_13;
      out_K_ss(13, 13) = out_13_13;
      out_K_ss(14, 13) = out_14_13;
      out_K_ss(18, 13) = out_18_13;
      out_K_ss(19, 13) = out_19_13;
      out_K_ss(20, 13) = out_20_13;
      out_K_ss(24, 13) = out_24_13;
      out_K_ss(8, 14) = out_8_14;
      out_K_ss(13, 14) = out_13_14;
      out_K_ss(14, 14) = out_14_14;
      out_K_ss(19, 14) = out_19_14;
      out_K_ss(20, 14) = out_20_14;
      out_K_ss(24, 14) = out_24_14;
      out_K_ss(9, 15) = out_9_15;
      out_K_ss(15, 15) = out_15_15;
      out_K_ss(16, 15) = out_16_15;
      out_K_ss(21, 15) = out_21_15;
      out_K_ss(22, 15) = out_22_15;
      out_K_ss(23, 15) = out_23_15;
      out_K_ss(9, 16) = out_9_16;
      out_K_ss(15, 16) = out_15_16;
      out_K_ss(16, 16) = out_16_16;
      out_K_ss(17, 17) = out_17_17;
      out_K_ss(7, 18) = out_7_18;
      out_K_ss(13, 18) = out_13_18;
      out_K_ss(18, 18) = out_18_18;
      out_K_ss(1, 19) = out_1_19;
      out_K_ss(6, 19) = out_6_19;
      out_K_ss(13, 19) = out_13_19;
      out_K_ss(14, 19) = out_14_19;
      out_K_ss(19, 19) = out_19_19;
      out_K_ss(20, 19) = out_20_19;
      out_K_ss(24, 19) = out_24_19;
      out_K_ss(2, 20) = out_2_20;
      out_K_ss(13, 20) = out_13_20;
      out_K_ss(14, 20) = out_14_20;
      out_K_ss(19, 20) = out_19_20;
      out_K_ss(20, 20) = out_20_20;
      out_K_ss(24, 20) = out_24_20;
      out_K_ss(3, 21) = out_3_21;
      out_K_ss(4, 21) = out_4_21;
      out_K_ss(15, 21) = out_15_21;
      out_K_ss(21, 21) = out_21_21;
      out_K_ss(22, 21) = out_22_21;
      out_K_ss(23, 21) = out_23_21;
      out_K_ss(15, 22) = out_15_22;
      out_K_ss(21, 22) = out_21_22;
      out_K_ss(22, 22) = out_22_22;
      out_K_ss(23, 22) = out_23_22;
      out_K_ss(15, 23) = out_15_23;
      out_K_ss(21, 23) = out_21_23;
      out_K_ss(22, 23) = out_22_23;
      out_K_ss(23, 23) = out_23_23;
      out_K_ss(13, 24) = out_13_24;
      out_K_ss(14, 24) = out_14_24;
      out_K_ss(19, 24) = out_19_24;
      out_K_ss(20, 24) = out_20_24;
      out_K_ss(24, 24) = out_24_24;
    end % K_ss
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_d = d( this, ~, ~ )
      % Evaluate the deformation vector d.

      % Extract properties
      A = this.m_data.A;
      I_z = this.m_data.I_z;

      % Extract inputs
      % No inputs

      % Evaluate function
      out_1 = 0.1e-2;
      out_2 = -0.1e-2;
      out_7 = 0.5e-2;
      out_8 = -0.5e-2;
      out_13 = 0.14e-1;
      out_14 = -0.14e-1;
      out_19 = 0.7e-2;
      out_20 = -0.7e-2;
      t1 = A ^ 2;
      t2 = t1 ^ 2;
      t3 = t2 ^ 2;
      t5 = t1 * A;
      t7 = I_z * t2 * t5;
      t10 = I_z ^ 2;
      t11 = t10 * t2 * t1;
      t14 = t10 * I_z;
      t15 = t14 * t2 * A;
      t17 = t10 ^ 2;
      t18 = t17 * t2;
      t21 = t17 * I_z * t5;
      t24 = t17 * t10 * t1;
      t27 = t17 * t14 * A;
      t29 = t17 ^ 2;
      t42 = 0.1e1 / (0.3264166121e183 * t3 + 0.5792105216e201 * t7 + 0.1468322533e203 * t11 + 0.9680973704e203 * t15 + 0.1647965977e204 * t18 - 0.1502852989e189 * t21 - 0.2488051873e174 * t24 + 0.5158301021e157 * t27 + 0.1186208295e142 * t29);
      out_25 = 0.1562500000e-1 * t42 * (0.4334469942e182 * t3 + 0.1534342657e201 * t7 + 0.3225167084e202 * t11 + 0.1649986898e203 * t15 + 0.1624045374e203 * t18 - 0.1150515315e188 * t21 - 0.6071044170e173 * t24 + 0.6463217396e157 * t27 + 0.7263838295e140 * t29);
      out_26 = -0.1953125000e-2 * t42 * (0.5129531358e183 * t3 + 0.1522380089e202 * t7 + 0.3543648805e203 * t11 + 0.2155933466e204 * t15 + 0.3758270728e204 * t18 - 0.7134071344e189 * t21 + 0.3008630923e173 * t24 + 0.9575019810e158 * t27 - 0.9185773732e142 * t29);
      out_30 = -0.9765625000e-3 * t42 * (0.1555711532e184 * t3 + 0.4187006081e202 * t7 + 0.9400197792e203 * t11 + 0.5495872076e204 * t15 + 0.8424974665e204 * t18 - 0.1628890534e190 * t21 - 0.5020517814e174 * t24 + 0.3554345926e159 * t27 - 0.2454835991e143 * t29);
      out_31 = 0.2500000000e0 * t42 * (0.3050056296e181 * t3 + 0.8600560536e199 * t7 + 0.2091394239e201 * t11 + 0.1394800164e202 * t15 + 0.2014587199e202 * t18 - 0.1327265356e187 * t21 - 0.5098382086e172 * t24 + 0.2876237336e157 * t27 - 0.2048269763e141 * t29);
      out_32 = -0.1e1 * t42 * (0.2949600965e181 * t3 + 0.4436828813e199 * t7 + 0.1032859144e201 * t11 + 0.5342864721e201 * t15 + 0.6002963585e201 * t18 - 0.8842166816e186 * t21 - 0.5253686546e171 * t24 + 0.3678120800e156 * t27 - 0.2777774933e140 * t29);
      out_36 = 0.1953125000e-2 * t42 * (0.7004744399e182 * t3 + 0.2163991879e201 * t7 + 0.4174512531e202 * t11 + 0.1384544639e203 * t15 + 0.4123714511e203 * t18 - 0.2356908129e189 * t21 + 0.3196701299e174 * t24 - 0.1498654950e159 * t27 + 0.9996371087e142 * t29);
      out_37 = 0.2500000000e0 * t42 * (0.1491619657e182 * t3 + 0.1849711361e200 * t7 + 0.4469709875e201 * t11 + 0.3103140009e202 * t15 + 0.6767455449e202 * t18 - 0.5768064838e187 * t21 - 0.1222163920e173 * t24 + 0.7193111443e156 * t27 + 0.6546881881e139 * t29);
      out_38 = -0.6250000000e-1 * t42 * (0.5783707510e182 * t3 + 0.8668718355e200 * t7 + 0.2072917863e202 * t11 + 0.1261831324e203 * t15 + 0.2133795496e203 * t18 - 0.2225885684e188 * t21 - 0.1763112627e173 * t24 + 0.1223452099e158 * t27 - 0.7221503965e141 * t29);
      out_42 = -0.7812500000e-2 * t42 * (0.1967023323e183 * t3 + 0.3779216577e201 * t7 + 0.9987529319e202 * t11 + 0.6714107434e203 * t15 + 0.1128502884e204 * t18 - 0.1042827050e189 * t21 - 0.1657371072e174 * t24 - 0.4647242194e158 * t27 + 0.4694103411e142 * t29);
      out_43 = 0.7812500000e-2 * t42 * (0.3970695410e183 * t3 + 0.5515383557e201 * t7 + 0.1370825045e203 * t11 + 0.9266737188e203 * t15 + 0.1588555274e204 * t18 - 0.2673438864e189 * t21 - 0.1967286506e174 * t24 + 0.6624162367e158 * t27 - 0.3536977220e142 * t29);
      out_44 = -0.1953125000e-2 * t42 * (0.6539747281e183 * t3 + 0.1772616098e202 * t7 + 0.4678062524e203 * t11 + 0.3259543956e204 * t15 + 0.6867844454e204 * t18 - 0.8826282965e189 * t21 - 0.8103783067e174 * t24 + 0.2898675178e159 * t27 - 0.1552128854e143 * t29);
      out_48 = 0.1953125000e-2 * t42 * (0.4437155384e183 * t3 + 0.8801570561e200 * t7 + 0.1444284972e202 * t11 + 0.1479635672e203 * t15 - 0.6420291958e203 * t18 - 0.2334340613e189 * t21 + 0.2932963031e173 * t24 - 0.3112627882e158 * t27 + 0.1716724570e142 * t29);

      % Store outputs
      out_d = sparse(48, 1);
      out_d(1) = out_1;
      out_d(2) = out_2;
      out_d(7) = out_7;
      out_d(8) = out_8;
      out_d(13) = out_13;
      out_d(14) = out_14;
      out_d(19) = out_19;
      out_d(20) = out_20;
      out_d(25) = out_25;
      out_d(26) = out_26;
      out_d(30) = out_30;
      out_d(31) = out_31;
      out_d(32) = out_32;
      out_d(36) = out_36;
      out_d(37) = out_37;
      out_d(38) = out_38;
      out_d(42) = out_42;
      out_d(43) = out_43;
      out_d(44) = out_44;
      out_d(48) = out_48;
    end % d
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_d_f = d_f( this, ~, ~ )
      % Evaluate the deformation vector d_f.

      % Extract properties
      A = this.m_data.A;
      I_z = this.m_data.I_z;

      % Extract inputs
      % No inputs

      % Evaluate function
      t1 = A ^ 2;
      t2 = t1 ^ 2;
      t3 = t2 ^ 2;
      t5 = t1 * A;
      t7 = I_z * t2 * t5;
      t10 = I_z ^ 2;
      t11 = t10 * t2 * t1;
      t14 = t10 * I_z;
      t15 = t14 * t2 * A;
      t17 = t10 ^ 2;
      t18 = t17 * t2;
      t21 = t17 * I_z * t5;
      t24 = t17 * t10 * t1;
      t27 = t17 * t14 * A;
      t29 = t17 ^ 2;
      t42 = 0.1e1 / (0.3264166121e183 * t3 + 0.5792105216e201 * t7 + 0.1468322533e203 * t11 + 0.9680973704e203 * t15 + 0.1647965977e204 * t18 - 0.1502852989e189 * t21 - 0.2488051873e174 * t24 + 0.5158301021e157 * t27 + 0.1186208295e142 * t29);
      out_1 = 0.1562500000e-1 * t42 * (0.4334469942e182 * t3 + 0.1534342657e201 * t7 + 0.3225167084e202 * t11 + 0.1649986898e203 * t15 + 0.1624045374e203 * t18 - 0.1150515315e188 * t21 - 0.6071044170e173 * t24 + 0.6463217396e157 * t27 + 0.7263838295e140 * t29);
      out_2 = -0.1953125000e-2 * t42 * (0.5129531358e183 * t3 + 0.1522380089e202 * t7 + 0.3543648805e203 * t11 + 0.2155933466e204 * t15 + 0.3758270728e204 * t18 - 0.7134071344e189 * t21 + 0.3008630923e173 * t24 + 0.9575019810e158 * t27 - 0.9185773732e142 * t29);
      out_6 = -0.9765625000e-3 * t42 * (0.1555711532e184 * t3 + 0.4187006081e202 * t7 + 0.9400197792e203 * t11 + 0.5495872076e204 * t15 + 0.8424974665e204 * t18 - 0.1628890534e190 * t21 - 0.5020517814e174 * t24 + 0.3554345926e159 * t27 - 0.2454835991e143 * t29);
      out_7 = 0.2500000000e0 * t42 * (0.3050056296e181 * t3 + 0.8600560536e199 * t7 + 0.2091394239e201 * t11 + 0.1394800164e202 * t15 + 0.2014587199e202 * t18 - 0.1327265356e187 * t21 - 0.5098382086e172 * t24 + 0.2876237336e157 * t27 - 0.2048269763e141 * t29);
      out_8 = -0.1e1 * t42 * (0.2949600965e181 * t3 + 0.4436828813e199 * t7 + 0.1032859144e201 * t11 + 0.5342864721e201 * t15 + 0.6002963585e201 * t18 - 0.8842166816e186 * t21 - 0.5253686546e171 * t24 + 0.3678120800e156 * t27 - 0.2777774933e140 * t29);
      out_12 = 0.1953125000e-2 * t42 * (0.7004744399e182 * t3 + 0.2163991879e201 * t7 + 0.4174512531e202 * t11 + 0.1384544639e203 * t15 + 0.4123714511e203 * t18 - 0.2356908129e189 * t21 + 0.3196701299e174 * t24 - 0.1498654950e159 * t27 + 0.9996371087e142 * t29);
      out_13 = 0.2500000000e0 * t42 * (0.1491619657e182 * t3 + 0.1849711361e200 * t7 + 0.4469709875e201 * t11 + 0.3103140009e202 * t15 + 0.6767455449e202 * t18 - 0.5768064838e187 * t21 - 0.1222163920e173 * t24 + 0.7193111443e156 * t27 + 0.6546881881e139 * t29);
      out_14 = -0.6250000000e-1 * t42 * (0.5783707510e182 * t3 + 0.8668718355e200 * t7 + 0.2072917863e202 * t11 + 0.1261831324e203 * t15 + 0.2133795496e203 * t18 - 0.2225885684e188 * t21 - 0.1763112627e173 * t24 + 0.1223452099e158 * t27 - 0.7221503965e141 * t29);
      out_18 = -0.7812500000e-2 * t42 * (0.1967023323e183 * t3 + 0.3779216577e201 * t7 + 0.9987529319e202 * t11 + 0.6714107434e203 * t15 + 0.1128502884e204 * t18 - 0.1042827050e189 * t21 - 0.1657371072e174 * t24 - 0.4647242194e158 * t27 + 0.4694103411e142 * t29);
      out_19 = 0.7812500000e-2 * t42 * (0.3970695410e183 * t3 + 0.5515383557e201 * t7 + 0.1370825045e203 * t11 + 0.9266737188e203 * t15 + 0.1588555274e204 * t18 - 0.2673438864e189 * t21 - 0.1967286506e174 * t24 + 0.6624162367e158 * t27 - 0.3536977220e142 * t29);
      out_20 = -0.1953125000e-2 * t42 * (0.6539747281e183 * t3 + 0.1772616098e202 * t7 + 0.4678062524e203 * t11 + 0.3259543956e204 * t15 + 0.6867844454e204 * t18 - 0.8826282965e189 * t21 - 0.8103783067e174 * t24 + 0.2898675178e159 * t27 - 0.1552128854e143 * t29);
      out_24 = 0.1953125000e-2 * t42 * (0.4437155384e183 * t3 + 0.8801570561e200 * t7 + 0.1444284972e202 * t11 + 0.1479635672e203 * t15 - 0.6420291958e203 * t18 - 0.2334340613e189 * t21 + 0.2932963031e173 * t24 - 0.3112627882e158 * t27 + 0.1716724570e142 * t29);

      % Store outputs
      out_d_f = zeros(24, 1);
      out_d_f(1) = out_1;
      out_d_f(2) = out_2;
      out_d_f(6) = out_6;
      out_d_f(7) = out_7;
      out_d_f(8) = out_8;
      out_d_f(12) = out_12;
      out_d_f(13) = out_13;
      out_d_f(14) = out_14;
      out_d_f(18) = out_18;
      out_d_f(19) = out_19;
      out_d_f(20) = out_20;
      out_d_f(24) = out_24;
    end % d_f
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_d_s = d_s( ~, ~, ~ )
      % Evaluate the deformation vector d_s.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_d_s = sparse(24, 1);
      out_d_s(1) = .1e-2;
      out_d_s(2) = -.1e-2;
      out_d_s(7) = .5e-2;
      out_d_s(8) = -.5e-2;
      out_d_s(13) = .14e-1;
      out_d_s(14) = -.14e-1;
      out_d_s(19) = .7e-2;
      out_d_s(20) = -.7e-2;
    end % d_s
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_f = f( this, ~, ~ )
      % Evaluate the force vector f.

      % Extract properties
      A = this.m_data.A;
      I_z = this.m_data.I_z;

      % Extract inputs
      % No inputs

      % Evaluate function
      t1 = 0.883883476483184154e3 * A;
      t3 = -t1 - 0.828640759202985464e4 * I_z;
      t4 = A ^ 2;
      t5 = t4 ^ 2;
      t6 = t5 ^ 2;
      t8 = t4 * A;
      t10 = I_z * t5 * t8;
      t13 = I_z ^ 2;
      t14 = t13 * t5 * t4;
      t17 = t13 * I_z;
      t18 = t17 * t5 * A;
      t20 = t13 ^ 2;
      t21 = t20 * t5;
      t24 = t20 * I_z * t8;
      t27 = t20 * t13 * t4;
      t30 = t20 * t17 * A;
      t32 = t20 ^ 2;
      t34 = 0.4334469942e182 * t6 + 0.1534342657e201 * t10 + 0.3225167084e202 * t14 + 0.1649986898e203 * t18 + 0.1624045374e203 * t21 - 0.1150515315e188 * t24 - 0.6071044170e173 * t27 + 0.6463217396e157 * t30 + 0.7263838295e140 * t32;
      t46 = 0.1e1 / (0.3264166121e183 * t6 + 0.5792105216e201 * t10 + 0.1468322533e203 * t14 + 0.9680973704e203 * t18 + 0.1647965977e204 * t21 - 0.1502852989e189 * t24 - 0.2488051873e174 * t27 + 0.5158301021e157 * t30 + 0.1186208295e142 * t32);
      t50 = -t1 + I_z * 0.828640759202985464e4;
      t60 = 0.5129531358e183 * t6 + 0.1522380089e202 * t10 + 0.3543648805e203 * t14 + 0.2155933466e204 * t18 + 0.3758270728e204 * t21 - 0.7134071344e189 * t24 + 0.3008630923e173 * t27 + 0.9575019810e158 * t30 - 0.9185773732e142 * t32;
      t75 = t46 * (0.1555711532e184 * t6 + 0.4187006081e202 * t10 + 0.9400197792e203 * t14 + 0.5495872076e204 * t18 + 0.8424974665e204 * t21 - 0.1628890534e190 * t24 - 0.5020517814e174 * t27 + 0.3554345926e159 * t30 - 0.2454835991e143 * t32) * I_z;
      out_1 = 0.1562500000e-1 * t46 * t34 * t3 - 0.1953125000e-2 * t46 * t60 * t50 + t75 * 0.647375593127332127e1 - 0.2e1 * A + I_z * 0.143228151840597100e2;
      out_2 = 0.1562500000e-1 * t46 * t34 * t50 - 0.1953125000e-2 * t46 * t60 * t3 - 0.647375593127332127e1 * t75 + A * 0.300000000000000044e1 - 0.150728151840597100e2 * I_z;
      out_6 = 0.4500e1 * I_z;
      t100 = 0.3050056296e181 * t6 + 0.8600560536e199 * t10 + 0.2091394239e201 * t14 + 0.1394800164e202 * t18 + 0.2014587199e202 * t21 - 0.1327265356e187 * t24 - 0.5098382086e172 * t27 + 0.2876237336e157 * t30 - 0.2048269763e141 * t32;
      t106 = A * 0.589255650988789398e3 - 0.245523187911995728e4 * I_z;
      t116 = 0.2949600965e181 * t6 + 0.4436828813e199 * t10 + 0.1032859144e201 * t14 + 0.5342864721e201 * t18 + 0.6002963585e201 * t21 - 0.8842166816e186 * t24 - 0.5253686546e171 * t27 + 0.3678120800e156 * t30 - 0.2777774933e140 * t32;
      t131 = t46 * (0.7004744399e182 * t6 + 0.2163991879e201 * t10 + 0.4174512531e202 * t14 + 0.1384544639e203 * t18 + 0.4123714511e203 * t21 - 0.2356908129e189 * t24 + 0.3196701299e174 * t27 - 0.1498654950e159 * t30 + 0.9996371087e142 * t32) * I_z;
      out_7 = 0.2500000000e0 * t46 * t100 * (-0.589255650988789625e3 * A - 0.245523187911995637e4 * I_z) - 0.1e1 * t46 * t116 * t106 - 0.575444971668739491e1 * t131 + A * 0.789255650988789448e1 - 0.100000000000000711e1 * I_z;
      out_8 = 0.2500000000e0 * t46 * t100 * t106 - 0.1e1 * t46 * t116 * (-0.589255650988789284e3 * A - 0.245523187911995774e4 * I_z) - 0.575444971668739669e1 * t131 - 0.150000000000000178e1 * I_z - 0.289255650988789359e1 * A;
      out_12 = 0.3000e1 * I_z;
      t159 = 0.1491619657e182 * t6 + 0.1849711361e200 * t10 + 0.4469709875e201 * t14 + 0.3103140009e202 * t18 + 0.6767455449e202 * t21 - 0.5768064838e187 * t24 - 0.1222163920e173 * t27 + 0.7193111443e156 * t30 + 0.6546881881e139 * t32;
      t165 = -0.357770876399966369e3 * A + I_z * 0.858650103359919399e3;
      t175 = 0.5783707510e182 * t6 + 0.8668718355e200 * t10 + 0.2072917863e202 * t14 + 0.1261831324e203 * t18 + 0.2133795496e203 * t21 - 0.2225885684e188 * t24 - 0.1763112627e173 * t27 + 0.1223452099e158 * t30 - 0.7221503965e141 * t32;
      t190 = t46 * (0.1967023323e183 * t6 + 0.3779216577e201 * t10 + 0.9987529319e202 * t14 + 0.6714107434e203 * t18 + 0.1128502884e204 * t21 - 0.1042827050e189 * t24 - 0.1657371072e174 * t27 - 0.4647242194e158 * t30 + 0.4694103411e142 * t32) * I_z;
      out_13 = 0.2500000000e0 * t46 * t159 * (-0.178885438199983184e3 * A - 0.171730020671983880e4 * I_z) - 0.6250000000e-1 * t46 * t175 * t165 - 0.167705098312484253e2 * t190 + I_z * 0.381902826017765094e2 - 0.125219806739988204e1 * A;
      out_14 = 0.2500000000e0 * t46 * t159 * t165 - 0.6250000000e-1 * t46 * t175 * (-0.715541752799932738e3 * A - 0.429325051679959699e3 * I_z) + t190 * 0.838525491562421266e1 - 0.738269323589958848e1 * A - 0.202856086918780960e2 * I_z;
      out_18 = I_z * 0.299999999999999956e1;
      t218 = 0.3970695410e183 * t6 + 0.5515383557e201 * t10 + 0.1370825045e203 * t14 + 0.9266737188e203 * t18 + 0.1588555274e204 * t21 - 0.2673438864e189 * t24 - 0.1967286506e174 * t27 + 0.6624162367e158 * t30 - 0.3536977220e142 * t32;
      t224 = A * 0.883883476483184154e3 - 0.828640759202985100e4 * I_z;
      t234 = 0.6539747281e183 * t6 + 0.1772616098e202 * t10 + 0.4678062524e203 * t14 + 0.3259543956e204 * t18 + 0.6867844454e204 * t21 - 0.8826282965e189 * t24 - 0.8103783067e174 * t27 + 0.2898675178e159 * t30 - 0.1552128854e143 * t32;
      t249 = t46 * (0.4437155384e183 * t6 + 0.8801570561e200 * t10 + 0.1444284972e202 * t14 + 0.1479635672e203 * t18 - 0.6420291958e203 * t21 - 0.2334340613e189 * t24 + 0.2932963031e173 * t27 - 0.3112627882e158 * t30 + 0.1716724570e142 * t32) * I_z;
      out_19 = 0.7812500000e-2 * t46 * t218 * (-0.883883476483184495e3 * A - 0.828640759202984736e4 * I_z) - 0.1953125000e-2 * t46 * t234 * t224 + t249 * 0.129475118625466461e2 + I_z * 0.112302173934007987e1 + A * 0.111221706033646957e2;
      out_20 = 0.7812500000e-2 * t46 * t218 * t224 - 0.1953125000e-2 * t46 * t234 * (-0.883883476483183813e3 * A - 0.828640759202985282e4 * I_z) + t249 * 0.129475118625466497e2 - 0.160004677044645156e2 * A + I_z * 0.225395652131977497e1;
      out_24 = I_z * 0.563489130329947141e1;

      % Store outputs
      out_f = sparse(48, 1);
      out_f(1) = out_1;
      out_f(2) = out_2;
      out_f(6) = out_6;
      out_f(7) = out_7;
      out_f(8) = out_8;
      out_f(12) = out_12;
      out_f(13) = out_13;
      out_f(14) = out_14;
      out_f(18) = out_18;
      out_f(19) = out_19;
      out_f(20) = out_20;
      out_f(24) = out_24;
    end % f
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_f_f = f_f( ~, ~, ~ )
      % Evaluate the force vector f_f.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_f_f = sparse(24, 1);
    end % f_f
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_f_s = f_s( this, ~, ~ )
      % Evaluate the force vector f_s.

      % Extract properties
      A = this.m_data.A;
      I_z = this.m_data.I_z;

      % Extract inputs
      % No inputs

      % Evaluate function
      t1 = 0.883883476483184154e3 * A;
      t3 = -t1 - 0.828640759202985464e4 * I_z;
      t4 = A ^ 2;
      t5 = t4 ^ 2;
      t6 = t5 ^ 2;
      t8 = t4 * A;
      t10 = I_z * t5 * t8;
      t13 = I_z ^ 2;
      t14 = t13 * t5 * t4;
      t17 = t13 * I_z;
      t18 = t17 * t5 * A;
      t20 = t13 ^ 2;
      t21 = t20 * t5;
      t24 = t20 * I_z * t8;
      t27 = t20 * t13 * t4;
      t30 = t20 * t17 * A;
      t32 = t20 ^ 2;
      t34 = 0.4334469942e182 * t6 + 0.1534342657e201 * t10 + 0.3225167084e202 * t14 + 0.1649986898e203 * t18 + 0.1624045374e203 * t21 - 0.1150515315e188 * t24 - 0.6071044170e173 * t27 + 0.6463217396e157 * t30 + 0.7263838295e140 * t32;
      t46 = 0.1e1 / (0.3264166121e183 * t6 + 0.5792105216e201 * t10 + 0.1468322533e203 * t14 + 0.9680973704e203 * t18 + 0.1647965977e204 * t21 - 0.1502852989e189 * t24 - 0.2488051873e174 * t27 + 0.5158301021e157 * t30 + 0.1186208295e142 * t32);
      t50 = -t1 + I_z * 0.828640759202985464e4;
      t60 = 0.5129531358e183 * t6 + 0.1522380089e202 * t10 + 0.3543648805e203 * t14 + 0.2155933466e204 * t18 + 0.3758270728e204 * t21 - 0.7134071344e189 * t24 + 0.3008630923e173 * t27 + 0.9575019810e158 * t30 - 0.9185773732e142 * t32;
      t75 = t46 * (0.1555711532e184 * t6 + 0.4187006081e202 * t10 + 0.9400197792e203 * t14 + 0.5495872076e204 * t18 + 0.8424974665e204 * t21 - 0.1628890534e190 * t24 - 0.5020517814e174 * t27 + 0.3554345926e159 * t30 - 0.2454835991e143 * t32) * I_z;
      out_1 = 0.1562500000e-1 * t46 * t34 * t3 - 0.1953125000e-2 * t46 * t60 * t50 + t75 * 0.647375593127332127e1 - 0.2e1 * A + I_z * 0.143228151840597100e2;
      out_2 = 0.1562500000e-1 * t46 * t34 * t50 - 0.1953125000e-2 * t46 * t60 * t3 - 0.647375593127332127e1 * t75 + A * 0.300000000000000044e1 - 0.150728151840597100e2 * I_z;
      out_6 = 0.4500e1 * I_z;
      t100 = 0.3050056296e181 * t6 + 0.8600560536e199 * t10 + 0.2091394239e201 * t14 + 0.1394800164e202 * t18 + 0.2014587199e202 * t21 - 0.1327265356e187 * t24 - 0.5098382086e172 * t27 + 0.2876237336e157 * t30 - 0.2048269763e141 * t32;
      t106 = A * 0.589255650988789398e3 - 0.245523187911995728e4 * I_z;
      t116 = 0.2949600965e181 * t6 + 0.4436828813e199 * t10 + 0.1032859144e201 * t14 + 0.5342864721e201 * t18 + 0.6002963585e201 * t21 - 0.8842166816e186 * t24 - 0.5253686546e171 * t27 + 0.3678120800e156 * t30 - 0.2777774933e140 * t32;
      t131 = t46 * (0.7004744399e182 * t6 + 0.2163991879e201 * t10 + 0.4174512531e202 * t14 + 0.1384544639e203 * t18 + 0.4123714511e203 * t21 - 0.2356908129e189 * t24 + 0.3196701299e174 * t27 - 0.1498654950e159 * t30 + 0.9996371087e142 * t32) * I_z;
      out_7 = 0.2500000000e0 * t46 * t100 * (-0.589255650988789625e3 * A - 0.245523187911995637e4 * I_z) - 0.1e1 * t46 * t116 * t106 - 0.575444971668739491e1 * t131 + A * 0.789255650988789448e1 - 0.100000000000000711e1 * I_z;
      out_8 = 0.2500000000e0 * t46 * t100 * t106 - 0.1e1 * t46 * t116 * (-0.589255650988789284e3 * A - 0.245523187911995774e4 * I_z) - 0.575444971668739669e1 * t131 - 0.150000000000000178e1 * I_z - 0.289255650988789359e1 * A;
      out_12 = 0.3000e1 * I_z;
      t159 = 0.1491619657e182 * t6 + 0.1849711361e200 * t10 + 0.4469709875e201 * t14 + 0.3103140009e202 * t18 + 0.6767455449e202 * t21 - 0.5768064838e187 * t24 - 0.1222163920e173 * t27 + 0.7193111443e156 * t30 + 0.6546881881e139 * t32;
      t165 = -0.357770876399966369e3 * A + I_z * 0.858650103359919399e3;
      t175 = 0.5783707510e182 * t6 + 0.8668718355e200 * t10 + 0.2072917863e202 * t14 + 0.1261831324e203 * t18 + 0.2133795496e203 * t21 - 0.2225885684e188 * t24 - 0.1763112627e173 * t27 + 0.1223452099e158 * t30 - 0.7221503965e141 * t32;
      t190 = t46 * (0.1967023323e183 * t6 + 0.3779216577e201 * t10 + 0.9987529319e202 * t14 + 0.6714107434e203 * t18 + 0.1128502884e204 * t21 - 0.1042827050e189 * t24 - 0.1657371072e174 * t27 - 0.4647242194e158 * t30 + 0.4694103411e142 * t32) * I_z;
      out_13 = 0.2500000000e0 * t46 * t159 * (-0.178885438199983184e3 * A - 0.171730020671983880e4 * I_z) - 0.6250000000e-1 * t46 * t175 * t165 - 0.167705098312484253e2 * t190 + I_z * 0.381902826017765094e2 - 0.125219806739988204e1 * A;
      out_14 = 0.2500000000e0 * t46 * t159 * t165 - 0.6250000000e-1 * t46 * t175 * (-0.715541752799932738e3 * A - 0.429325051679959699e3 * I_z) + t190 * 0.838525491562421266e1 - 0.738269323589958848e1 * A - 0.202856086918780960e2 * I_z;
      out_18 = I_z * 0.299999999999999956e1;
      t218 = 0.3970695410e183 * t6 + 0.5515383557e201 * t10 + 0.1370825045e203 * t14 + 0.9266737188e203 * t18 + 0.1588555274e204 * t21 - 0.2673438864e189 * t24 - 0.1967286506e174 * t27 + 0.6624162367e158 * t30 - 0.3536977220e142 * t32;
      t224 = A * 0.883883476483184154e3 - 0.828640759202985100e4 * I_z;
      t234 = 0.6539747281e183 * t6 + 0.1772616098e202 * t10 + 0.4678062524e203 * t14 + 0.3259543956e204 * t18 + 0.6867844454e204 * t21 - 0.8826282965e189 * t24 - 0.8103783067e174 * t27 + 0.2898675178e159 * t30 - 0.1552128854e143 * t32;
      t249 = t46 * (0.4437155384e183 * t6 + 0.8801570561e200 * t10 + 0.1444284972e202 * t14 + 0.1479635672e203 * t18 - 0.6420291958e203 * t21 - 0.2334340613e189 * t24 + 0.2932963031e173 * t27 - 0.3112627882e158 * t30 + 0.1716724570e142 * t32) * I_z;
      out_19 = 0.7812500000e-2 * t46 * t218 * (-0.883883476483184495e3 * A - 0.828640759202984736e4 * I_z) - 0.1953125000e-2 * t46 * t234 * t224 + t249 * 0.129475118625466461e2 + I_z * 0.112302173934007987e1 + A * 0.111221706033646957e2;
      out_20 = 0.7812500000e-2 * t46 * t218 * t224 - 0.1953125000e-2 * t46 * t234 * (-0.883883476483183813e3 * A - 0.828640759202985282e4 * I_z) + t249 * 0.129475118625466497e2 - 0.160004677044645156e2 * A + I_z * 0.225395652131977497e1;
      out_24 = I_z * 0.563489130329947141e1;

      % Store outputs
      out_f_s = zeros(24, 1);
      out_f_s(1) = out_1;
      out_f_s(2) = out_2;
      out_f_s(6) = out_6;
      out_f_s(7) = out_7;
      out_f_s(8) = out_8;
      out_f_s(12) = out_12;
      out_f_s(13) = out_13;
      out_f_s(14) = out_14;
      out_f_s(18) = out_18;
      out_f_s(19) = out_19;
      out_f_s(20) = out_20;
      out_f_s(24) = out_24;
    end % f_s
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_f_r = f_r( ~, ~, ~ )
      % Evaluate the force vector f_r.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_f_r = sparse(24, 1);
    end % f_r
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_perm = perm( ~ )
      % Evaluate the permutation vector.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_perm = zeros(48, 1);
      out_perm(1) = 25;
      out_perm(2) = 26;
      out_perm(3) = 27;
      out_perm(4) = 28;
      out_perm(5) = 29;
      out_perm(6) = 30;
      out_perm(7) = 31;
      out_perm(8) = 32;
      out_perm(9) = 33;
      out_perm(10) = 34;
      out_perm(11) = 35;
      out_perm(12) = 36;
      out_perm(13) = 37;
      out_perm(14) = 38;
      out_perm(15) = 39;
      out_perm(16) = 40;
      out_perm(17) = 41;
      out_perm(18) = 42;
      out_perm(19) = 43;
      out_perm(20) = 44;
      out_perm(21) = 45;
      out_perm(22) = 46;
      out_perm(23) = 47;
      out_perm(24) = 48;
      out_perm(25) = 1;
      out_perm(26) = 2;
      out_perm(27) = 3;
      out_perm(28) = 4;
      out_perm(29) = 5;
      out_perm(30) = 6;
      out_perm(31) = 7;
      out_perm(32) = 8;
      out_perm(33) = 9;
      out_perm(34) = 10;
      out_perm(35) = 11;
      out_perm(36) = 12;
      out_perm(37) = 13;
      out_perm(38) = 14;
      out_perm(39) = 15;
      out_perm(40) = 16;
      out_perm(41) = 17;
      out_perm(42) = 18;
      out_perm(43) = 19;
      out_perm(44) = 20;
      out_perm(45) = 21;
      out_perm(46) = 22;
      out_perm(47) = 23;
      out_perm(48) = 24;
    end % perm
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_unperm = unperm( ~ )
      % Evaluate the unpermutation vector.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_unperm = zeros(48, 1);
      out_unperm(1) = 25;
      out_unperm(2) = 26;
      out_unperm(3) = 27;
      out_unperm(4) = 28;
      out_unperm(5) = 29;
      out_unperm(6) = 30;
      out_unperm(7) = 31;
      out_unperm(8) = 32;
      out_unperm(9) = 33;
      out_unperm(10) = 34;
      out_unperm(11) = 35;
      out_unperm(12) = 36;
      out_unperm(13) = 37;
      out_unperm(14) = 38;
      out_unperm(15) = 39;
      out_unperm(16) = 40;
      out_unperm(17) = 41;
      out_unperm(18) = 42;
      out_unperm(19) = 43;
      out_unperm(20) = 44;
      out_unperm(21) = 45;
      out_unperm(22) = 46;
      out_unperm(23) = 47;
      out_unperm(24) = 48;
      out_unperm(25) = 1;
      out_unperm(26) = 2;
      out_unperm(27) = 3;
      out_unperm(28) = 4;
      out_unperm(29) = 5;
      out_unperm(30) = 6;
      out_unperm(31) = 7;
      out_unperm(32) = 8;
      out_unperm(33) = 9;
      out_unperm(34) = 10;
      out_unperm(35) = 11;
      out_unperm(36) = 12;
      out_unperm(37) = 13;
      out_unperm(38) = 14;
      out_unperm(39) = 15;
      out_unperm(40) = 16;
      out_unperm(41) = 17;
      out_unperm(42) = 18;
      out_unperm(43) = 19;
      out_unperm(44) = 20;
      out_unperm(45) = 21;
      out_unperm(46) = 22;
      out_unperm(47) = 23;
      out_unperm(48) = 24;
    end % unperm
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
    function out_v = v( ~, ~ )
      % Evaluate the veiling vector.

      % Extract properties
      % No properties

      % Extract inputs
      % No inputs

      % Evaluate function
      % No body

      % Store outputs
      out_v = zeros(0, 1);
    end % v
    %
    % - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %
  end
end % Test_15

% That's All Folks!
